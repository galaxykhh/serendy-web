{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonghan/VSCode/React/Serendy/client/src/components/ChatPage/ChatWindow.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { slideUp } from '../../style/keyframes';\nimport Loader from 'react-loader-spinner';\nimport { theme } from '../../style/theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatWindow = () => {\n  _s();\n\n  const [isSearching, setIsSearching] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      children: [/*#__PURE__*/_jsxDEV(Screen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SenderBox, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SendBtn, {\n          children: \"\\uC804\\uC1A1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HandlerContainer, {\n      children: [/*#__PURE__*/_jsxDEV(BigMent, {\n        children: \" \\uC0C1\\uB300\\uB97C \\uCC3E\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Circles\",\n        color: theme.colors.orange,\n        height: 60,\n        width: 60\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Ment, {\n        children: \" \\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatWindow, \"wDE+40mA8wP2z8a3CAJV8D22TFE=\");\n\n_c = ChatWindow;\nexport default ChatWindow;\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    @media only screen and (max-width: 1450px) {\n        flex-direction: column;\n    }\n`;\n_c2 = Row;\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-right: 20px;\n    width: 100%;\n    @media only screen and (max-width: 1450px) {\n        margin-right: 0px;\n        height: 90%;\n    }\n`;\n_c3 = Column;\nconst Screen = styled.div`\n    width: 740px;\n    height: 680px;\n    min-width: 500px;\n    background-color: ${({\n  theme\n}) => theme.colors.white20};\n    border-radius: 30px;\n    border: 1px solid ${({\n  theme\n}) => theme.colors.white};\n    @media only screen and (max-width: 1450px) {\n        width: 99%;\n        height: 70%;\n        min-width: 300px;\n    };\n`;\n_c4 = Screen;\nconst SenderBox = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 10px;\n    width: 740px;\n    min-width: 500px;\n    height: 50px;\n    @media only screen and (max-width: 1450px) {\n        width: 98%;\n        min-width: 200px;\n    }\n`;\n_c5 = SenderBox;\nconst Input = styled.input`\n    all: unset;\n    width: 84%;\n    min-height: 50px;\n    padding-left: 30px;\n    font-size: 18px;\n    color: ${({\n  theme\n}) => theme.colors.black};\n    background-color: ${({\n  theme\n}) => theme.colors.white20};\n    border: 1px solid ${({\n  theme\n}) => theme.colors.white};\n    border-radius: 30px;\n    @media only screen and (max-width: 400px) {\n        width: 99%;\n    }\n`;\n_c6 = Input;\nconst SendBtn = styled.button`\n    all: unset;\n    width: 10%;\n    height: 50px;\n    font-size: 18px;\n    text-align: center;\n    border: 1px solid ${({\n  theme\n}) => theme.colors.white};\n    background-color: ${({\n  theme\n}) => theme.colors.white20};\n    border-radius: 30px;\n    color: ${({\n  theme\n}) => theme.colors.white};\n    cursor: pointer;\n    transition: .3s ease;\n    &:hover {\n        background-color: ${({\n  theme\n}) => theme.colors.white};\n        color: ${({\n  theme\n}) => theme.colors.black};\n    }\n    @media only screen and (max-width: 1450px) {\n        width: 11%;\n    }\n    @media only screen and (max-width: 400px) {\n        display: none;\n    }\n`;\n_c7 = SendBtn;\nconst HandlerContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    min-width: 300px;\n    height: 740px;\n    background-color: ${({\n  theme\n}) => theme.colors.white20};\n    border: 1px solid ${({\n  theme\n}) => theme.colors.white};\n    animation: ${slideUp} .7s ease;\n    border-radius: 30px;\n    @media only screen and (max-width: 1450px) {\n        height: 70%;\n    }\n`;\n_c8 = HandlerContainer;\nconst Rule = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n`;\nconst Ment = styled.div`\n    font-size: 18px;\n    margin-bottom: 10px;\n    @media only screen and (max-width: 1520px) {\n        font-size: 15px;\n    }\n`;\n_c9 = Ment;\nconst BigMent = styled(Ment)`\n    font-size: 30px;\n    @media only screen and (max-width: 1520px) {\n        font-size: 25px;\n    }\n`;\n_c10 = BigMent;\nconst StartBtn = styled(SendBtn)`\n    width: 150px;\n    height: 70px;\n    background-color: rgba(0, 0, 0, 0);\n    border: 1px solid ${({\n  theme\n}) => theme.colors.white};\n`;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"ChatWindow\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"Column\");\n$RefreshReg$(_c4, \"Screen\");\n$RefreshReg$(_c5, \"SenderBox\");\n$RefreshReg$(_c6, \"Input\");\n$RefreshReg$(_c7, \"SendBtn\");\n$RefreshReg$(_c8, \"HandlerContainer\");\n$RefreshReg$(_c9, \"Ment\");\n$RefreshReg$(_c10, \"BigMent\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/components/ChatPage/ChatWindow.tsx"],"names":["React","useState","styled","slideUp","Loader","theme","ChatWindow","isSearching","setIsSearching","colors","orange","Row","div","Column","Screen","white20","white","SenderBox","Input","input","black","SendBtn","button","HandlerContainer","Rule","Ment","BigMent","StartBtn"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { slideUp } from '../../style/keyframes';\nimport Loader from 'react-loader-spinner';\nimport { theme } from '../../style/theme';\n\nconst ChatWindow: React.FC = () => {\n    const [isSearching, setIsSearching] = useState<boolean>(false);\n\n    return (\n        <Row>\n            <Column>\n            <Screen />\n            <SenderBox>\n                <Input />\n                <SendBtn>\n                    전송\n                </SendBtn>\n            </SenderBox>\n            </Column>\n\n            <HandlerContainer>\n                {/* <BigMent> 버튼을 눌러 상대를 찾게되면 </BigMent>\n                <BigMent> 낯선 누군가와 대화가 시작됩니다! </BigMent>\n                <br />\n                \n                <Rule>\n                    <Ment size='18px'> · 서로의 이름은 각각 설정된 닉네임으로 진행됩니다 </Ment>\n                    <Ment size='18px'> · 상대가 마음에 들면 쪽지 요청을 보낼 수 있습니다 </Ment>\n                    <Ment size='18px'> · 요청이 수락되면 채팅이 끝나도 쪽지를 주고 받을 수 있습니다 </Ment>\n                    <Ment size='18px'> · 한명이라도 채팅방을 나가게되면 더 진행되지 않습니다 </Ment>\n                </Rule>\n                <br />\n                <StartBtn> 상대 찾기 </StartBtn> */}\n                <BigMent> 상대를 찾고 있습니다 </BigMent>\n                <Loader type=\"Circles\" color={theme.colors.orange} height={60} width={60} />\n                <Ment> 잠시만 기다려주세요 </Ment>\n            </HandlerContainer>\n            \n        </Row>\n    );\n};\n\nexport default ChatWindow;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    @media only screen and (max-width: 1450px) {\n        flex-direction: column;\n    }\n`;\n\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-right: 20px;\n    width: 100%;\n    @media only screen and (max-width: 1450px) {\n        margin-right: 0px;\n        height: 90%;\n    }\n`;\n\nconst Screen = styled.div`\n    width: 740px;\n    height: 680px;\n    min-width: 500px;\n    background-color: ${({ theme }) => theme.colors.white20};\n    border-radius: 30px;\n    border: 1px solid ${({ theme }) => theme.colors.white};\n    @media only screen and (max-width: 1450px) {\n        width: 99%;\n        height: 70%;\n        min-width: 300px;\n    };\n`;\n\nconst SenderBox = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 10px;\n    width: 740px;\n    min-width: 500px;\n    height: 50px;\n    @media only screen and (max-width: 1450px) {\n        width: 98%;\n        min-width: 200px;\n    }\n`;\n\nconst Input = styled.input`\n    all: unset;\n    width: 84%;\n    min-height: 50px;\n    padding-left: 30px;\n    font-size: 18px;\n    color: ${({ theme }) => theme.colors.black};\n    background-color: ${({ theme }) => theme.colors.white20};\n    border: 1px solid ${({ theme }) => theme.colors.white};\n    border-radius: 30px;\n    @media only screen and (max-width: 400px) {\n        width: 99%;\n    }\n`;\n\nconst SendBtn = styled.button`\n    all: unset;\n    width: 10%;\n    height: 50px;\n    font-size: 18px;\n    text-align: center;\n    border: 1px solid ${({ theme }) => theme.colors.white};\n    background-color: ${({ theme }) => theme.colors.white20};\n    border-radius: 30px;\n    color: ${({ theme }) => theme.colors.white};\n    cursor: pointer;\n    transition: .3s ease;\n    &:hover {\n        background-color: ${({ theme }) => theme.colors.white};\n        color: ${({ theme }) => theme.colors.black};\n    }\n    @media only screen and (max-width: 1450px) {\n        width: 11%;\n    }\n    @media only screen and (max-width: 400px) {\n        display: none;\n    }\n`;\n\nconst HandlerContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    min-width: 300px;\n    height: 740px;\n    background-color: ${({ theme }) => theme.colors.white20};\n    border: 1px solid ${({ theme }) => theme.colors.white};\n    animation: ${slideUp} .7s ease;\n    border-radius: 30px;\n    @media only screen and (max-width: 1450px) {\n        height: 70%;\n    }\n`;\n\nconst Rule = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n`;\n\nconst Ment = styled.div<{ size?: string }>`\n    font-size: 18px;\n    margin-bottom: 10px;\n    @media only screen and (max-width: 1520px) {\n        font-size: 15px;\n    }\n`;\n\nconst BigMent = styled(Ment)`\n    font-size: 30px;\n    @media only screen and (max-width: 1520px) {\n        font-size: 25px;\n    }\n`;\n\nconst StartBtn = styled(SendBtn)`\n    width: 150px;\n    height: 70px;\n    background-color: rgba(0, 0, 0, 0);\n    border: 1px solid ${({ theme }) => theme.colors.white};\n`;"]},"metadata":{},"sourceType":"module"}