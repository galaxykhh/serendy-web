{"ast":null,"code":"import { action, computed, makeObservable, observable } from \"mobx\";\n\nclass AuthStore {\n  constructor() {\n    this._account = '';\n    this._password = '';\n    this._secretMessage = '';\n    this._isLogged = false;\n    makeObservable(this, {\n      _account: observable,\n      _password: observable,\n      _isLogged: observable,\n      _secretMessage: observable,\n      account: computed,\n      password: computed,\n      secretMessage: computed,\n      isLogged: computed,\n      setAccount: action,\n      setPassword: action\n    });\n  }\n\n  get account() {\n    return this._account;\n  }\n\n  get password() {\n    return this._password;\n  }\n\n  get secretMessage() {\n    return this._secretMessage;\n  }\n\n  get isLogged() {\n    return this._isLogged;\n  }\n\n  setAccount(account) {\n    this._account = account;\n  }\n\n  setPassword(password) {\n    this._password = password;\n  }\n\n}\n\nconst authStore = new AuthStore();\nexport default authStore;","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/src/store/authStore.ts"],"names":["action","computed","makeObservable","observable","AuthStore","constructor","_account","_password","_secretMessage","_isLogged","account","password","secretMessage","isLogged","setAccount","setPassword","authStore"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,cAA3B,EAA2CC,UAA3C,QAA6D,MAA7D;;AAaA,MAAMC,SAAN,CAAoC;AAQhCC,EAAAA,WAAW,GAAG;AAAA,SANNC,QAMM,GANa,EAMb;AAAA,SALNC,SAKM,GALc,EAKd;AAAA,SAJNC,cAIM,GAJmB,EAInB;AAAA,SAHNC,SAGM,GAHe,KAGf;AACVP,IAAAA,cAAc,CAAuE,IAAvE,EAA6E;AACvFI,MAAAA,QAAQ,EAAEH,UAD6E;AAEvFI,MAAAA,SAAS,EAAEJ,UAF4E;AAGvFM,MAAAA,SAAS,EAAEN,UAH4E;AAIvFK,MAAAA,cAAc,EAAEL,UAJuE;AAKvFO,MAAAA,OAAO,EAAET,QAL8E;AAMvFU,MAAAA,QAAQ,EAAEV,QAN6E;AAOvFW,MAAAA,aAAa,EAAEX,QAPwE;AAQvFY,MAAAA,QAAQ,EAAEZ,QAR6E;AASvFa,MAAAA,UAAU,EAAEd,MAT2E;AAUvFe,MAAAA,WAAW,EAAEf;AAV0E,KAA7E,CAAd;AAYH;;AACU,MAAPU,OAAO,GAAW;AAClB,WAAO,KAAKJ,QAAZ;AACH;;AAEW,MAARK,QAAQ,GAAW;AACnB,WAAO,KAAKJ,SAAZ;AACH;;AAEgB,MAAbK,aAAa,GAAW;AACxB,WAAO,KAAKJ,cAAZ;AACH;;AAEW,MAARK,QAAQ,GAAY;AACpB,WAAO,KAAKJ,SAAZ;AACH;;AAEDK,EAAAA,UAAU,CAACJ,OAAD,EAAwB;AAC9B,SAAKJ,QAAL,GAAgBI,OAAhB;AACH;;AAEDK,EAAAA,WAAW,CAACJ,QAAD,EAAyB;AAChC,SAAKJ,SAAL,GAAiBI,QAAjB;AACH;;AA5C+B;;AA+CpC,MAAMK,SAAS,GAAG,IAAIZ,SAAJ,EAAlB;AACA,eAAeY,SAAf","sourcesContent":["import { action, computed, makeObservable, observable } from \"mobx\";\nimport serendyRepository from \"../repository/serendyRepository\";\n\ninterface IAccount {\n    account: string;\n    password: string;\n    secretMessage: string;\n}\n\ninterface IUser {\n    nickname: string;\n}\n\nclass AuthStore implements IAccount {\n\n    private _account: string = '';\n    private _password: string = '';\n    private _secretMessage: string = '';\n    private _isLogged: boolean = false;\n\n\n    constructor() {\n        makeObservable<AuthStore, '_account' | '_password' | '_isLogged' | '_secretMessage'>(this, {\n            _account: observable,\n            _password: observable,\n            _isLogged: observable,\n            _secretMessage: observable,\n            account: computed,\n            password: computed,\n            secretMessage: computed,\n            isLogged: computed,\n            setAccount: action,\n            setPassword: action,\n        })\n    }\n    get account(): string {\n        return this._account;\n    };\n\n    get password(): string {\n        return this._password;\n    };\n\n    get secretMessage(): string {\n        return this._secretMessage;\n    }\n\n    get isLogged(): boolean {\n        return this._isLogged;\n    }\n\n    setAccount(account: string): void {\n        this._account = account;\n    };\n\n    setPassword(password: string): void {\n        this._password = password;\n    };\n}\n\nconst authStore = new AuthStore();\nexport default authStore;"]},"metadata":{},"sourceType":"module"}