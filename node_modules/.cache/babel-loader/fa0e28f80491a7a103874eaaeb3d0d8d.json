{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonghan/VSCode/React/serendy-flutter/src/components/SignIn/SignInBox.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faUserAlt } from '@fortawesome/free-solid-svg-icons';\nimport { useForm } from 'react-hook-form';\nimport { theme } from '../../style/theme';\nimport userStore from '../../store/userStore';\nimport { zoomIn } from '../../style/keyframes';\nimport { observer } from 'mobx-react';\nimport Loader from 'react-loader-spinner';\nimport { TextLogo } from '../SharedComponents/TextLogo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignInBox = observer(_c = _s(({\n  onSubmit,\n  pushSignUp,\n  pushFindPW\n}) => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !userStore.isLogging ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(TextLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              icon: faUserAlt,\n              color: errors.account ? theme.colors.red : theme.colors.white\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"\\uC544\\uC774\\uB514\",\n              ...register('account', {\n                required: '아이디를 입력해주세요',\n                pattern: {\n                  value: /^[a-zA-Z0-9]+$/,\n                  message: '영문과 숫자만을 조합하여 입력해주세요'\n                },\n                minLength: {\n                  value: 5,\n                  message: '아이디가 너무 짧아요'\n                },\n                maxLength: {\n                  value: 19,\n                  message: '아이디가 너무 길어요'\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), errors.account ? /*#__PURE__*/_jsxDEV(ErrorMsg, {\n            children: [\" \", errors.account.message, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 43\n          }, this) : 'ㅤ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              icon: faLock,\n              color: errors.password ? theme.colors.red : theme.colors.white\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n              autoComplete: \"off\",\n              type: \"password\",\n              ...register('password', {\n                required: '비밀번호를 입력해주세요'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), errors.password ? /*#__PURE__*/_jsxDEV(ErrorMsg, {\n            children: [\" \", errors.password.message, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 44\n          }, this) : 'ㅤ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonBox, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: pushSignUp,\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ForgotPW, {\n          onClick: pushFindPW,\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uAE30\\uC5B5\\uC774 \\uC548\\uB098\\uC2DC\\uB098\\uC694?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"Circles\",\n      color: theme.colors.plum,\n      height: 60,\n      width: 60\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}, \"cSudtlZF25wA1QXS6hk7TRnoNuU=\", false, function () {\n  return [useForm];\n}));\n_c2 = SignInBox;\nexport default SignInBox;\nconst Box = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    width: 600px;\n    height: 600px;\n    animation: ${zoomIn} .6s ease;\n    @media only screen and (max-width: 600px) {\n        justify-content: center;\n        height: 450px;\n    };\n`;\n_c3 = Box;\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 30px;\n`;\n_c4 = Column;\nconst Row = styled.div`\n    width: 420px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 15px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid ${({\n  theme\n}) => theme.colors.white};\n    @media only screen and (max-width: 600px) {\n        width: 320px;\n    };\n`;\n_c5 = Row;\nconst ButtonBox = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 460px;\n    @media only screen and (max-width: 600px) {\n        width: 320px;\n    };\n`;\n_c6 = ButtonBox;\nconst Input = styled.input`\n    all: unset;\n    width: 350px;\n    height: 40px;\n    font-size: 21px;\n    padding-left: 20px;\n    color: ${({\n  theme\n}) => theme.colors.white};\n    @media only screen and (max-width: 600px) {\n        width: 260px;\n        font-size: 17px;\n    };\n`;\n_c7 = Input;\nconst Button = styled.button`\n    all: unset;\n    width: 200px;\n    height: 65px;\n    border-radius: 40px;\n    background-color: ${({\n  theme\n}) => theme.colors.mainBlue};\n    color: ${({\n  theme\n}) => theme.colors.white};\n    font-size: 20px;\n    text-align: center;\n    margin-top: 30px;\n    margin-bottom: 50px;\n    cursor: pointer;\n    transition: .4s ease;\n    &:hover {\n        background-color: ${({\n  theme\n}) => theme.colors.white};\n        color: ${({\n  theme\n}) => theme.colors.mainBlue};\n    };\n    @media only screen and (max-width: 600px) {\n        width: 120px;\n        height: 45px;\n        font-size: 17px;\n    };\n`;\n_c8 = Button;\nconst Icon = styled(FontAwesomeIcon)`\n    font-size: 35px;\n    color: ${({\n  color\n}) => color};\n    @media only screen and (max-width: 600px) {\n        font-size: 25px;\n    };\n`;\n_c9 = Icon;\nconst ErrorMsg = styled.div`\n    font-size: 16px;\n    color: ${({\n  theme\n}) => theme.colors.red};\n`;\n_c10 = ErrorMsg;\nconst ForgotPW = styled.div`\n    font-size: 16px;\n    color: ${({\n  theme\n}) => theme.colors.white};\n    cursor: pointer;\n    &:hover {\n        text-decoration: underline;\n    };\n`;\n_c11 = ForgotPW;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"SignInBox$observer\");\n$RefreshReg$(_c2, \"SignInBox\");\n$RefreshReg$(_c3, \"Box\");\n$RefreshReg$(_c4, \"Column\");\n$RefreshReg$(_c5, \"Row\");\n$RefreshReg$(_c6, \"ButtonBox\");\n$RefreshReg$(_c7, \"Input\");\n$RefreshReg$(_c8, \"Button\");\n$RefreshReg$(_c9, \"Icon\");\n$RefreshReg$(_c10, \"ErrorMsg\");\n$RefreshReg$(_c11, \"ForgotPW\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/serendy-flutter/src/components/SignIn/SignInBox.tsx"],"names":["React","styled","FontAwesomeIcon","faLock","faUserAlt","useForm","theme","userStore","zoomIn","observer","Loader","TextLogo","SignInBox","onSubmit","pushSignUp","pushFindPW","register","handleSubmit","formState","errors","isLogging","account","colors","red","white","required","pattern","value","message","minLength","maxLength","password","plum","Box","div","Column","Row","ButtonBox","Input","input","Button","button","mainBlue","Icon","color","ErrorMsg","ForgotPW"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faUserAlt } from '@fortawesome/free-solid-svg-icons';\nimport { useForm } from 'react-hook-form';\nimport { theme } from '../../style/theme';\nimport userStore from '../../store/userStore';\nimport { zoomIn } from '../../style/keyframes';\nimport { observer } from 'mobx-react';\nimport Loader from 'react-loader-spinner';\nimport { ISignInData } from '../../interfaces';\nimport { TextLogo } from '../SharedComponents/TextLogo';\nimport { ISignInBox } from '../../interfaces';\n\nconst SignInBox: React.FC<ISignInBox> = observer(({ onSubmit, pushSignUp, pushFindPW }) => {\n    const { register, handleSubmit, formState: { errors } } = useForm<ISignInData>();\n\n    return (\n        <>\n            {!userStore.isLogging ? \n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <TextLogo />\n                    <Box>\n                    <Column>\n                        <Row>\n                            <Icon\n                                icon={faUserAlt}\n                                color={errors.account ? (theme.colors.red) : (theme.colors.white)}\n                            />\n                            <Input\n                                placeholder='아이디'\n                                {...register('account', {\n                                    required: '아이디를 입력해주세요',\n                                    pattern: { value: /^[a-zA-Z0-9]+$/, message: '영문과 숫자만을 조합하여 입력해주세요'},\n                                    minLength: { value: 5, message: '아이디가 너무 짧아요' },\n                                    maxLength: { value: 19, message: '아이디가 너무 길어요' },\n                                })}\n                            />\n                        </Row>\n                        {errors.account ? <ErrorMsg> {errors.account.message} </ErrorMsg> : 'ㅤ'}\n                    </Column>\n\n                    <Column>\n                        <Row>\n                            <Icon\n                                icon={faLock}\n                                color={errors.password ? (theme.colors.red) : (theme.colors.white)}\n                            />\n                            <Input \n                                placeholder='비밀번호'\n                                autoComplete='off'\n                                type='password'\n                                {...register('password', {\n                                    required: '비밀번호를 입력해주세요',\n                                })}\n                            />\n                        </Row>\n                        {errors.password ? <ErrorMsg> {errors.password.message} </ErrorMsg> : 'ㅤ'}\n                    </Column>\n                    <ButtonBox>\n                        <Button type='submit'>\n                            로그인\n                        </Button>\n                        <Button onClick={pushSignUp}>회원가입</Button>\n                    </ButtonBox>\n                        <ForgotPW onClick={pushFindPW} >\n                            비밀번호가 기억이 안나시나요?\n                        </ForgotPW>\n                    </Box> \n                </form> : \n                <Loader type=\"Circles\"\n                    color={theme.colors.plum}\n                    height={60}\n                    width={60}\n                />\n            }\n        </>\n    );\n});\n\nexport default SignInBox;\n\nconst Box = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    width: 600px;\n    height: 600px;\n    animation: ${zoomIn} .6s ease;\n    @media only screen and (max-width: 600px) {\n        justify-content: center;\n        height: 450px;\n    };\n`;\n\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 30px;\n`;\n\nconst Row = styled.div`\n    width: 420px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 15px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.white};\n    @media only screen and (max-width: 600px) {\n        width: 320px;\n    };\n`;\n\nconst ButtonBox = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 460px;\n    @media only screen and (max-width: 600px) {\n        width: 320px;\n    };\n`;\n\nconst Input = styled.input`\n    all: unset;\n    width: 350px;\n    height: 40px;\n    font-size: 21px;\n    padding-left: 20px;\n    color: ${({ theme }) => theme.colors.white};\n    @media only screen and (max-width: 600px) {\n        width: 260px;\n        font-size: 17px;\n    };\n`;\n\nconst Button = styled.button`\n    all: unset;\n    width: 200px;\n    height: 65px;\n    border-radius: 40px;\n    background-color: ${({ theme }) => theme.colors.mainBlue};\n    color: ${({ theme }) => theme.colors.white};\n    font-size: 20px;\n    text-align: center;\n    margin-top: 30px;\n    margin-bottom: 50px;\n    cursor: pointer;\n    transition: .4s ease;\n    &:hover {\n        background-color: ${({ theme }) => theme.colors.white};\n        color: ${({ theme }) => theme.colors.mainBlue};\n    };\n    @media only screen and (max-width: 600px) {\n        width: 120px;\n        height: 45px;\n        font-size: 17px;\n    };\n`;\n\nconst Icon = styled(FontAwesomeIcon)<{ color: string }>`\n    font-size: 35px;\n    color: ${({ color }) => color};\n    @media only screen and (max-width: 600px) {\n        font-size: 25px;\n    };\n`;\n\nconst ErrorMsg = styled.div`\n    font-size: 16px;\n    color: ${({ theme }) => theme.colors.red};\n`;\n\nconst ForgotPW = styled.div`\n    font-size: 16px;\n    color: ${({ theme }) => theme.colors.white};\n    cursor: pointer;\n    &:hover {\n        text-decoration: underline;\n    };\n`;"]},"metadata":{},"sourceType":"module"}