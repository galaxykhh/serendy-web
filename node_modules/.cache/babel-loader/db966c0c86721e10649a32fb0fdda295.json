{"ast":null,"code":"import _regeneratorRuntime from\"/Users/hyeonghan/VSCode/React/Serendy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/hyeonghan/VSCode/React/Serendy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/hyeonghan/VSCode/React/Serendy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useRef,useState}from'react';import userStore from'../store/userStore';import postRepository from'../repository/postRepository';export var usePost=function usePost(){var postArea=useRef(null);var commentArea=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isSent=_useState2[0],setIsSent=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),sentPosts=_useState6[0],setSentPosts=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),receivedPosts=_useState8[0],setReceivedPosts=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),currentReceivedPost=_useState10[0],setCurrentReceivedPost=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),currentSentPost=_useState12[0],setCurrentSentPost=_useState12[1];var handleLoading=function handleLoading(){setIsLoading(!isLoading);};var handlePost=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _userStore$user,_userStore$user2,_postArea$current,_postArea$current2,data,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;data={account:(_userStore$user=userStore.user)===null||_userStore$user===void 0?void 0:_userStore$user.account,nickName:(_userStore$user2=userStore.user)===null||_userStore$user2===void 0?void 0:_userStore$user2.nickName,content:(_postArea$current=postArea.current)===null||_postArea$current===void 0?void 0:_postArea$current.value};if(!(((_postArea$current2=postArea.current)===null||_postArea$current2===void 0?void 0:_postArea$current2.value)==='')){_context.next=4;break;}return _context.abrupt(\"return\");case 4:;_context.next=7;return postRepository.sendPost(data);case 7:response=_context.sent;if(response.data.message==='Send Success'){setIsSent(true);};_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);alert('서버가 점검중이에요');case 15:;case 16:case\"end\":return _context.stop();}}},_callee,null,[[0,12]]);}));return function handlePost(){return _ref.apply(this,arguments);};}();var getSentPosts=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _userStore$user3,response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setIsLoading(true);_context2.prev=1;_context2.next=4;return postRepository.getSentPosts((_userStore$user3=userStore.user)===null||_userStore$user3===void 0?void 0:_userStore$user3.account);case 4:response=_context2.sent;data=response.data;setSentPosts(data);setIsLoading(false);_context2.next=14;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](1);console.log(_context2.t0);return _context2.abrupt(\"return\");case 14:;case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[1,10]]);}));return function getSentPosts(){return _ref2.apply(this,arguments);};}();var getReceivedPosts=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _userStore$user4,response,posts;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setIsLoading(true);_context3.prev=1;_context3.next=4;return postRepository.getReceivePosts((_userStore$user4=userStore.user)===null||_userStore$user4===void 0?void 0:_userStore$user4.account);case 4:response=_context3.sent;posts=response.data;setReceivedPosts(posts);setIsLoading(false);_context3.next=14;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](1);console.log(_context3.t0);return _context3.abrupt(\"return\");case 14:;case 15:case\"end\":return _context3.stop();}}},_callee3,null,[[1,10]]);}));return function getReceivedPosts(){return _ref3.apply(this,arguments);};}();var handleSentOne=function handleSentOne(_id){var post=sentPosts.findIndex(function(x){return x._id===_id;});setCurrentSentPost(sentPosts[post]);};var handleReceivedOne=function handleReceivedOne(_id){var post=receivedPosts.findIndex(function(x){return x._id===_id;});setCurrentReceivedPost(receivedPosts[post]);};var sendComment=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var _userStore$user5,_commentArea$current,_commentArea$current2,data,response,posts,post;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;data={_id:currentReceivedPost===null||currentReceivedPost===void 0?void 0:currentReceivedPost._id,toAccount:currentReceivedPost===null||currentReceivedPost===void 0?void 0:currentReceivedPost.toAccount,nickName:(_userStore$user5=userStore.user)===null||_userStore$user5===void 0?void 0:_userStore$user5.nickName,content:(_commentArea$current=commentArea.current)===null||_commentArea$current===void 0?void 0:_commentArea$current.value};if(!(((_commentArea$current2=commentArea.current)===null||_commentArea$current2===void 0?void 0:_commentArea$current2.value)==='')){_context4.next=4;break;}return _context4.abrupt(\"return\");case 4:;_context4.next=7;return postRepository.sendComment(data);case 7:response=_context4.sent;if(response.data.message==='Success'){posts=response.data.posts;post=response.data.post;setReceivedPosts(posts);setCurrentReceivedPost(post);};_context4.next=16;break;case 12:_context4.prev=12;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);alert('서버 점검중입니다');case 16:;case 17:case\"end\":return _context4.stop();}}},_callee4,null,[[0,12]]);}));return function sendComment(){return _ref4.apply(this,arguments);};}();return{isLoading:isLoading,isSent:isSent,postArea:postArea,commentArea:commentArea,sentPosts:sentPosts,receivedPosts:receivedPosts,currentReceivedPost:currentReceivedPost,currentSentPost:currentSentPost,handleLoading:handleLoading,setIsSent:setIsSent,handlePost:handlePost,getSentPosts:getSentPosts,getReceivedPosts:getReceivedPosts,handleSentOne:handleSentOne,handleReceivedOne:handleReceivedOne,sendComment:sendComment};};","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/Hooks/usePost.ts"],"names":["useRef","useState","userStore","postRepository","usePost","postArea","commentArea","isSent","setIsSent","isLoading","setIsLoading","sentPosts","setSentPosts","receivedPosts","setReceivedPosts","currentReceivedPost","setCurrentReceivedPost","currentSentPost","setCurrentSentPost","handleLoading","handlePost","data","account","user","nickName","content","current","value","sendPost","response","message","alert","getSentPosts","console","log","getReceivedPosts","getReceivePosts","posts","handleSentOne","_id","post","findIndex","x","handleReceivedOne","sendComment","toAccount"],"mappings":"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","sourcesContent":["\nimport { useRef, useState } from 'react'\nimport userStore from '../store/userStore';\nimport postRepository from '../repository/postRepository';\nimport { ICurrentPost } from '../interfaces';\n\nexport const usePost = () => {\n    const postArea = useRef<HTMLTextAreaElement>(null);\n    const commentArea = useRef<HTMLTextAreaElement>(null);\n\n    const [isSent, setIsSent] = useState<boolean>(false);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [sentPosts, setSentPosts] = useState<any[]>([]);\n    const [receivedPosts, setReceivedPosts] = useState<any[]>([]);\n    const [currentReceivedPost, setCurrentReceivedPost] = useState<ICurrentPost>();\n    const [currentSentPost, setCurrentSentPost] = useState<ICurrentPost>();\n\n    const handleLoading = (): void => {\n        setIsLoading(!isLoading);\n    };\n\n    const handlePost = async (): Promise<void> => {\n        try {\n            const data = {\n                account: userStore.user?.account,\n                nickName: userStore.user?.nickName,\n                content: postArea.current?.value,\n            };\n            if (postArea.current?.value === '' ) {\n                return;\n            };\n            const response = await postRepository.sendPost(data);\n            if ((response.data.message === 'Send Success')) {\n                setIsSent(true);\n            };\n        } catch(err) {\n            alert('서버가 점검중이에요');\n        };\n    };\n\n    const getSentPosts = async (): Promise<void> => {\n        setIsLoading(true);\n        try {\n            const response = await postRepository.getSentPosts(userStore.user?.account);\n            const data = response.data;\n            setSentPosts(data);\n            setIsLoading(false);\n        } catch(err) {\n            console.log(err);\n            return;\n        };\n    };\n\n    const getReceivedPosts = async (): Promise<void> => {\n        setIsLoading(true);\n        try {\n            const response = await postRepository.getReceivePosts(userStore.user?.account);\n            const posts = response.data;\n            setReceivedPosts(posts);\n            setIsLoading(false);\n        } catch(err) {\n            console.log(err);\n            return;\n        };\n    };\n\n    const handleSentOne = (_id: string): void => {\n        const post = sentPosts.findIndex(x => x._id === _id);\n        setCurrentSentPost(sentPosts[post]);\n    };\n\n    const handleReceivedOne = (_id: string): void => {\n        const post = receivedPosts.findIndex(x => x._id === _id);\n        setCurrentReceivedPost(receivedPosts[post]);\n    };\n\n    const sendComment = async (): Promise<void> => {\n        try {\n            const data = {\n                _id: currentReceivedPost?._id,\n                toAccount: currentReceivedPost?.toAccount,\n                nickName: userStore.user?.nickName,\n                content: commentArea.current?.value,\n            };\n            if (commentArea.current?.value === '') {\n                return;\n            };\n            const response = await postRepository.sendComment(data);\n            if ((response.data.message === 'Success')) {\n                const posts = response.data.posts;\n                const post = response.data.post;\n                setReceivedPosts(posts);\n                setCurrentReceivedPost(post);\n            };\n        } catch(err) {\n            console.log(err);\n            alert('서버 점검중입니다');\n        };\n    };\n\n    return {\n        isLoading,\n        isSent,\n        postArea,\n        commentArea,\n        sentPosts,\n        receivedPosts,\n        currentReceivedPost,\n        currentSentPost,\n        handleLoading,\n        setIsSent,\n        handlePost,\n        getSentPosts,\n        getReceivedPosts,\n        handleSentOne,\n        handleReceivedOne,\n        sendComment,\n    };\n};"]},"metadata":{},"sourceType":"module"}