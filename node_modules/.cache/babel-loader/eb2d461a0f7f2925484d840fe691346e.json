{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonghan/VSCode/React/Serendy/client/src/pages/SignUp.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Container from '../components/publicComponents/Container';\nimport SignUpBox from '../components/SignUp/SignUpBox';\nimport Success from '../components/SignUp/Success';\nimport { TEXTLOGO_URL } from '../config';\nimport { observer } from 'mobx-react';\nimport { useHistorys } from '../Hooks/useHistorys';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUp = observer(_c = _s(() => {\n  _s();\n\n  const [isSuccess, setIsSuccess] = useState(false); // is sign up success ?\n\n  const history = useHistorys();\n  useEffect(() => {\n    history.pushLoggedUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), isSuccess ? /*#__PURE__*/_jsxDEV(Success, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(SignUpBox, {\n        success: () => setIsSuccess(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}, \"Uil5V5hVcTL3SBiWsa2RzmMc/H8=\", false, function () {\n  return [useHistorys];\n}));\n_c2 = SignUp;\nexport default SignUp;\nconst TextLogo = styled.div`\n    width: 600px;\n    height: 200px;\n    background-image: url(${TEXTLOGO_URL});\n    background-size: cover;\n    background-position: center;\n`;\n_c3 = TextLogo;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SignUp$observer\");\n$RefreshReg$(_c2, \"SignUp\");\n$RefreshReg$(_c3, \"TextLogo\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/pages/SignUp.tsx"],"names":["React","useState","useEffect","styled","Container","SignUpBox","Success","TEXTLOGO_URL","observer","useHistorys","SignUp","isSuccess","setIsSuccess","history","pushLoggedUser","TextLogo","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,0CAAtB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,WAAT,QAA4B,sBAA5B;;;AAEA,MAAMC,MAAgB,GAAGF,QAAQ,SAAC,MAAM;AAAA;;AACpC,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAU,KAAV,CAA1C,CADoC,CACwB;;AAC5D,QAAMY,OAAO,GAAGJ,WAAW,EAA3B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,cAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,SAAD;AAAA,2BACI;AAAA,8BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKH,SAAS,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAiB,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,IAAD;AAAtC;AAAA;AAAA;AAAA;AAAA,cAF/B;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAhBgC;AAAA,UAEbH,WAFa;AAAA,GAAjC;MAAMC,M;AAkBN,eAAeA,MAAf;AAEA,MAAMK,QAAQ,GAAGZ,MAAM,CAACa,GAAI;AAC5B;AACA;AACA,4BAA4BT,YAAa;AACzC;AACA;AACA,CANA;MAAMQ,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Container from '../components/publicComponents/Container';\nimport SignUpBox from '../components/SignUp/SignUpBox';\nimport Success from '../components/SignUp/Success';\nimport { TEXTLOGO_URL } from '../config';\nimport { observer } from 'mobx-react';\nimport { useHistorys } from '../Hooks/useHistorys';\n\nconst SignUp: React.FC = observer(() => {\n    const [isSuccess, setIsSuccess] = useState<boolean>(false); // is sign up success ?\n    const history = useHistorys();\n    \n    useEffect(() => {\n        history.pushLoggedUser();\n    }, []);\n\n    return (\n        <Container>\n            <>\n                <TextLogo />\n                {isSuccess ? <Success /> : <SignUpBox success={() => setIsSuccess(true)} />}\n            </>\n        </Container>\n    );\n});\n\nexport default SignUp;\n\nconst TextLogo = styled.div`\n    width: 600px;\n    height: 200px;\n    background-image: url(${TEXTLOGO_URL});\n    background-size: cover;\n    background-position: center;\n`;"]},"metadata":{},"sourceType":"module"}