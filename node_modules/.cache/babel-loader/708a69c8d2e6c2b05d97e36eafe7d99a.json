{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport serendyRepository from '../repository/serendyRepository';\nimport userStore from '../store/userStore';\nexport const usePost = () => {\n  _s();\n\n  const [isSent, setIsSent] = useState(false);\n  const textArea = useRef(null);\n\n  const handlePost = async () => {\n    try {\n      var _userStore$user, _textArea$current;\n\n      const data = {\n        nickName: (_userStore$user = userStore.user) === null || _userStore$user === void 0 ? void 0 : _userStore$user.nickName,\n        content: (_textArea$current = textArea.current) === null || _textArea$current === void 0 ? void 0 : _textArea$current.value\n      };\n      const response = await serendyRepository.sendPost(data);\n\n      if (response.data.message === 'Send Success') {\n        setIsSent(true);\n      }\n    } catch (err) {\n      alert('서버가 점검중이에요');\n    }\n\n    ;\n  };\n\n  return {\n    isSent,\n    textArea,\n    handlePost\n  };\n};\n\n_s(usePost, \"bPBDYt852g62TlCV80va4j4RRMw=\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/Hooks/usePost.ts"],"names":["useRef","useState","serendyRepository","userStore","usePost","isSent","setIsSent","textArea","handlePost","data","nickName","user","content","current","value","response","sendPost","message","err","alert"],"mappings":";;AACA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAOA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAU,KAAV,CAApC;AACA,QAAMM,QAAQ,GAAGP,MAAM,CAAsB,IAAtB,CAAvB;;AAEA,QAAMQ,UAAU,GAAG,YAA2B;AAC1C,QAAI;AAAA;;AACA,YAAMC,IAAI,GAAG;AACTC,QAAAA,QAAQ,qBAAEP,SAAS,CAACQ,IAAZ,oDAAE,gBAAgBD,QADjB;AAETE,QAAAA,OAAO,uBAAEL,QAAQ,CAACM,OAAX,sDAAE,kBAAkBC;AAFlB,OAAb;AAIA,YAAMC,QAAQ,GAAG,MAAMb,iBAAiB,CAACc,QAAlB,CAA2BP,IAA3B,CAAvB;;AACA,UAAKM,QAAQ,CAACN,IAAT,CAAcQ,OAAd,KAA0B,cAA/B,EAAgD;AAC5CX,QAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,KATD,CASE,OAAMY,GAAN,EAAW;AACTC,MAAAA,KAAK,CAAC,YAAD,CAAL;AACH;;AAAA;AACJ,GAbD;;AAeA,SAAO;AACHd,IAAAA,MADG;AAEHE,IAAAA,QAFG;AAGHC,IAAAA;AAHG,GAAP;AAKH,CAxBM;;GAAMJ,O","sourcesContent":["\nimport { useRef, useState } from 'react'\nimport serendyRepository from '../repository/serendyRepository';\nimport userStore from '../store/userStore';\n\nexport interface IPost {\n    nickName: string | null | undefined;\n    content: string | undefined;\n}\n\nexport const usePost = () => {\n    const [isSent, setIsSent] = useState<boolean>(false);\n    const textArea = useRef<HTMLTextAreaElement>(null);\n\n    const handlePost = async (): Promise<void> => {\n        try {\n            const data = {\n                nickName: userStore.user?.nickName,\n                content: textArea.current?.value,\n            }\n            const response = await serendyRepository.sendPost(data);\n            if ((response.data.message === 'Send Success')) {\n                setIsSent(true);\n            }\n        } catch(err) {\n            alert('서버가 점검중이에요');\n        };\n    };\n\n    return {\n        isSent,\n        textArea,\n        handlePost\n    }\n}"]},"metadata":{},"sourceType":"module"}