{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonghan/VSCode/React/Serendy/client/src/components/FindPW/FindPWBox.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserAlt, faUserSecret } from '@fortawesome/free-solid-svg-icons';\nimport { useForm } from 'react-hook-form';\nimport { zoomIn } from '../../style/keyframes';\nimport { theme } from '../../style/theme';\nimport userStore from '../../store/userStore';\nimport { useHistorys } from '../../Hooks/pushHistory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FindPWBox = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const history = useHistorys();\n  const findBtn = useRef(null);\n\n  const entered = e => {\n    if (e.key === 'Enter') {\n      var _findBtn$current;\n\n      (_findBtn$current = findBtn.current) === null || _findBtn$current === void 0 ? void 0 : _findBtn$current.click();\n    }\n\n    ;\n  };\n\n  const onSubmit = data => {\n    userStore.findPW(data, history.pushLogin);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          icon: faUserAlt,\n          color: errors.account ? theme.colors.red : theme.colors.white\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"\\uC544\\uC774\\uB514\",\n          ...register('account', {\n            required: '아이디를 입력해주세요'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), errors.account ? /*#__PURE__*/_jsxDEV(ErrorMsg, {\n        children: [\" \", errors.account.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 35\n      }, this) : 'ㅤ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          icon: faUserSecret,\n          color: errors.secretMessage ? theme.colors.red : theme.colors.white\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"\\uC554\\uD638 \\uBA54\\uC138\\uC9C0\",\n          onKeyPress: entered,\n          ...register('secretMessage', {\n            required: '암호 메세지를 작성해주세요'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), errors.secretMessage && /*#__PURE__*/_jsxDEV(ErrorMsg, {\n        children: [\" \", errors.secretMessage.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit(onSubmit),\n      ref: findBtn,\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FindPWBox, \"ZPS3UTh9l8Eq8pKhcznr1pKeFb8=\", false, function () {\n  return [useForm, useHistorys];\n});\n\n_c = FindPWBox;\nexport default FindPWBox;\nconst Box = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    width: 600px;\n    height: 600px;\n    animation: ${zoomIn} .6s ease;\n`;\n_c2 = Box;\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 10px;\n`;\n_c3 = Column;\nconst Row = styled.div`\n    width: 420px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 30px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid ${({\n  theme\n}) => theme.colors.white};\n    @media only screen and (max-width: 600px) {\n        width: 320px;\n        margin-bottom: 20px;\n    };\n`;\n_c4 = Row;\nconst Input = styled.input`\n    all: unset;\n    width: 400px;\n    height: 40px;\n    font-size: 21px;\n    padding-left: 20px;\n    color: ${({\n  theme\n}) => theme.colors.white};\n    @media only screen and (max-width: 600px) {\n        width: 260px;\n        font-size: 17px;\n    };\n`;\n_c5 = Input;\nconst Button = styled.button`\n    all: unset;\n    width: 200px;\n    height: 55px;\n    border-radius: 40px;\n    background-color: ${({\n  theme\n}) => theme.colors.mainBlue};\n    color: ${({\n  theme\n}) => theme.colors.white};\n    font-size: 20px;\n    text-align: center;\n    margin-top: 20px;\n    margin-bottom: 50px;\n    cursor: pointer;\n    transition: .3s ease;\n    &:hover {\n        background-color: ${({\n  theme\n}) => theme.colors.white};\n        color: ${({\n  theme\n}) => theme.colors.mainBlue};\n    };\n    @media only screen and (max-width: 600px) {\n        width: 160px;\n        font-size: 17px;\n    };\n`;\n_c6 = Button;\nconst Icon = styled(FontAwesomeIcon)`\n    font-size: 35px;\n    color: ${({\n  color\n}) => color};\n    @media only screen and (max-width: 600px) {\n        font-size: 25px;\n    };\n`;\n_c7 = Icon;\nconst ErrorMsg = styled.div`\n    font-size: 16px;\n    transform: translateY(-10px);\n    color: ${({\n  theme\n}) => theme.colors.red};\n`;\n_c8 = ErrorMsg;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"FindPWBox\");\n$RefreshReg$(_c2, \"Box\");\n$RefreshReg$(_c3, \"Column\");\n$RefreshReg$(_c4, \"Row\");\n$RefreshReg$(_c5, \"Input\");\n$RefreshReg$(_c6, \"Button\");\n$RefreshReg$(_c7, \"Icon\");\n$RefreshReg$(_c8, \"ErrorMsg\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/components/FindPW/FindPWBox.tsx"],"names":["React","useRef","styled","FontAwesomeIcon","faUserAlt","faUserSecret","useForm","zoomIn","theme","userStore","useHistorys","FindPWBox","register","handleSubmit","formState","errors","history","findBtn","entered","e","key","current","click","onSubmit","data","findPW","pushLogin","account","colors","red","white","required","message","secretMessage","Box","div","Column","Row","Input","input","Button","button","mainBlue","Icon","color","ErrorMsg"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserAlt, faUserSecret } from '@fortawesome/free-solid-svg-icons';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { zoomIn } from '../../style/keyframes';\nimport { theme } from '../../style/theme';\nimport userStore from '../../store/userStore';\nimport { useHistorys } from '../../Hooks/pushHistory';\nimport { IFindPW } from '../../interfaces/index';\n\nconst FindPWBox: React.FC = () => {\n    const { register, handleSubmit, formState: { errors } } = useForm<IFindPW>();\n    const history = useHistorys();\n    const findBtn = useRef<HTMLButtonElement>(null);\n\n    const entered = (e: React.KeyboardEvent): void => {\n        if (e.key === 'Enter') {\n            findBtn.current?.click();\n        };\n    };\n\n    const onSubmit: SubmitHandler<IFindPW> = (data) => {\n        userStore.findPW(data, history.pushLogin);\n    };\n\n    return (\n        <Box>\n            <Column>\n                <Row>\n                    <Icon icon={faUserAlt}\n                        color={errors.account ? (theme.colors.red) : (theme.colors.white)}\n                    />\n                    <Input placeholder='아이디'\n                        {...register('account', {\n                            required: '아이디를 입력해주세요',\n                        })}\n                    />\n                </Row>\n                {errors.account ? <ErrorMsg> {errors.account.message} </ErrorMsg> : 'ㅤ'}\n            </Column>\n\n            <Column>\n                <Row>\n                    <Icon icon={faUserSecret}\n                        color={errors.secretMessage ? (theme.colors.red) : (theme.colors.white)}\n                    />\n                    <Input placeholder='암호 메세지'\n                        onKeyPress={entered}\n                        {...register('secretMessage', {\n                            required: '암호 메세지를 작성해주세요',\n                        })}\n                    />\n                </Row>\n                {errors.secretMessage && <ErrorMsg> {errors.secretMessage.message} </ErrorMsg>}\n            </Column>\n            <Button onClick={handleSubmit(onSubmit)}\n                    ref={findBtn}\n                    >\n                비밀번호 찾기\n                </Button>\n        </Box>\n    );\n};\nexport default FindPWBox;\n\nconst Box = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    width: 600px;\n    height: 600px;\n    animation: ${zoomIn} .6s ease;\n`;\n\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 10px;\n`;\n\nconst Row = styled.div`\n    width: 420px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 30px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.white};\n    @media only screen and (max-width: 600px) {\n        width: 320px;\n        margin-bottom: 20px;\n    };\n`;\n\nconst Input = styled.input`\n    all: unset;\n    width: 400px;\n    height: 40px;\n    font-size: 21px;\n    padding-left: 20px;\n    color: ${({ theme }) => theme.colors.white};\n    @media only screen and (max-width: 600px) {\n        width: 260px;\n        font-size: 17px;\n    };\n`;\n\nconst Button = styled.button`\n    all: unset;\n    width: 200px;\n    height: 55px;\n    border-radius: 40px;\n    background-color: ${({ theme }) => theme.colors.mainBlue};\n    color: ${({ theme }) => theme.colors.white};\n    font-size: 20px;\n    text-align: center;\n    margin-top: 20px;\n    margin-bottom: 50px;\n    cursor: pointer;\n    transition: .3s ease;\n    &:hover {\n        background-color: ${({ theme }) => theme.colors.white};\n        color: ${({ theme }) => theme.colors.mainBlue};\n    };\n    @media only screen and (max-width: 600px) {\n        width: 160px;\n        font-size: 17px;\n    };\n`;\n\nconst Icon = styled(FontAwesomeIcon) <{\n    color: string\n}>`\n    font-size: 35px;\n    color: ${({ color }) => color};\n    @media only screen and (max-width: 600px) {\n        font-size: 25px;\n    };\n`;\n\nconst ErrorMsg = styled.div`\n    font-size: 16px;\n    transform: translateY(-10px);\n    color: ${({ theme }) => theme.colors.red};\n`;"]},"metadata":{},"sourceType":"module"}