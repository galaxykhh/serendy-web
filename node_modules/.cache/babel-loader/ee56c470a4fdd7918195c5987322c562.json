{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport serendyRepository from '../repository/serendyRepository';\nimport userStore from '../store/userStore';\nexport const usePost = () => {\n  _s();\n\n  const [isSent, setIsSent] = useState(false);\n  const textArea = useRef(null);\n  const [sentPosts, setSentPosts] = useState([]);\n  const [receivedPosts, setReceivedPosts] = useState([]);\n\n  const handlePost = async () => {\n    try {\n      var _userStore$user, _userStore$user2, _textArea$current;\n\n      const data = {\n        account: (_userStore$user = userStore.user) === null || _userStore$user === void 0 ? void 0 : _userStore$user.account,\n        nickName: (_userStore$user2 = userStore.user) === null || _userStore$user2 === void 0 ? void 0 : _userStore$user2.nickName,\n        content: (_textArea$current = textArea.current) === null || _textArea$current === void 0 ? void 0 : _textArea$current.value\n      };\n      const response = await serendyRepository.sendPost(data);\n\n      if (response.data.message === 'Send Success') {\n        setIsSent(true);\n      }\n    } catch (err) {\n      alert('서버가 점검중이에요');\n    }\n\n    ;\n  };\n\n  const getSentPosts = async () => {\n    try {\n      var _userStore$user3;\n\n      const response = await serendyRepository.getSentPosts((_userStore$user3 = userStore.user) === null || _userStore$user3 === void 0 ? void 0 : _userStore$user3.account);\n      const posts = response.data;\n      setSentPosts(posts);\n    } catch (err) {\n      console.log(err);\n      return;\n    }\n  };\n\n  const getReceivedPosts = async () => {\n    try {\n      var _userStore$user4;\n\n      const response = await serendyRepository.getReceivePosts((_userStore$user4 = userStore.user) === null || _userStore$user4 === void 0 ? void 0 : _userStore$user4.account);\n      const posts = response.data;\n      setReceivedPosts(posts);\n    } catch (err) {\n      console.log(err);\n      return;\n    }\n  };\n\n  const showReceivedPost = () => {};\n\n  return {\n    isSent,\n    textArea,\n    sentPosts,\n    receivedPosts,\n    handlePost,\n    getSentPosts,\n    getReceivedPosts\n  };\n};\n\n_s(usePost, \"cfLoPx2gymreX+gasMqO5UcNGjU=\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/Hooks/usePost.ts"],"names":["useRef","useState","serendyRepository","userStore","usePost","isSent","setIsSent","textArea","sentPosts","setSentPosts","receivedPosts","setReceivedPosts","handlePost","data","account","user","nickName","content","current","value","response","sendPost","message","err","alert","getSentPosts","posts","console","log","getReceivedPosts","getReceivePosts","showReceivedPost"],"mappings":";;AACA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAQA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAU,KAAV,CAApC;AACA,QAAMM,QAAQ,GAAGP,MAAM,CAAsB,IAAtB,CAAvB;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAQ,EAAR,CAA1C;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAQ,EAAR,CAAlD;;AAEA,QAAMW,UAAU,GAAG,YAA2B;AAC1C,QAAI;AAAA;;AACA,YAAMC,IAAI,GAAG;AACTC,QAAAA,OAAO,qBAAEX,SAAS,CAACY,IAAZ,oDAAE,gBAAgBD,OADhB;AAETE,QAAAA,QAAQ,sBAAEb,SAAS,CAACY,IAAZ,qDAAE,iBAAgBC,QAFjB;AAGTC,QAAAA,OAAO,uBAAEV,QAAQ,CAACW,OAAX,sDAAE,kBAAkBC;AAHlB,OAAb;AAKA,YAAMC,QAAQ,GAAG,MAAMlB,iBAAiB,CAACmB,QAAlB,CAA2BR,IAA3B,CAAvB;;AACA,UAAKO,QAAQ,CAACP,IAAT,CAAcS,OAAd,KAA0B,cAA/B,EAAgD;AAC5ChB,QAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,KAVD,CAUE,OAAMiB,GAAN,EAAW;AACTC,MAAAA,KAAK,CAAC,YAAD,CAAL;AACH;;AAAA;AACJ,GAdD;;AAgBA,QAAMC,YAAY,GAAG,YAA2B;AAC5C,QAAI;AAAA;;AACA,YAAML,QAAQ,GAAG,MAAMlB,iBAAiB,CAACuB,YAAlB,qBAA+BtB,SAAS,CAACY,IAAzC,qDAA+B,iBAAgBD,OAA/C,CAAvB;AACA,YAAMY,KAAK,GAAGN,QAAQ,CAACP,IAAvB;AACAJ,MAAAA,YAAY,CAACiB,KAAD,CAAZ;AACH,KAJD,CAIE,OAAMH,GAAN,EAAW;AACTI,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACA;AACH;AACJ,GATD;;AAWA,QAAMM,gBAAgB,GAAG,YAA2B;AAChD,QAAI;AAAA;;AACA,YAAMT,QAAQ,GAAG,MAAMlB,iBAAiB,CAAC4B,eAAlB,qBAAkC3B,SAAS,CAACY,IAA5C,qDAAkC,iBAAgBD,OAAlD,CAAvB;AACA,YAAMY,KAAK,GAAGN,QAAQ,CAACP,IAAvB;AACAF,MAAAA,gBAAgB,CAACe,KAAD,CAAhB;AACH,KAJD,CAIE,OAAMH,GAAN,EAAW;AACTI,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACA;AACH;AACJ,GATD;;AAWA,QAAMQ,gBAAgB,GAAG,MAAY,CAEpC,CAFD;;AAIA,SAAO;AACH1B,IAAAA,MADG;AAEHE,IAAAA,QAFG;AAGHC,IAAAA,SAHG;AAIHE,IAAAA,aAJG;AAKHE,IAAAA,UALG;AAMHa,IAAAA,YANG;AAOHI,IAAAA;AAPG,GAAP;AASH,CAzDM;;GAAMzB,O","sourcesContent":["\nimport { useRef, useState } from 'react'\nimport serendyRepository from '../repository/serendyRepository';\nimport userStore from '../store/userStore';\n\nexport interface IPost {\n    account: string | null | undefined;\n    nickName: string | null | undefined;\n    content: string | undefined;\n}\n\nexport const usePost = () => {\n    const [isSent, setIsSent] = useState<boolean>(false);\n    const textArea = useRef<HTMLTextAreaElement>(null);\n    const [sentPosts, setSentPosts] = useState<any[]>([]);\n    const [receivedPosts, setReceivedPosts] = useState<any[]>([]);\n\n    const handlePost = async (): Promise<void> => {\n        try {\n            const data = {\n                account: userStore.user?.account,\n                nickName: userStore.user?.nickName,\n                content: textArea.current?.value,\n            }\n            const response = await serendyRepository.sendPost(data);\n            if ((response.data.message === 'Send Success')) {\n                setIsSent(true);\n            }\n        } catch(err) {\n            alert('서버가 점검중이에요');\n        };\n    };\n\n    const getSentPosts = async (): Promise<void> => {\n        try {\n            const response = await serendyRepository.getSentPosts(userStore.user?.account);\n            const posts = response.data;\n            setSentPosts(posts);\n        } catch(err) {\n            console.log(err);\n            return;\n        }\n    }\n\n    const getReceivedPosts = async (): Promise<void> => {\n        try {\n            const response = await serendyRepository.getReceivePosts(userStore.user?.account);\n            const posts = response.data;\n            setReceivedPosts(posts);\n        } catch(err) {\n            console.log(err);\n            return;\n        }\n    }\n\n    const showReceivedPost = (): void => {\n        \n    }\n\n    return {\n        isSent,\n        textArea,\n        sentPosts,\n        receivedPosts,\n        handlePost,\n        getSentPosts,\n        getReceivedPosts,\n    }\n}"]},"metadata":{},"sourceType":"module"}