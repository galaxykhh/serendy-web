{"ast":null,"code":"import { action, computed, makeObservable, observable } from \"mobx\";\n\nclass AuthStore {\n  constructor() {\n    this._account = '';\n    this._password = '';\n    this.isLogged = false;\n    this.user = null;\n    makeObservable(this, {\n      _account: observable,\n      _password: observable,\n      user: observable,\n      account: computed,\n      password: computed,\n      setAccount: action,\n      setPassword: action\n    });\n  }\n\n  get account() {\n    return this._account;\n  }\n\n  get password() {\n    return this._password;\n  }\n\n  setAccount(account) {\n    this._account = account;\n  }\n\n  setPassword(password) {\n    this._password = password;\n  }\n\n}\n\nconst authStore = new AuthStore();\nexport default authStore;","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/src/store/authStore.ts"],"names":["action","computed","makeObservable","observable","AuthStore","constructor","_account","_password","isLogged","user","account","password","setAccount","setPassword","authStore"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,cAA3B,EAA2CC,UAA3C,QAA6D,MAA7D;;AAYA,MAAMC,SAAN,CAAoC;AAOhCC,EAAAA,WAAW,GAAG;AAAA,SALNC,QAKM,GALa,EAKb;AAAA,SAJNC,SAIM,GAJc,EAId;AAAA,SAHdC,QAGc,GAHM,KAGN;AAAA,SAFdC,IAEc,GAFO,IAEP;AACVP,IAAAA,cAAc,CAAsC,IAAtC,EAA4C;AACtDI,MAAAA,QAAQ,EAAEH,UAD4C;AAEtDI,MAAAA,SAAS,EAAEJ,UAF2C;AAGtDM,MAAAA,IAAI,EAAEN,UAHgD;AAItDO,MAAAA,OAAO,EAAET,QAJ6C;AAKtDU,MAAAA,QAAQ,EAAEV,QAL4C;AAMtDW,MAAAA,UAAU,EAAEZ,MAN0C;AAOtDa,MAAAA,WAAW,EAAEb;AAPyC,KAA5C,CAAd;AASH;;AACU,MAAPU,OAAO,GAAW;AAClB,WAAO,KAAKJ,QAAZ;AACH;;AAEW,MAARK,QAAQ,GAAW;AACnB,WAAO,KAAKJ,SAAZ;AACH;;AAEDK,EAAAA,UAAU,CAACF,OAAD,EAAkB;AACxB,SAAKJ,QAAL,GAAgBI,OAAhB;AACH;;AAEDG,EAAAA,WAAW,CAACF,QAAD,EAAmB;AAC1B,SAAKJ,SAAL,GAAiBI,QAAjB;AACH;;AAhC+B;;AAmCpC,MAAMG,SAAS,GAAG,IAAIV,SAAJ,EAAlB;AACA,eAAeU,SAAf","sourcesContent":["import { action, computed, makeObservable, observable } from \"mobx\";\nimport serendyRepository from \"../repository/serendyRepository\";\n\ninterface IAccount {\n    account: string;\n    password: string;\n}\n\ninterface IUser extends IAccount {\n    name: string;\n}\n\nclass AuthStore implements IAccount {\n\n    private _account: string = '';\n    private _password: string = '';\n    isLogged: boolean = false;\n    user: IUser | null = null;\n\n    constructor() {\n        makeObservable<AuthStore, '_account' | '_password'>(this, {\n            _account: observable,\n            _password: observable,\n            user: observable,\n            account: computed,\n            password: computed,\n            setAccount: action,\n            setPassword: action,\n        })\n    }\n    get account(): string {\n        return this._account;\n    };\n\n    get password(): string {\n        return this._password;\n    };\n\n    setAccount(account: string) {\n        this._account = account;\n    };\n\n    setPassword(password: string) {\n        this._password = password;\n    };\n}\n\nconst authStore = new AuthStore();\nexport default authStore;"]},"metadata":{},"sourceType":"module"}