{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonghan/VSCode/React/Serendy/client/src/pages/PostPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport CenterView from '../components/SharedComponents/CenterView';\nimport Container from '../components/SharedComponents/Container';\nimport PostWindow from '../components/PostPage/PostWindow';\nimport PostSent from '../components/PostPage/PostSent';\nimport postStore from '../store/postStore';\nimport CircleLoader from '../components/SharedComponents/CircleLoader';\nimport { flowResult } from 'mobx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = observer(_c = _s(() => {\n  _s();\n\n  const [isSending, setIsSending] = useState(false);\n  const [isSent, setIsSent] = useState(false);\n  const postArea = useRef(null);\n\n  const toggleIsSent = () => {\n    setIsSent(!isSent);\n  };\n\n  ;\n\n  const toggleIsSending = () => {\n    setIsSending(!isSending);\n  };\n\n  const sendPost = async () => {\n    var _postArea$current;\n\n    toggleIsSending();\n    const isSuccess = await flowResult(postStore.sendPost((_postArea$current = postArea.current) === null || _postArea$current === void 0 ? void 0 : _postArea$current.value));\n\n    if (isSuccess) {\n      toggleIsSending();\n      toggleIsSent();\n    }\n\n    ;\n  };\n\n  const reset = () => {\n    setIsSent(false);\n    setIsSending(false);\n  };\n\n  if (isSending && !isSent) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(CenterView, {\n        children: /*#__PURE__*/_jsxDEV(CircleLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(CenterView, {\n        children: isSent ? /*#__PURE__*/_jsxDEV(PostSent, {\n          reset: reset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(PostWindow, {\n          postSend: sendPost,\n          postArea: postArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n}, \"FbdxrpZluQh3rGILmwBqDxIy6RY=\"));\n_c2 = PostPage;\nexport default PostPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostPage$observer\");\n$RefreshReg$(_c2, \"PostPage\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/pages/PostPage.tsx"],"names":["React","useRef","useState","observer","CenterView","Container","PostWindow","PostSent","postStore","CircleLoader","flowResult","PostPage","isSending","setIsSending","isSent","setIsSent","postArea","toggleIsSent","toggleIsSending","sendPost","isSuccess","current","value","reset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AACA,OAAOC,SAAP,MAAsB,0CAAtB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,SAASC,UAAT,QAA2B,MAA3B;;AAEA,MAAMC,QAAkB,GAAGR,QAAQ,SAAC,MAAM;AAAA;;AACtC,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACY,MAAD,EAAUC,SAAV,IAAuBb,QAAQ,CAAU,KAAV,CAArC;AACA,QAAMc,QAAQ,GAAGf,MAAM,CAAsB,IAAtB,CAAvB;;AAEA,QAAMgB,YAAY,GAAG,MAAY;AAC7BF,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,GAFD;;AAEE;;AAEF,QAAMI,eAAe,GAAG,MAAY;AAChCL,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD;;AAIA,QAAMO,QAAQ,GAAG,YAAY;AAAA;;AACzBD,IAAAA,eAAe;AACf,UAAME,SAAS,GAAG,MAAMV,UAAU,CAACF,SAAS,CAACW,QAAV,sBAAmBH,QAAQ,CAACK,OAA5B,sDAAmB,kBAAkBC,KAArC,CAAD,CAAlC;;AACA,QAAIF,SAAJ,EAAe;AACXF,MAAAA,eAAe;AACfD,MAAAA,YAAY;AACf;;AAAA;AACJ,GAPD;;AASA,QAAMM,KAAK,GAAG,MAAY;AACtBR,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAOA,MAAID,SAAS,IAAI,CAACE,MAAlB,EAA0B;AACtB,wBACI,QAAC,SAAD;AAAA,6BACI,QAAC,UAAD;AAAA,+BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GARD,MAQO;AACH,wBACI,QAAC,SAAD;AAAA,6BACI,QAAC,UAAD;AAAA,kBACKA,MAAM,gBACH,QAAC,QAAD;AAAU,UAAA,KAAK,EAAES;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADG,gBAEH,QAAC,UAAD;AAAY,UAAA,QAAQ,EAAEJ,QAAtB;AACI,UAAA,QAAQ,EAAEH;AADd;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAAA;AACJ,CAnDkC,kCAAnC;MAAML,Q;AAqDN,eAAeA,QAAf","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { observer } from 'mobx-react';\nimport CenterView from '../components/SharedComponents/CenterView'\nimport Container from '../components/SharedComponents/Container'\nimport PostWindow from '../components/PostPage/PostWindow';\nimport PostSent from '../components/PostPage/PostSent';\nimport postStore from '../store/postStore';\nimport CircleLoader from '../components/SharedComponents/CircleLoader';\nimport { flowResult } from 'mobx';\n\nconst PostPage: React.FC = observer(() => {\n    const [isSending, setIsSending] = useState<boolean>(false);\n    const [isSent , setIsSent] = useState<boolean>(false);\n    const postArea = useRef<HTMLTextAreaElement>(null);\n\n    const toggleIsSent = (): void => {\n        setIsSent(!isSent);\n    };;\n\n    const toggleIsSending = (): void => {\n        setIsSending(!isSending);\n    };\n\n    const sendPost = async () => {\n        toggleIsSending();\n        const isSuccess = await flowResult(postStore.sendPost(postArea.current?.value));\n        if (isSuccess) {\n            toggleIsSending();\n            toggleIsSent();\n        };\n    };\n\n    const reset = (): void => {\n        setIsSent(false);\n        setIsSending(false);\n    };\n\n\n\n    if (isSending && !isSent) {\n        return (\n            <Container>\n                <CenterView>\n                    <CircleLoader />\n                </CenterView>\n            </Container>\n        );\n    } else {\n        return (\n            <Container>\n                <CenterView>\n                    {isSent ? \n                        <PostSent reset={reset} /> : \n                        <PostWindow postSend={sendPost}\n                            postArea={postArea}\n                        />\n                    }\n                </CenterView>\n            </Container>\n        );\n    };\n});\n\nexport default PostPage;\n"]},"metadata":{},"sourceType":"module"}