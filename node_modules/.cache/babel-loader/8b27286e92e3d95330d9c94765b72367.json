{"ast":null,"code":"import _slicedToArray from\"/Users/hyeonghan/VSCode/React/Serendy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from'react';import{observer}from'mobx-react';import CenterView from'../components/PublicComponents/CenterView';import Container from'../components/PublicComponents/Container';import PostWindow from'../components/PostPage/PostWindow';import PostSent from'../components/PostPage/PostSent';import postStore from'../store/postStore';import{jsx as _jsx}from\"react/jsx-runtime\";var PostPage=observer(function(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isSent=_useState2[0],setIsSent=_useState2[1];var postArea=useRef(null);var toggleIsSent=function toggleIsSent(){setIsSent(!isSent);};return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(CenterView,{children:isSent?/*#__PURE__*/_jsx(PostSent,{reset:toggleIsSent}):/*#__PURE__*/_jsx(PostWindow,{postSend:function postSend(){var _postArea$current;return postStore.sendPost((_postArea$current=postArea.current)===null||_postArea$current===void 0?void 0:_postArea$current.value,toggleIsSent);},postArea:postArea})})});});export default PostPage;","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/pages/PostPage.tsx"],"names":["React","useRef","useState","observer","CenterView","Container","PostWindow","PostSent","postStore","PostPage","isSent","setIsSent","postArea","toggleIsSent","sendPost","current","value"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,KAAwC,OAAxC,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2CAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0CAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,mCAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,iCAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,C,2CAEA,GAAMC,CAAAA,QAAkB,CAAGN,QAAQ,CAAC,UAAM,CACtC,cAA6BD,QAAQ,CAAU,KAAV,CAArC,wCAAOQ,MAAP,eAAgBC,SAAhB,eACA,GAAMC,CAAAA,QAAQ,CAAGX,MAAM,CAAsB,IAAtB,CAAvB,CAEA,GAAMY,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvBF,SAAS,CAAC,CAACD,MAAF,CAAT,CACH,CAFD,CAIA,mBACI,KAAC,SAAD,wBACI,KAAC,UAAD,WACKA,MAAM,cACH,KAAC,QAAD,EAAU,KAAK,CAAEG,YAAjB,EADG,cAEH,KAAC,UAAD,EAAY,QAAQ,CAAE,gDAAML,CAAAA,SAAS,CAACM,QAAV,oBAAmBF,QAAQ,CAACG,OAA5B,4CAAmB,kBAAkBC,KAArC,CAA4CH,YAA5C,CAAN,EAAtB,CACI,QAAQ,CAAED,QADd,EAHR,EADJ,EADJ,CAYH,CApBkC,CAAnC,CAsBA,cAAeH,CAAAA,QAAf","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { observer } from 'mobx-react';\nimport CenterView from '../components/PublicComponents/CenterView'\nimport Container from '../components/PublicComponents/Container'\nimport PostWindow from '../components/PostPage/PostWindow';\nimport PostSent from '../components/PostPage/PostSent';\nimport postStore from '../store/postStore';\n\nconst PostPage: React.FC = observer(() => {\n    const [isSent , setIsSent] = useState<boolean>(false);\n    const postArea = useRef<HTMLTextAreaElement>(null);\n\n    const toggleIsSent = () => {\n        setIsSent(!isSent);\n    };\n\n    return (\n        <Container>\n            <CenterView>\n                {isSent ? \n                    <PostSent reset={toggleIsSent} /> : \n                    <PostWindow postSend={() => postStore.sendPost(postArea.current?.value, toggleIsSent)}\n                        postArea={postArea}\n                    />\n                }\n            </CenterView>\n        </Container>\n    );\n});\n\nexport default PostPage;\n"]},"metadata":{},"sourceType":"module"}