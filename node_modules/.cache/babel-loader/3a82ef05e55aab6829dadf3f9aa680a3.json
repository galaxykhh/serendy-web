{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/hyeonghan/VSCode/React/Serendy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React from'react';import styled from'styled-components';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faComments,faPaperPlane,faSignInAlt,faEnvelopeOpenText}from'@fortawesome/free-solid-svg-icons';import{usePush}from'../../hook/usePush';import{theme}from'../../style/theme';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Category=function Category(){var push=usePush();var categoryList=[{id:1,color:theme.colors.plum,icon:faComments,text:'대화 하기',push:push.pushChatPage},{id:2,color:theme.colors.plum,icon:faPaperPlane,text:'편지 보내기',push:push.pushPostPage},{id:3,color:theme.colors.yellow,icon:faEnvelopeOpenText,text:'받은 편지함',push:push.pushRecipientsPage},{id:4,color:theme.colors.yellow,icon:faSignInAlt,text:'보낸 편지함',push:push.pushSenderPage}];return/*#__PURE__*/_jsx(Container,{children:categoryList.map(function(item){return/*#__PURE__*/_jsx(Boxes,{item:item},item.id);})});};export default Category;var Boxes=function Boxes(_ref){var item=_ref.item;var push=item.push,color=item.color,icon=item.icon,text=item.text;return/*#__PURE__*/_jsxs(Box,{onClick:push,children:[/*#__PURE__*/_jsx(IconBox,{children:/*#__PURE__*/_jsx(Icon,{color:color,icon:icon})}),/*#__PURE__*/_jsx(Text,{children:text})]});};var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: flex-start;\\n    align-items: center;\\n    margin-top: 10px;\\n    padding-top: 2px;\\n    width: 100%;\\n    height: 70%;\\n    min-width: 40px;\\n    min-height: 40px;\\n\"])));var IconBox=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    min-width: 40px;\\n    min-height: 26px;\\n    @media only screen and (max-width: 600px) {\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n    };\\n\"])));var Icon=styled(FontAwesomeIcon)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    font-size: 26px;\\n    color: \",\";\\n\"])),function(_ref2){var color=_ref2.color;return color;});var Text=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    font-size: 18px;\\n    color: \",\";\\n    margin-left: 8px;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    @media only screen and (max-width: 1115px) {\\n        display: none;\\n    };\\n\"])),function(_ref3){var theme=_ref3.theme;return theme.colors.white;});var Box=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: center;\\n    padding: 25px;\\n    margin-top: 3px;\\n    margin-bottom: 5px;\\n    width: 95%;\\n    min-height: 50px;\\n    max-height: 60px;\\n    min-width: 40px;\\n    cursor: pointer;\\n    border-radius: 10px;\\n    transition: .3s ease;\\n    &:hover {\\n        background-color: \",\";\\n    };\\n    @media only screen and (max-width: 600px) {\\n        justify-content: center;\\n        padding: 0px;\\n    };\\n\"])),function(_ref4){var theme=_ref4.theme;return theme.colors.main60;});","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/components/SideBar/Category.tsx"],"names":["React","styled","FontAwesomeIcon","faComments","faPaperPlane","faSignInAlt","faEnvelopeOpenText","usePush","theme","Category","push","categoryList","id","color","colors","plum","icon","text","pushChatPage","pushPostPage","yellow","pushRecipientsPage","pushSenderPage","map","item","Boxes","Container","div","IconBox","Icon","Text","white","Box","main60"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComments, faPaperPlane, faSignInAlt, faEnvelopeOpenText } from '@fortawesome/free-solid-svg-icons';\nimport { usePush } from '../../hook/usePush';\nimport { theme } from '../../style/theme';\nimport { IBoxes } from '../../interfaces';\n\nconst Category: React.FC = () => {\n    const push = usePush();\n\n    const categoryList = [\n        {\n            id: 1,\n            color: theme.colors.plum,\n            icon: faComments,\n            text: '대화 하기',\n            push: push.pushChatPage,\n        },\n        {\n            id: 2,\n            color: theme.colors.plum,\n            icon: faPaperPlane,\n            text: '편지 보내기',\n            push: push.pushPostPage,\n        },\n        {\n            id: 3,\n            color: theme.colors.yellow,\n            icon: faEnvelopeOpenText,\n            text: '받은 편지함',\n            push: push.pushRecipientsPage,\n        },\n        {\n            id: 4,\n            color: theme.colors.yellow,\n            icon: faSignInAlt,\n            text: '보낸 편지함',\n            push: push.pushSenderPage,\n        },\n    ];\n\n    return (\n        <Container>\n            {categoryList.map(item => (\n                <Boxes item={item}\n                    key={item.id}\n                />\n            ))}\n        </Container>\n    );\n};\n\nexport default Category;\n\nconst Boxes: React.FC<IBoxes>= ({ item }) => {\n    const { push, color, icon, text } = item; \n    return (\n        <Box onClick={push} >\n            <IconBox>\n                <Icon color={color}\n                    icon={icon}\n                />\n            </IconBox>\n            <Text>{text}</Text>\n        </Box>\n    );\n};\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    margin-top: 10px;\n    padding-top: 2px;\n    width: 100%;\n    height: 70%;\n    min-width: 40px;\n    min-height: 40px;\n`;\n\nconst IconBox = styled.div`\n    min-width: 40px;\n    min-height: 26px;\n    @media only screen and (max-width: 600px) {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    };\n`;\n\nconst Icon = styled(FontAwesomeIcon)<{ color: string }>`\n    font-size: 26px;\n    color: ${({ color }) => color};\n`;\n\nconst Text = styled.div`\n    font-size: 18px;\n    color: ${({ theme }) => theme.colors.white};\n    margin-left: 8px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    @media only screen and (max-width: 1115px) {\n        display: none;\n    };\n`;\n\nconst Box = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    padding: 25px;\n    margin-top: 3px;\n    margin-bottom: 5px;\n    width: 95%;\n    min-height: 50px;\n    max-height: 60px;\n    min-width: 40px;\n    cursor: pointer;\n    border-radius: 10px;\n    transition: .3s ease;\n    &:hover {\n        background-color: ${({ theme }) => theme.colors.main60};\n    };\n    @media only screen and (max-width: 600px) {\n        justify-content: center;\n        padding: 0px;\n    };\n`;"]},"metadata":{},"sourceType":"module"}