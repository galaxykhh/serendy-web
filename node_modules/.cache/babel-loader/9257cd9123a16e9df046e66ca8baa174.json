{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonghan/VSCode/React/serendy-flutter/src/components/SharedComponents/PostComponents/Post.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircle, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = ({\n  nickname,\n  content,\n  whatPage,\n  replied,\n  showPost\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    onClick: showPost,\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      icon: faEnvelope\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      children: [/*#__PURE__*/_jsxDEV(FromAccount, {\n        children: [\"\\uBCF4\\uB0B8 \\uC0AC\\uB78C : \", nickname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MessagePreview, {\n        children: [\" \", content, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), whatPage === 'sender' && /*#__PURE__*/_jsxDEV(Alert, {\n        icon: faCircle,\n        display: !replied ? 'block' : 'none'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), whatPage === 'recipients' && /*#__PURE__*/_jsxDEV(Alert, {\n        icon: faCircle,\n        display: replied ? 'block' : 'none'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Post;\nexport default Post;\nconst Box = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    padding: 25px;\n    margin-top: 8px;\n    width: 95%;\n    height: 60px;\n    cursor: pointer;\n    border-radius: 40px;\n    transition: .3s ease;\n    &:hover {\n        background-color: ${({\n  theme\n}) => theme.colors.white10};\n    };\n`;\n_c2 = Box;\nconst Column = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    width: 400px;\n    margin-left: 20px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`;\n_c3 = Column;\nconst Icon = styled(FontAwesomeIcon)`\n    font-size: 40px;\n    color: ${({\n  theme\n}) => theme.colors.white};\n`;\n_c4 = Icon;\nconst FromAccount = styled.div`\n    font-size: 15px;\n    margin-left: 10px;\n    width: 80%;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    color: ${({\n  theme\n}) => theme.colors.white};\n`;\n_c5 = FromAccount;\nconst MessagePreview = styled.div`\n    font-size: 13px;\n    margin-left: 10px;\n    width: 80%;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    color: ${({\n  theme\n}) => theme.colors.mainBlue};\n`;\n_c6 = MessagePreview;\nconst Alert = styled(FontAwesomeIcon)`\n    position: absolute;\n    right: 0px;\n    font-size: 15px;\n    display: ${({\n  display\n}) => display};\n    color: ${({\n  theme\n}) => theme.colors.red};\n`;\n_c7 = Alert;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Box\");\n$RefreshReg$(_c3, \"Column\");\n$RefreshReg$(_c4, \"Icon\");\n$RefreshReg$(_c5, \"FromAccount\");\n$RefreshReg$(_c6, \"MessagePreview\");\n$RefreshReg$(_c7, \"Alert\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/serendy-flutter/src/components/SharedComponents/PostComponents/Post.tsx"],"names":["React","styled","FontAwesomeIcon","faCircle","faEnvelope","Post","nickname","content","whatPage","replied","showPost","Box","div","theme","colors","white10","Column","Icon","white","FromAccount","MessagePreview","mainBlue","Alert","display","red"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,mCAArC;;;AAIA,MAAMC,IAAqB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,QAArB;AAA+BC,EAAAA,OAA/B;AAAwCC,EAAAA;AAAxC,CAAD,KAAwD;AAClF,sBACI,QAAC,GAAD;AAAK,IAAA,OAAO,EAAEA,QAAd;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEN;AAAZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA,8BACI,QAAC,WAAD;AAAA,mDAAsBE,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,cAAD;AAAA,wBAAkBC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKC,QAAQ,KAAK,QAAb,iBACG,QAAC,KAAD;AACI,QAAA,IAAI,EAAEL,QADV;AAEI,QAAA,OAAO,EAAE,CAACM,OAAD,GAAW,OAAX,GAAqB;AAFlC;AAAA;AAAA;AAAA;AAAA,cAJR,EASKD,QAAQ,KAAK,YAAb,iBACG,QAAC,KAAD;AACI,QAAA,IAAI,EAAEL,QADV;AAEI,QAAA,OAAO,EAAEM,OAAO,GAAG,OAAH,GAAa;AAFjC;AAAA;AAAA;AAAA;AAAA,cAVR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAtBD;;KAAMJ,I;AAwBN,eAAeA,IAAf;AAEA,MAAMM,GAAG,GAAGV,MAAM,CAACW,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,OAAQ;AAChE;AACA,CAdA;MAAMJ,G;AAgBN,MAAMK,MAAM,GAAGf,MAAM,CAACW,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMI,M;AAaN,MAAMC,IAAI,GAAGhB,MAAM,CAACC,eAAD,CAAkB;AACrC;AACA,aAAa,CAAC;AAAEW,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaI,KAAM;AAC/C,CAHA;MAAMD,I;AAKN,MAAME,WAAW,GAAGlB,MAAM,CAACW,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaI,KAAM;AAC/C,CARA;MAAMC,W;AAUN,MAAMC,cAAc,GAAGnB,MAAM,CAACW,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaO,QAAS;AAClD,CARA;MAAMD,c;AAUN,MAAME,KAAK,GAAGrB,MAAM,CAACC,eAAD,CAA4C;AAChE;AACA;AACA;AACA,eAAe,CAAC;AAAEqB,EAAAA;AAAF,CAAD,KAAiBA,OAAQ;AACxC,aAAa,CAAC;AAAEV,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaU,GAAI;AAC7C,CANA;MAAMF,K","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircle, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { DisplayType } from '../../../interfaces';\nimport { IPost } from '../../../interfaces';\n\nconst Post: React.FC<IPost> = ({ nickname, content, whatPage, replied, showPost }) => {\n    return (\n        <Box onClick={showPost} >\n            <Icon icon={faEnvelope} />\n            <Column>\n                <FromAccount>보낸 사람 : {nickname}</FromAccount>\n                <MessagePreview> {content}  </MessagePreview>\n                {whatPage === 'sender' &&\n                    <Alert\n                        icon={faCircle}\n                        display={!replied ? 'block' : 'none'}\n                    />\n                }\n                {whatPage === 'recipients' &&\n                    <Alert\n                        icon={faCircle} \n                        display={replied ? 'block' : 'none'}\n                    />\n                }\n            </Column>\n        </Box>\n    );\n};\n\nexport default Post;\n\nconst Box = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    padding: 25px;\n    margin-top: 8px;\n    width: 95%;\n    height: 60px;\n    cursor: pointer;\n    border-radius: 40px;\n    transition: .3s ease;\n    &:hover {\n        background-color: ${({ theme }) => theme.colors.white10};\n    };\n`;\n\nconst Column = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    width: 400px;\n    margin-left: 20px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n    font-size: 40px;\n    color: ${({ theme }) => theme.colors.white};\n`;\n\nconst FromAccount = styled.div`\n    font-size: 15px;\n    margin-left: 10px;\n    width: 80%;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    color: ${({ theme }) => theme.colors.white};\n`;\n\nconst MessagePreview = styled.div`\n    font-size: 13px;\n    margin-left: 10px;\n    width: 80%;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    color: ${({ theme }) => theme.colors.mainBlue};\n`;\n\nconst Alert = styled(FontAwesomeIcon)<{ display: DisplayType }>`\n    position: absolute;\n    right: 0px;\n    font-size: 15px;\n    display: ${({ display }) => display};\n    color: ${({ theme }) => theme.colors.red};\n`;"]},"metadata":{},"sourceType":"module"}