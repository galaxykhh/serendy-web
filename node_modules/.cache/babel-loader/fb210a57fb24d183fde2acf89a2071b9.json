{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonghan/VSCode/React/Serendy/client/src/components/ChatPage/ChatWindow.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useChat } from '../../Hooks/useChat';\nimport { zoomIn, zoomOut } from '../../style/keyframes';\nimport userStore from '../../store/userStore';\nimport MessageBox from './MessageBox';\nimport { observer } from 'mobx-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = observer(_c = _s(() => {\n  _s();\n\n  const sendBtn = useRef(null);\n  const input = useRef(null);\n  const screen = useRef(null);\n  const chat = useChat();\n\n  const handleEnter = e => {\n    if (e.key === 'Enter') {\n      var _sendBtn$current;\n\n      (_sendBtn$current = sendBtn.current) === null || _sendBtn$current === void 0 ? void 0 : _sendBtn$current.click();\n    }\n\n    ;\n  };\n\n  const handleSendMsg = () => {\n    var _input$current;\n\n    if (((_input$current = input.current) === null || _input$current === void 0 ? void 0 : _input$current.value.length) !== 0) {\n      var _userStore$user, _input$current2, _userStore$userSocket;\n\n      const nickName = (_userStore$user = userStore.user) === null || _userStore$user === void 0 ? void 0 : _userStore$user.nickName;\n      const message = (_input$current2 = input.current) === null || _input$current2 === void 0 ? void 0 : _input$current2.value;\n      const data = {\n        nickName: nickName,\n        message: message\n      };\n      (_userStore$userSocket = userStore.userSocket) === null || _userStore$userSocket === void 0 ? void 0 : _userStore$userSocket.emit('chat', data);\n      input.current.value = '';\n    } else {\n      return;\n    }\n\n    ;\n  };\n\n  useEffect(() => {\n    chat.getMatchedUser();\n    chat.handleReceiveMsg();\n    chat.chatStopped(); // 상대방이 대화종료를 했을때\n  }, []); // eslint-disable-line\n\n  useEffect(() => {\n    return () => {\n      chat.stopChat();\n    };\n  }, []); // eslint-disable-line\n\n  useEffect(() => {\n    chat.handlePushChat();\n    return () => {\n      chat.setRecentChat({\n        nickName: '',\n        message: '',\n        socketID: ''\n      });\n      chat.scrollToBottom();\n    };\n  }, [chat.recentChat.message]); // eslint-disable-line\n\n  return /*#__PURE__*/_jsxDEV(ChatBox, {\n    animation: chat.isMatched ? zoomIn : zoomOut,\n    visibility: chat.display,\n    children: [/*#__PURE__*/_jsxDEV(Screen, {\n      ref: screen,\n      children: chat.chatLog.map((data, index) => /*#__PURE__*/_jsxDEV(MessageBox, {\n        message: data.message,\n        nickName: data.nickName,\n        socketID: data.socketID === userStore.socketID\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SenderBox, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: input,\n        onKeyPress: handleEnter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SendBtn, {\n        ref: sendBtn,\n        onClick: handleSendMsg,\n        disabled: chat.isFinished ? true : false,\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}, \"NR0UUs0WqzvAerbGDkuZaT5cRWQ=\", false, function () {\n  return [useChat];\n}));\n_c2 = ChatWindow;\nexport default ChatWindow;\nconst ChatBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-right: 20px;\n    width: 100%;\n    height: 740px;\n    min-height: 740px;\n    visibility: ${({\n  visibility\n}) => visibility};\n    animation: ${({\n  animation\n}) => animation} .7s ease forwards;\n    @media only screen and (max-width: 1450px) {\n        margin-right: 0px;\n        min-height: 340px;\n    };\n    @media only screen and (max-width: 600px) {\n        height: 100%;\n    };\n`;\n_c3 = ChatBox;\nconst Screen = styled.div`\n    width: 740px;\n    height: 680px;\n    max-height: 680px;\n    background-color: ${({\n  theme\n}) => theme.colors.white10};\n    border-radius: 10px;\n    overflow-y: auto;\n    @media only screen and (max-width: 1450px) {\n        width: 99%;\n        height: 70%;\n        min-width: 300px;\n    };\n`;\n_c4 = Screen;\nconst SenderBox = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 10px;\n    width: 740px;\n    min-width: 500px;\n    height: 50px;\n    @media only screen and (max-width: 1450px) {\n        width: 99%;\n        min-width: 200px;\n    };\n`;\n_c5 = SenderBox;\nconst Input = styled.input.attrs({\n  type: 'text',\n  placeholder: '내용을 입력해주세요',\n  autocomplete: 'off'\n})`\n    all: unset;\n    width: 84%;\n    min-height: 50px;\n    padding-left: 30px;\n    font-size: 18px;\n    color: ${({\n  theme\n}) => theme.colors.white};\n    background-color: ${({\n  theme\n}) => theme.colors.white10};\n    border-radius: 10px;\n    @media only screen and (max-width: 600px) {\n        width: 70%;\n        font-size: 15px;\n    };\n`;\n_c6 = Input;\nconst SendBtn = styled.button`\n    all: unset;\n    width: 10%;\n    height: 50px;\n    font-size: 18px;\n    text-align: center;\n    background-color: ${({\n  theme\n}) => theme.colors.main60};\n    border-radius: 10px;\n    color: ${({\n  theme\n}) => theme.colors.white};\n    cursor: pointer;\n    transition: .3s ease;\n    &:hover {\n        background-color: ${({\n  theme\n}) => theme.colors.plum};\n        color: ${({\n  theme\n}) => theme.colors.black};\n    }\n    @media only screen and (max-width: 1450px) {\n        font-size: 15px;\n        width: 10%;\n    };\n    @media only screen and (max-width: 600px) {\n        width: 18%;\n    };\n`;\n_c7 = SendBtn;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ChatWindow$observer\");\n$RefreshReg$(_c2, \"ChatWindow\");\n$RefreshReg$(_c3, \"ChatBox\");\n$RefreshReg$(_c4, \"Screen\");\n$RefreshReg$(_c5, \"SenderBox\");\n$RefreshReg$(_c6, \"Input\");\n$RefreshReg$(_c7, \"SendBtn\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/components/ChatPage/ChatWindow.tsx"],"names":["React","useRef","useEffect","styled","useChat","zoomIn","zoomOut","userStore","MessageBox","observer","ChatWindow","sendBtn","input","screen","chat","handleEnter","e","key","current","click","handleSendMsg","value","length","nickName","user","message","data","userSocket","emit","getMatchedUser","handleReceiveMsg","chatStopped","stopChat","handlePushChat","setRecentChat","socketID","scrollToBottom","recentChat","isMatched","display","chatLog","map","index","isFinished","ChatBox","div","visibility","animation","Screen","theme","colors","white10","SenderBox","Input","attrs","type","placeholder","autocomplete","white","SendBtn","button","main60","plum","black"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport styled, { Keyframes } from 'styled-components'\nimport { useChat } from '../../Hooks/useChat'\nimport { VisibilityType } from '../../interfaces'\nimport { zoomIn, zoomOut } from '../../style/keyframes'\nimport userStore from '../../store/userStore'\nimport MessageBox from './MessageBox'\nimport { observer } from 'mobx-react'\n\nconst ChatWindow: React.FC = observer(() => {\n    const sendBtn = useRef<HTMLButtonElement>(null);\n    const input = useRef<HTMLInputElement>(null);\n    const screen = useRef<HTMLDivElement>(null);\n    const chat = useChat();\n\n    const handleEnter = (e: React.KeyboardEvent): void => {\n        if (e.key === 'Enter') {\n            sendBtn.current?.click();\n        };\n    };\n\n    const handleSendMsg = (): void => {\n        if (input.current?.value.length !== 0) {\n            const nickName = userStore.user?.nickName;\n            const message = input.current?.value;\n            const data = {\n                nickName: nickName,\n                message: message,\n            };\n            userStore.userSocket?.emit('chat', data);\n            input.current!.value = '';\n\n        } else {\n            return;\n        };\n    };\n\n    useEffect(() => {\n        chat.getMatchedUser();\n        chat.handleReceiveMsg();\n        chat.chatStopped(); // 상대방이 대화종료를 했을때\n    }, []); // eslint-disable-line\n\n    useEffect(() => { \n        return () => {\n            chat.stopChat();\n        };\n    }, []); // eslint-disable-line\n\n    useEffect(() => {\n        chat.handlePushChat();\n        return () => {\n            chat.setRecentChat({ nickName: '', message: '', socketID: '' });\n            chat.scrollToBottom();\n        };\n    }, [chat.recentChat.message]); // eslint-disable-line\n\n    return (\n        <ChatBox animation={chat.isMatched ? zoomIn : zoomOut}\n            visibility={chat.display}\n        >\n            <Screen ref={screen} >\n                {chat.chatLog.map((data, index) => (\n                    <MessageBox message={data.message}\n                        nickName={data.nickName}\n                        socketID={data.socketID === userStore.socketID}\n                        key={index}\n                    />\n                ))}\n            </Screen>\n            <SenderBox>\n                <Input ref={input}\n                    onKeyPress={handleEnter}\n                />\n                <SendBtn ref={sendBtn}\n                    onClick={handleSendMsg}\n                    disabled={chat.isFinished ? true : false}\n                >\n                    전송\n                </SendBtn>\n            </SenderBox>\n        </ChatBox>\n    );\n});\n\nexport default ChatWindow;\n\nconst ChatBox = styled.div<{ animation: Keyframes, visibility: VisibilityType }>`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-right: 20px;\n    width: 100%;\n    height: 740px;\n    min-height: 740px;\n    visibility: ${({ visibility }) => visibility};\n    animation: ${({ animation }) => animation} .7s ease forwards;\n    @media only screen and (max-width: 1450px) {\n        margin-right: 0px;\n        min-height: 340px;\n    };\n    @media only screen and (max-width: 600px) {\n        height: 100%;\n    };\n`;\n\nconst Screen = styled.div`\n    width: 740px;\n    height: 680px;\n    max-height: 680px;\n    background-color: ${({ theme }) => theme.colors.white10};\n    border-radius: 10px;\n    overflow-y: auto;\n    @media only screen and (max-width: 1450px) {\n        width: 99%;\n        height: 70%;\n        min-width: 300px;\n    };\n`;\n\nconst SenderBox = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 10px;\n    width: 740px;\n    min-width: 500px;\n    height: 50px;\n    @media only screen and (max-width: 1450px) {\n        width: 99%;\n        min-width: 200px;\n    };\n`;\n\nconst Input = styled.input.attrs(({\n    type: 'text',\n    placeholder: '내용을 입력해주세요',\n    autocomplete: 'off',\n}))`\n    all: unset;\n    width: 84%;\n    min-height: 50px;\n    padding-left: 30px;\n    font-size: 18px;\n    color: ${({ theme }) => theme.colors.white};\n    background-color: ${({ theme }) => theme.colors.white10};\n    border-radius: 10px;\n    @media only screen and (max-width: 600px) {\n        width: 70%;\n        font-size: 15px;\n    };\n`;\n\nconst SendBtn = styled.button`\n    all: unset;\n    width: 10%;\n    height: 50px;\n    font-size: 18px;\n    text-align: center;\n    background-color: ${({ theme }) => theme.colors.main60};\n    border-radius: 10px;\n    color: ${({ theme }) => theme.colors.white};\n    cursor: pointer;\n    transition: .3s ease;\n    &:hover {\n        background-color: ${({ theme }) => theme.colors.plum};\n        color: ${({ theme }) => theme.colors.black};\n    }\n    @media only screen and (max-width: 1450px) {\n        font-size: 15px;\n        width: 10%;\n    };\n    @media only screen and (max-width: 600px) {\n        width: 18%;\n    };\n`;"]},"metadata":{},"sourceType":"module"}