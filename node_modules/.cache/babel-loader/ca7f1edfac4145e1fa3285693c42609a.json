{"ast":null,"code":"import _regeneratorRuntime from\"/Users/hyeonghan/VSCode/React/Serendy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/hyeonghan/VSCode/React/Serendy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/hyeonghan/VSCode/React/Serendy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from'react';import{observer}from'mobx-react';import CenterView from'../components/SharedComponents/CenterView';import Container from'../components/SharedComponents/Container';import PostWindow from'../components/PostPage/PostWindow';import PostSent from'../components/PostPage/PostSent';import postStore from'../store/postStore';import CircleLoader from'../components/SharedComponents/CircleLoader';import{flowResult}from'mobx';import{jsx as _jsx}from\"react/jsx-runtime\";var PostPage=observer(function(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isSending=_useState2[0],setIsSending=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isSent=_useState4[0],setIsSent=_useState4[1];var postArea=useRef(null);var toggleIsSent=function toggleIsSent(){setIsSent(!isSent);};;var toggleIsSending=function toggleIsSending(){setIsSending(!isSending);};var sendPost=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _postArea$current;var isSuccess;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:toggleIsSending();_context.next=3;return flowResult(postStore.sendPost((_postArea$current=postArea.current)===null||_postArea$current===void 0?void 0:_postArea$current.value));case 3:isSuccess=_context.sent;if(isSuccess){toggleIsSending();toggleIsSent();};case 6:case\"end\":return _context.stop();}}},_callee);}));return function sendPost(){return _ref.apply(this,arguments);};}();var reset=function reset(){setIsSent(false);setIsSending(false);};if(isSending&&!isSent){return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(CenterView,{children:/*#__PURE__*/_jsx(CircleLoader,{})})});}else{return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(CenterView,{children:isSent?/*#__PURE__*/_jsx(PostSent,{reset:reset}):/*#__PURE__*/_jsx(PostWindow,{postSend:sendPost,postArea:postArea})})});};});export default PostPage;","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/pages/PostPage.tsx"],"names":["React","useRef","useState","observer","CenterView","Container","PostWindow","PostSent","postStore","CircleLoader","flowResult","PostPage","isSending","setIsSending","isSent","setIsSent","postArea","toggleIsSent","toggleIsSending","sendPost","current","value","isSuccess","reset"],"mappings":"seAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,KAAwC,OAAxC,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2CAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0CAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,mCAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,iCAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,6CAAzB,CACA,OAASC,UAAT,KAA2B,MAA3B,C,2CAEA,GAAMC,CAAAA,QAAkB,CAAGR,QAAQ,CAAC,UAAM,CACtC,cAAkCD,QAAQ,CAAU,KAAV,CAA1C,wCAAOU,SAAP,eAAkBC,YAAlB,eACA,eAA6BX,QAAQ,CAAU,KAAV,CAArC,yCAAOY,MAAP,eAAgBC,SAAhB,eACA,GAAMC,CAAAA,QAAQ,CAAGf,MAAM,CAAsB,IAAtB,CAAvB,CAEA,GAAMgB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAY,CAC7BF,SAAS,CAAC,CAACD,MAAF,CAAT,CACH,CAFD,CAEE,CAEF,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAY,CAChCL,YAAY,CAAC,CAACD,SAAF,CAAZ,CACH,CAFD,CAIA,GAAMO,CAAAA,QAAQ,0FAAG,uKACbD,eAAe,GADF,sBAEWR,CAAAA,UAAU,CAACF,SAAS,CAACW,QAAV,oBAAmBH,QAAQ,CAACI,OAA5B,4CAAmB,kBAAkBC,KAArC,CAAD,CAFrB,QAEPC,SAFO,eAGb,GAAIA,SAAJ,CAAe,CACXJ,eAAe,GACfD,YAAY,GACf,EANY,sDAAH,kBAARE,CAAAA,QAAQ,0CAAd,CASA,GAAMI,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAY,CACtBR,SAAS,CAAC,KAAD,CAAT,CACAF,YAAY,CAAC,KAAD,CAAZ,CACH,CAHD,CAOA,GAAID,SAAS,EAAI,CAACE,MAAlB,CAA0B,CACtB,mBACI,KAAC,SAAD,wBACI,KAAC,UAAD,wBACI,KAAC,YAAD,IADJ,EADJ,EADJ,CAOH,CARD,IAQO,CACH,mBACI,KAAC,SAAD,wBACI,KAAC,UAAD,WACKA,MAAM,cACH,KAAC,QAAD,EAAU,KAAK,CAAES,KAAjB,EADG,cAEH,KAAC,UAAD,EAAY,QAAQ,CAAEJ,QAAtB,CACI,QAAQ,CAAEH,QADd,EAHR,EADJ,EADJ,CAYH,EACJ,CAnDkC,CAAnC,CAqDA,cAAeL,CAAAA,QAAf","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { observer } from 'mobx-react';\nimport CenterView from '../components/SharedComponents/CenterView'\nimport Container from '../components/SharedComponents/Container'\nimport PostWindow from '../components/PostPage/PostWindow';\nimport PostSent from '../components/PostPage/PostSent';\nimport postStore from '../store/postStore';\nimport CircleLoader from '../components/SharedComponents/CircleLoader';\nimport { flowResult } from 'mobx';\n\nconst PostPage: React.FC = observer(() => {\n    const [isSending, setIsSending] = useState<boolean>(false);\n    const [isSent , setIsSent] = useState<boolean>(false);\n    const postArea = useRef<HTMLTextAreaElement>(null);\n\n    const toggleIsSent = (): void => {\n        setIsSent(!isSent);\n    };;\n\n    const toggleIsSending = (): void => {\n        setIsSending(!isSending);\n    };\n\n    const sendPost = async () => {\n        toggleIsSending();\n        const isSuccess = await flowResult(postStore.sendPost(postArea.current?.value));\n        if (isSuccess) {\n            toggleIsSending();\n            toggleIsSent();\n        };\n    };\n\n    const reset = (): void => {\n        setIsSent(false);\n        setIsSending(false);\n    };\n\n\n\n    if (isSending && !isSent) {\n        return (\n            <Container>\n                <CenterView>\n                    <CircleLoader />\n                </CenterView>\n            </Container>\n        );\n    } else {\n        return (\n            <Container>\n                <CenterView>\n                    {isSent ? \n                        <PostSent reset={reset} /> : \n                        <PostWindow postSend={sendPost}\n                            postArea={postArea}\n                        />\n                    }\n                </CenterView>\n            </Container>\n        );\n    };\n});\n\nexport default PostPage;\n"]},"metadata":{},"sourceType":"module"}