{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nexport const useChat = () => {\n  _s();\n\n  const [isSearching, setIsSearching] = useState(false);\n  const [isMatched, setIsMatched] = useState(false);\n  const [display, setDisplay] = useState('none');\n  const sendBtn = useRef(null);\n  const inputBox = useRef(null);\n\n  const showChat = () => {\n    setDisplay('block');\n  };\n\n  const handleSearch = () => {\n    if (display === 'none') {\n      showChat();\n    }\n\n    if (isSearching) {\n      setIsSearching(!isSearching);\n      setIsMatched(false);\n      return;\n    } else {\n      setIsSearching(!isSearching);\n      setTimeout(() => setIsMatched(true), 1000);\n    }\n  };\n\n  const handleMatch = () => {\n    setIsMatched(true);\n  };\n\n  return {\n    isSearching,\n    isMatched,\n    display,\n    sendBtn,\n    inputBox,\n    handleSearch,\n    handleMatch\n  };\n};\n\n_s(useChat, \"xJSTOk2jxUCir2ZoODPJK8GfF18=\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/Hooks/useChat.ts"],"names":["useState","useRef","useChat","isSearching","setIsSearching","isMatched","setIsMatched","display","setDisplay","sendBtn","inputBox","showChat","handleSearch","setTimeout","handleMatch"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AAGA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAU,KAAV,CAA9C;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAc,MAAd,CAAtC;AACA,QAAMS,OAAO,GAAGR,MAAM,CAAoB,IAApB,CAAtB;AACA,QAAMS,QAAQ,GAAGT,MAAM,CAAmB,IAAnB,CAAvB;;AAEA,QAAMU,QAAQ,GAAG,MAAY;AACzBH,IAAAA,UAAU,CAAC,OAAD,CAAV;AACH,GAFD;;AAIA,QAAMI,YAAY,GAAG,MAAY;AAC7B,QAAIL,OAAO,KAAK,MAAhB,EAAwB;AACpBI,MAAAA,QAAQ;AACX;;AACD,QAAIR,WAAJ,EAAiB;AACbC,MAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;AACH,KAJD,MAIO;AACHF,MAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACAU,MAAAA,UAAU,CAAC,MAAMP,YAAY,CAAC,IAAD,CAAnB,EAA2B,IAA3B,CAAV;AACH;AACJ,GAZD;;AAcA,QAAMQ,WAAW,GAAG,MAAY;AAC5BR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAIA,SAAO;AACHH,IAAAA,WADG;AAEHE,IAAAA,SAFG;AAGHE,IAAAA,OAHG;AAIHE,IAAAA,OAJG;AAKHC,IAAAA,QALG;AAMHE,IAAAA,YANG;AAOHE,IAAAA;AAPG,GAAP;AASH,CAtCM;;GAAMZ,O","sourcesContent":["import { useState, useRef } from 'react'\nimport { DisplayType } from '../config';\n\nexport const useChat = () => {\n    const [isSearching, setIsSearching] = useState<boolean>(false);\n    const [isMatched, setIsMatched] = useState<boolean>(false);\n    const [display, setDisplay] = useState<DisplayType>('none');\n    const sendBtn = useRef<HTMLButtonElement>(null);\n    const inputBox = useRef<HTMLInputElement>(null);\n\n    const showChat = (): void => {\n        setDisplay('block');\n    }\n\n    const handleSearch = (): void => {\n        if (display === 'none') {\n            showChat();\n        }\n        if (isSearching) {\n            setIsSearching(!isSearching);\n            setIsMatched(false);\n            return;\n        } else {\n            setIsSearching(!isSearching);\n            setTimeout(() => setIsMatched(true), 1000);\n        }\n    };\n\n    const handleMatch = (): void => {\n        setIsMatched(true);\n    }\n\n    return {\n        isSearching,\n        isMatched,\n        display,\n        sendBtn,\n        inputBox,\n        handleSearch,\n        handleMatch,\n    }\n}"]},"metadata":{},"sourceType":"module"}