{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonghan/VSCode/React/Serendy/client/src/components/FindPW/FindPWBox.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useForm } from 'react-hook-form';\nimport { zoomIn } from '../../style/keyframes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FindPWBox = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setError,\n    trigger,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [isAlready, setIsAlready] = useState(false); // 계정 중복체크\n\n  const signUpBtn = useRef(null); // 엔터 누를시 버튼 클릭\n\n  const entered = e => {\n    if (e.key === 'Enter') {\n      var _signUpBtn$current;\n\n      (_signUpBtn$current = signUpBtn.current) === null || _signUpBtn$current === void 0 ? void 0 : _signUpBtn$current.click();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this);\n};\n\n_s(FindPWBox, \"JbeWy9dhmznpNimrYnjplE26jac=\", false, function () {\n  return [useForm];\n});\n\n_c = FindPWBox;\nexport default FindPWBox;\nconst Box = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    width: 600px;\n    height: 640px;\n    animation: ${zoomIn} .6s ease;\n`;\n_c2 = Box;\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 10px;\n`;\nconst Row = styled.div`\n    width: 420px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 30px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid ${({\n  theme\n}) => theme.colors.white};\n`;\nconst Input = styled.input`\n    all: unset;\n    width: 400px;\n    height: 40px;\n    font-size: 21px;\n    padding-left: 20px;\n    color: ${({\n  theme\n}) => theme.colors.white};\n`;\nconst Button = styled.button`\n    all: unset;\n    width: 200px;\n    height: 55px;\n    border-radius: 40px;\n    background-color: ${({\n  theme\n}) => theme.colors.mainBlue};\n    color: ${({\n  theme\n}) => theme.colors.white};\n    font-size: 20px;\n    text-align: center;\n    margin-top: 20px;\n    margin-bottom: 50px;\n    cursor: pointer;\n    transition: .3s ease;\n    &:hover {\n        background-color: ${({\n  theme\n}) => theme.colors.white};\n        color: ${({\n  theme\n}) => theme.colors.mainBlue};\n    }\n`;\nconst DupliBtn = styled(Button)`\n    width: 170px;\n    height: 45px;\n    margin-bottom: 10px;\n    margin-top: 0;\n`;\nconst Icon = styled(FontAwesomeIcon)`\n    font-size: 35px;\n    transform: translateY(-5px);\n    color: ${({\n  color\n}) => color};\n`;\nconst ErrorMsg = styled.div`\n    font-size: 15px;\n    transform: translateY(-10px);\n    color: ${({\n  theme\n}) => theme.colors.red};\n`;\nconst Msg = styled(ErrorMsg)`\n    color: ${({\n  theme\n}) => theme.colors.white};\n`;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FindPWBox\");\n$RefreshReg$(_c2, \"Box\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/components/FindPW/FindPWBox.tsx"],"names":["React","useState","useRef","styled","FontAwesomeIcon","useForm","zoomIn","FindPWBox","register","handleSubmit","watch","setError","trigger","formState","errors","isAlready","setIsAlready","signUpBtn","entered","e","key","current","click","Box","div","Column","Row","theme","colors","white","Input","input","Button","button","mainBlue","DupliBtn","Icon","color","ErrorMsg","red","Msg"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faLock, faUserAlt, faUserSecret } from '@fortawesome/free-solid-svg-icons';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { zoomIn } from '../../style/keyframes';\n\nexport interface ISignUpData {\n    account: string;\n    password: string;\n    check: string;\n    secretMessage: string;\n}\nconst FindPWBox: React.FC = () => {\n    const { register, handleSubmit, watch, setError, trigger, formState: { errors } } = useForm<ISignUpData>();\n    const [isAlready, setIsAlready] = useState<boolean>(false); // 계정 중복체크\n    const signUpBtn = useRef<HTMLButtonElement>(null);\n\n    // 엔터 누를시 버튼 클릭\n    const entered = (e: React.KeyboardEvent): void => {\n        if (e.key === 'Enter') {\n            signUpBtn.current?.click();\n        }\n    }\n        return (\n            <Box>\n                \n            </Box>\n        )\n}\nexport default FindPWBox;\n\nconst Box = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    width: 600px;\n    height: 640px;\n    animation: ${zoomIn} .6s ease;\n`;\n\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 10px;\n`;\n\nconst Row = styled.div`\n    width: 420px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 30px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.white};\n`;\n\nconst Input = styled.input`\n    all: unset;\n    width: 400px;\n    height: 40px;\n    font-size: 21px;\n    padding-left: 20px;\n    color: ${({ theme }) => theme.colors.white};\n`;\n\nconst Button = styled.button`\n    all: unset;\n    width: 200px;\n    height: 55px;\n    border-radius: 40px;\n    background-color: ${({ theme }) => theme.colors.mainBlue};\n    color: ${({ theme }) => theme.colors.white};\n    font-size: 20px;\n    text-align: center;\n    margin-top: 20px;\n    margin-bottom: 50px;\n    cursor: pointer;\n    transition: .3s ease;\n    &:hover {\n        background-color: ${({ theme }) => theme.colors.white};\n        color: ${({ theme }) => theme.colors.mainBlue};\n    }\n`;\n\nconst DupliBtn = styled(Button)`\n    width: 170px;\n    height: 45px;\n    margin-bottom: 10px;\n    margin-top: 0;\n`;\n\nconst Icon = styled(FontAwesomeIcon)<{\n    color: string\n}>`\n    font-size: 35px;\n    transform: translateY(-5px);\n    color: ${({ color }) => color};\n`;\n\nconst ErrorMsg = styled.div`\n    font-size: 15px;\n    transform: translateY(-10px);\n    color: ${({ theme }) => theme.colors.red};\n`;\n\nconst Msg = styled(ErrorMsg)`\n    color: ${({ theme }) => theme.colors.white};\n`;"]},"metadata":{},"sourceType":"module"}