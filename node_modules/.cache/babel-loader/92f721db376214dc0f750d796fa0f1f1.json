{"ast":null,"code":"import _toConsumableArray from\"/Users/hyeonghan/VSCode/React/Serendy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/hyeonghan/VSCode/React/Serendy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hyeonghan/VSCode/React/Serendy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{action,makeObservable,observable,runInAction}from\"mobx\";import userStore from\"./userStore\";var ChatStore=/*#__PURE__*/function(){function ChatStore(){_classCallCheck(this,ChatStore);this.isSearching=false;this.isMatched=false;this.isFinished=false;this.visible='hidden';this.chatLog=[];this.recentChat={nickName:'',message:'',socketID:''};makeObservable(this,{isSearching:observable,isMatched:observable,isFinished:observable,visible:observable,chatLog:observable,recentChat:observable,setIsSearching:action,setIsMatched:action,setIsFinished:action,resetRecentChat:action,handleCancel:action,handleFind:action,handleSearch:action.bound,handleMatched:action,handleReceiveMsg:action,handlePushChat:action,handleFinished:action,stopChat:action.bound,chatStopped:action,reset:action.bound});}_createClass(ChatStore,[{key:\"setIsSearching\",value:function setIsSearching(boolean){this.isSearching=boolean;}},{key:\"setIsMatched\",value:function setIsMatched(boolean){this.isMatched=boolean;}},{key:\"setIsFinished\",value:function setIsFinished(boolean){this.isFinished=boolean;}},{key:\"setVisible\",value:function setVisible(status){this.visible=status;}},{key:\"resetRecentChat\",value:function resetRecentChat(){this.recentChat={nickName:'',message:'',socketID:''};}},{key:\"handleCancel\",value:function handleCancel(){var _userStore$userSocket;(_userStore$userSocket=userStore.userSocket)===null||_userStore$userSocket===void 0?void 0:_userStore$userSocket.emit('cancel');}},{key:\"handleFind\",value:function handleFind(){var _userStore$userSocket2;(_userStore$userSocket2=userStore.userSocket)===null||_userStore$userSocket2===void 0?void 0:_userStore$userSocket2.emit('find');}},{key:\"handleSearch\",value:function handleSearch(){if(!this.isSearching){this.setIsSearching(true);this.handleFind();}else{this.setIsSearching(false);this.handleCancel();};}},{key:\"handleMatched\",value:function handleMatched(){var _userStore$userSocket3,_this=this;(_userStore$userSocket3=userStore.userSocket)===null||_userStore$userSocket3===void 0?void 0:_userStore$userSocket3.on('matched',function(){runInAction(function(){_this.setIsMatched(true);_this.setVisible('visible');_this.chatLog=[{nickName:'SERENDY',message:'상대와 대화가 시작되었어요!',socketID:'admin'}];});});}},{key:\"handleReceiveMsg\",value:function handleReceiveMsg(){var _userStore$userSocket4,_this2=this;(_userStore$userSocket4=userStore.userSocket)===null||_userStore$userSocket4===void 0?void 0:_userStore$userSocket4.on('receive',function(data,socketID){runInAction(function(){_this2.recentChat={nickName:data.nickName,message:data.message,socketID:socketID};});});}},{key:\"handlePushChat\",value:function handlePushChat(){if(this.recentChat.message.length>0){this.chatLog=[].concat(_toConsumableArray(this.chatLog),[this.recentChat]);};}},{key:\"handleFinished\",value:function handleFinished(){if(this.isSearching&&this.isMatched&&!this.isFinished){this.setIsFinished(true);this.recentChat={nickName:'SERENDY',message:'대화가 종료되었어요!',socketID:'admin'};}else{return;};}},{key:\"stopChat\",value:function stopChat(){var _userStore$userSocket5;(_userStore$userSocket5=userStore.userSocket)===null||_userStore$userSocket5===void 0?void 0:_userStore$userSocket5.emit('stop chat');this.handleFinished();}},{key:\"chatStopped\",value:function chatStopped(){var _userStore$userSocket6,_this3=this;(_userStore$userSocket6=userStore.userSocket)===null||_userStore$userSocket6===void 0?void 0:_userStore$userSocket6.on('is ended',function(){var _userStore$userSocket7;(_userStore$userSocket7=userStore.userSocket)===null||_userStore$userSocket7===void 0?void 0:_userStore$userSocket7.emit('delete other');_this3.handleFinished();});}},{key:\"reset\",value:function reset(){this.chatLog=[];this.setIsSearching(false);this.setIsFinished(false);this.setIsMatched(false);}}]);return ChatStore;}();;var chatStore=new ChatStore();export default chatStore;","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/store/chatStore.ts"],"names":["action","makeObservable","observable","runInAction","userStore","ChatStore","isSearching","isMatched","isFinished","visible","chatLog","recentChat","nickName","message","socketID","setIsSearching","setIsMatched","setIsFinished","resetRecentChat","handleCancel","handleFind","handleSearch","bound","handleMatched","handleReceiveMsg","handlePushChat","handleFinished","stopChat","chatStopped","reset","boolean","status","userSocket","emit","on","setVisible","data","length","chatStore"],"mappings":"+eAAA,OAASA,MAAT,CAAiBC,cAAjB,CAAiCC,UAAjC,CAA6CC,WAA7C,KAAgE,MAAhE,CAEA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,GAEMC,CAAAA,S,yBAQF,oBAAc,sCAPPC,WAOO,CAPgB,KAOhB,MANPC,SAMO,CANc,KAMd,MALPC,UAKO,CALe,KAKf,MAJPC,OAIO,CAJmB,QAInB,MAHPC,OAGO,CAHkB,EAGlB,MAFPC,UAEO,CAFmB,CAAEC,QAAQ,CAAE,EAAZ,CAAgBC,OAAO,CAAE,EAAzB,CAA6BC,QAAQ,CAAE,EAAvC,CAEnB,CACVb,cAAc,CAAC,IAAD,CAAO,CACjBK,WAAW,CAAEJ,UADI,CAEjBK,SAAS,CAAEL,UAFM,CAGjBM,UAAU,CAAEN,UAHK,CAIjBO,OAAO,CAAEP,UAJQ,CAKjBQ,OAAO,CAAER,UALQ,CAMjBS,UAAU,CAAET,UANK,CAOjBa,cAAc,CAAEf,MAPC,CAQjBgB,YAAY,CAAEhB,MARG,CASjBiB,aAAa,CAAEjB,MATE,CAUjBkB,eAAe,CAAElB,MAVA,CAWjBmB,YAAY,CAAEnB,MAXG,CAYjBoB,UAAU,CAAEpB,MAZK,CAajBqB,YAAY,CAAErB,MAAM,CAACsB,KAbJ,CAcjBC,aAAa,CAAEvB,MAdE,CAejBwB,gBAAgB,CAAExB,MAfD,CAgBjByB,cAAc,CAAEzB,MAhBC,CAiBjB0B,cAAc,CAAE1B,MAjBC,CAkBjB2B,QAAQ,CAAE3B,MAAM,CAACsB,KAlBA,CAmBjBM,WAAW,CAAE5B,MAnBI,CAoBjB6B,KAAK,CAAE7B,MAAM,CAACsB,KApBG,CAAP,CAAd,CAsBH,C,oDAED,wBAAsBQ,OAAtB,CAA8C,CAC1C,KAAKxB,WAAL,CAAmBwB,OAAnB,CACH,C,4BAED,sBAAoBA,OAApB,CAA4C,CACxC,KAAKvB,SAAL,CAAiBuB,OAAjB,CACH,C,6BAED,uBAAqBA,OAArB,CAA6C,CACzC,KAAKtB,UAAL,CAAkBsB,OAAlB,CACH,C,0BAED,oBAAkBC,MAAlB,CAAgD,CAC5C,KAAKtB,OAAL,CAAesB,MAAf,CACH,C,+BAED,0BAA+B,CAC3B,KAAKpB,UAAL,CAAkB,CAAEC,QAAQ,CAAE,EAAZ,CAAgBC,OAAO,CAAE,EAAzB,CAA6BC,QAAQ,CAAE,EAAvC,CAAlB,CACH,C,4BAED,uBAA4B,2BACxB,uBAAAV,SAAS,CAAC4B,UAAV,sEAAsBC,IAAtB,CAA2B,QAA3B,EACH,C,0BAED,qBAA0B,4BACtB,wBAAA7B,SAAS,CAAC4B,UAAV,wEAAsBC,IAAtB,CAA2B,MAA3B,EACH,C,4BAED,uBAA4B,CACxB,GAAI,CAAC,KAAK3B,WAAV,CAAuB,CACnB,KAAKS,cAAL,CAAoB,IAApB,EACA,KAAKK,UAAL,GACH,CAHD,IAGO,CACH,KAAKL,cAAL,CAAoB,KAApB,EACA,KAAKI,YAAL,GACH,EACJ,C,6BAED,wBAA6B,uCACzB,wBAAAf,SAAS,CAAC4B,UAAV,wEAAsBE,EAAtB,CAAyB,SAAzB,CAAoC,UAAM,CACtC/B,WAAW,CAAC,UAAM,CACd,KAAI,CAACa,YAAL,CAAkB,IAAlB,EACA,KAAI,CAACmB,UAAL,CAAgB,SAAhB,EACA,KAAI,CAACzB,OAAL,CAAe,CAAC,CAChBE,QAAQ,CAAE,SADM,CAEhBC,OAAO,CAAE,iBAFO,CAGhBC,QAAQ,CAAE,OAHM,CAAD,CAAf,CAKH,CARU,CAAX,CASH,CAVD,EAWH,C,gCAED,2BAAgC,wCAC5B,wBAAAV,SAAS,CAAC4B,UAAV,wEAAsBE,EAAtB,CAAyB,SAAzB,CAAoC,SAACE,IAAD,CAAOtB,QAAP,CAAoB,CACpDX,WAAW,CAAC,UAAM,CACd,MAAI,CAACQ,UAAL,CAAkB,CACdC,QAAQ,CAAEwB,IAAI,CAACxB,QADD,CAEdC,OAAO,CAAEuB,IAAI,CAACvB,OAFA,CAGdC,QAAQ,CAAEA,QAHI,CAAlB,CAKH,CANU,CAAX,CAOH,CARD,EASH,C,8BAED,yBAA8B,CAC1B,GAAI,KAAKH,UAAL,CAAgBE,OAAhB,CAAwBwB,MAAxB,CAAiC,CAArC,CAAwC,CACpC,KAAK3B,OAAL,8BAAmB,KAAKA,OAAxB,GAAiC,KAAKC,UAAtC,GACH,EACJ,C,8BAED,yBAA8B,CAC1B,GAAI,KAAKL,WAAL,EAAoB,KAAKC,SAAzB,EAAsC,CAAC,KAAKC,UAAhD,CAA4D,CACxD,KAAKS,aAAL,CAAmB,IAAnB,EACA,KAAKN,UAAL,CAAkB,CACdC,QAAQ,CAAE,SADI,CAEdC,OAAO,CAAE,aAFK,CAGdC,QAAQ,CAAE,OAHI,CAAlB,CAKH,CAPD,IAOO,CACH,OACH,EACJ,C,wBAED,mBAAwB,4BACpB,wBAAAV,SAAS,CAAC4B,UAAV,wEAAsBC,IAAtB,CAA2B,WAA3B,EACA,KAAKP,cAAL,GACH,C,2BAED,sBAA2B,wCACvB,wBAAAtB,SAAS,CAAC4B,UAAV,wEAAsBE,EAAtB,CAAyB,UAAzB,CAAqC,UAAM,4BACvC,wBAAA9B,SAAS,CAAC4B,UAAV,wEAAsBC,IAAtB,CAA2B,cAA3B,EACA,MAAI,CAACP,cAAL,GACH,CAHD,EAIH,C,qBAED,gBAAqB,CACjB,KAAKhB,OAAL,CAAe,EAAf,CACA,KAAKK,cAAL,CAAoB,KAApB,EACA,KAAKE,aAAL,CAAmB,KAAnB,EACA,KAAKD,YAAL,CAAkB,KAAlB,EACH,C,yBACJ,CAED,GAAMsB,CAAAA,SAAS,CAAG,GAAIjC,CAAAA,SAAJ,EAAlB,CACA,cAAeiC,CAAAA,SAAf","sourcesContent":["import { action, makeObservable, observable, runInAction } from \"mobx\";\nimport { VisibilityType, IRecentChat } from '../interfaces/index';\nimport userStore from \"./userStore\";\n\nclass ChatStore {\n    public isSearching: boolean = false;\n    public isMatched: boolean = false;\n    public isFinished: boolean = false;\n    public visible: VisibilityType = 'hidden';\n    public chatLog: IRecentChat[] = [];\n    public recentChat: IRecentChat = { nickName: '', message: '', socketID: '' };\n\n    constructor() {\n        makeObservable(this, {\n            isSearching: observable,\n            isMatched: observable,\n            isFinished: observable,\n            visible: observable,\n            chatLog: observable,\n            recentChat: observable,\n            setIsSearching: action,\n            setIsMatched: action,\n            setIsFinished: action,\n            resetRecentChat: action,\n            handleCancel: action,\n            handleFind: action,\n            handleSearch: action.bound,\n            handleMatched: action,\n            handleReceiveMsg: action,\n            handlePushChat: action,\n            handleFinished: action,\n            stopChat: action.bound,\n            chatStopped: action,\n            reset: action.bound,\n        });\n    };\n\n    public setIsSearching(boolean: boolean): void {\n        this.isSearching = boolean;\n    };\n\n    public setIsMatched(boolean: boolean): void {\n        this.isMatched = boolean;\n    };\n\n    public setIsFinished(boolean: boolean): void {\n        this.isFinished = boolean;\n    };\n\n    public setVisible(status: VisibilityType): void {\n        this.visible = status;\n    }\n\n    public resetRecentChat(): void {\n        this.recentChat = { nickName: '', message: '', socketID: '' };\n    };\n\n    public handleCancel(): void {\n        userStore.userSocket?.emit('cancel');\n    };\n\n    public handleFind(): void {\n        userStore.userSocket?.emit('find');\n    };\n\n    public handleSearch(): void {\n        if (!this.isSearching) {\n            this.setIsSearching(true);\n            this.handleFind();\n        } else {\n            this.setIsSearching(false);\n            this.handleCancel();\n        };\n    };\n\n    public handleMatched(): void {\n        userStore.userSocket?.on('matched', () => {\n            runInAction(() => {\n                this.setIsMatched(true);\n                this.setVisible('visible');\n                this.chatLog = [{\n                nickName: 'SERENDY',\n                message: '상대와 대화가 시작되었어요!',\n                socketID: 'admin',\n                }];\n            })\n        });\n    };\n\n    public handleReceiveMsg(): void {\n        userStore.userSocket?.on('receive', (data, socketID) => {\n            runInAction(() => {\n                this.recentChat = {\n                    nickName: data.nickName,\n                    message: data.message,\n                    socketID: socketID\n                };\n            });\n        });\n    };\n\n    public handlePushChat(): void {\n        if (this.recentChat.message.length > 0) {\n            this.chatLog = [...this.chatLog, this.recentChat];\n        };\n    };\n\n    public handleFinished(): void {\n        if (this.isSearching && this.isMatched && !this.isFinished) {\n            this.setIsFinished(true);\n            this.recentChat = {\n                nickName: 'SERENDY',\n                message: '대화가 종료되었어요!',\n                socketID: 'admin',\n            };\n        } else {\n            return;\n        };\n    };\n\n    public stopChat(): void {\n        userStore.userSocket?.emit('stop chat');\n        this.handleFinished();\n    };\n\n    public chatStopped(): void {\n        userStore.userSocket?.on('is ended', () => {\n            userStore.userSocket?.emit('delete other');\n            this.handleFinished();\n        });\n    };\n\n    public reset(): void {\n        this.chatLog = [];\n        this.setIsSearching(false);\n        this.setIsFinished(false);\n        this.setIsMatched(false);\n    };\n};\n\nconst chatStore = new ChatStore();\nexport default chatStore;"]},"metadata":{},"sourceType":"module"}