{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonghan/VSCode/React/Serendy/client/src/pages/SignIn.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { flowResult } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { usePush } from '../hook/usePush';\nimport { useForm } from 'react-hook-form';\nimport Container from '../components/SharedComponents/Container';\nimport SignInBox from '../components/SignIn/SignInBox';\nimport userStore from '../store/userStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignIn = observer(_c = _s(() => {\n  _s();\n\n  const {\n    setError\n  } = useForm();\n  const {\n    push\n  } = usePush();\n\n  const signInWithToken = async () => {\n    const isSuccess = await flowResult(userStore.signInWithToken());\n    if (isSuccess) push('main');\n  };\n\n  const setErrors = () => {\n    setError('account', {\n      type: 'invalid',\n      message: 'ㅤ'\n    });\n    setError('password', {\n      type: 'invalid',\n      message: '아이디나 비밀번호를 다시 확인해주세요'\n    });\n  };\n\n  const onSubmit = async data => {\n    const isSuccess = await userStore.signIn(data);\n\n    if (isSuccess) {\n      push('main');\n    } else {\n      setErrors();\n    }\n\n    ;\n  };\n\n  useEffect(() => {\n    signInWithToken();\n  }, []); //eslint-disable-line\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(SignInBox, {\n      onSubmit: onSubmit,\n      pushFindPW: () => push('findpw'),\n      pushSignUp: () => push('signup')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}, \"/2H9/7rpMq2e5y5nRKTPdw54xD4=\", false, function () {\n  return [useForm, usePush];\n}));\n_c2 = SignIn;\nexport default SignIn;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignIn$observer\");\n$RefreshReg$(_c2, \"SignIn\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/pages/SignIn.tsx"],"names":["React","useEffect","flowResult","observer","usePush","useForm","Container","SignInBox","userStore","SignIn","setError","push","signInWithToken","isSuccess","setErrors","type","message","onSubmit","data","signIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAuC,iBAAvC;AAEA,OAAOC,SAAP,MAAsB,0CAAtB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,MAAMC,MAAgB,GAAGN,QAAQ,SAAC,MAAM;AAAA;;AACpC,QAAM;AAAEO,IAAAA;AAAF,MAAeL,OAAO,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAWP,OAAO,EAAxB;;AAEA,QAAMQ,eAAe,GAAG,YAAY;AAChC,UAAMC,SAAS,GAAG,MAAMX,UAAU,CAACM,SAAS,CAACI,eAAV,EAAD,CAAlC;AACA,QAAIC,SAAJ,EAAeF,IAAI,CAAC,MAAD,CAAJ;AAClB,GAHD;;AAKA,QAAMG,SAAS,GAAG,MAAY;AAC1BJ,IAAAA,QAAQ,CAAC,SAAD,EAAY;AAChBK,MAAAA,IAAI,EAAE,SADU;AAEhBC,MAAAA,OAAO,EAAE;AAFO,KAAZ,CAAR;AAIAN,IAAAA,QAAQ,CAAC,UAAD,EAAa;AACjBK,MAAAA,IAAI,EAAE,SADW;AAEjBC,MAAAA,OAAO,EAAE;AAFQ,KAAb,CAAR;AAIH,GATD;;AAWA,QAAMC,QAAoC,GAAG,MAAOC,IAAP,IAAgB;AACzD,UAAML,SAAS,GAAG,MAAML,SAAS,CAACW,MAAV,CAAiBD,IAAjB,CAAxB;;AACA,QAAIL,SAAJ,EAAe;AACXF,MAAAA,IAAI,CAAC,MAAD,CAAJ;AACH,KAFD,MAEO;AACHG,MAAAA,SAAS;AACZ;;AAAA;AACJ,GAPD;;AASAb,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT,CA7BoC,CA+B5B;;AAER,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,SAAD;AACI,MAAA,QAAQ,EAAEK,QADd;AAEI,MAAA,UAAU,EAAE,MAAMN,IAAI,CAAC,QAAD,CAF1B;AAGI,MAAA,UAAU,EAAE,MAAMA,IAAI,CAAC,QAAD;AAH1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA1CgC;AAAA,UACRN,OADQ,EAEZD,OAFY;AAAA,GAAjC;MAAMK,M;AA4CN,eAAeA,MAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { flowResult } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { usePush } from '../hook/usePush';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { ISignInData } from '../interfaces/index';\nimport Container from '../components/SharedComponents/Container';\nimport SignInBox from '../components/SignIn/SignInBox';\nimport userStore from '../store/userStore';\n\nconst SignIn: React.FC = observer(() => {\n    const { setError } = useForm();\n    const { push } = usePush();\n\n    const signInWithToken = async () => {\n        const isSuccess = await flowResult(userStore.signInWithToken());\n        if (isSuccess) push('main');\n    };\n\n    const setErrors = (): void => {\n        setError('account', {\n            type: 'invalid',\n            message: 'ㅤ'\n        });\n        setError('password', {\n            type: 'invalid',\n            message: '아이디나 비밀번호를 다시 확인해주세요',\n        });\n    };\n\n    const onSubmit: SubmitHandler<ISignInData> = async (data) => {\n        const isSuccess = await userStore.signIn(data);\n        if (isSuccess) {\n            push('main');\n        } else {\n            setErrors();\n        };\n    };\n\n    useEffect(() => {\n        signInWithToken();\n    }, []); //eslint-disable-line\n\n    return (\n        <Container>\n            <SignInBox\n                onSubmit={onSubmit}\n                pushFindPW={() => push('findpw')}\n                pushSignUp={() => push('signup')}\n            />\n        </Container>\n    );\n});\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}