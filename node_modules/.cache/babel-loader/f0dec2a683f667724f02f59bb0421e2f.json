{"ast":null,"code":"import { action, computed, makeObservable, observable } from \"mobx\";\nimport serendyRepository from \"../repository/serendyRepository\";\n\nclass AuthStore {\n  constructor() {\n    this._isLogged = false;\n    this._user = null;\n    makeObservable(this, {\n      _isLogged: observable,\n      _user: observable,\n      isLogged: computed,\n      user: computed,\n      setIsLogged: action,\n      setUser: action\n    });\n  }\n\n  get isLogged() {\n    return this._isLogged;\n  }\n\n  get user() {\n    return this._user;\n  }\n\n  setIsLogged(status) {\n    this._isLogged = status;\n  }\n\n  setUser(user) {\n    this._user = user;\n  }\n\n  async signUp(data) {\n    try {\n      const response = await serendyRepository.signUp(data);\n      alert(response.data.message);\n    } catch (error) {\n      console.log(error);\n      return;\n    }\n  }\n\n}\n\nconst authStore = new AuthStore();\nexport default authStore;","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/src/store/authStore.ts"],"names":["action","computed","makeObservable","observable","serendyRepository","AuthStore","constructor","_isLogged","_user","isLogged","user","setIsLogged","setUser","status","signUp","data","response","alert","message","error","console","log","authStore"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,cAA3B,EAA2CC,UAA3C,QAA6D,MAA7D;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;;AAaA,MAAMC,SAAN,CAAsC;AAKlCC,EAAAA,WAAW,GAAG;AAAA,SAHNC,SAGM,GAHe,KAGf;AAAA,SAFNC,KAEM,GAFgB,IAEhB;AACVN,IAAAA,cAAc,CAAmC,IAAnC,EAAyC;AACnDK,MAAAA,SAAS,EAAEJ,UADwC;AAEnDK,MAAAA,KAAK,EAAEL,UAF4C;AAGnDM,MAAAA,QAAQ,EAAER,QAHyC;AAInDS,MAAAA,IAAI,EAAET,QAJ6C;AAKnDU,MAAAA,WAAW,EAAEX,MALsC;AAMnDY,MAAAA,OAAO,EAAEZ;AAN0C,KAAzC,CAAd;AAQH;;AAEW,MAARS,QAAQ,GAAY;AACpB,WAAO,KAAKF,SAAZ;AACH;;AAEO,MAAJG,IAAI,GAAiB;AACrB,WAAO,KAAKF,KAAZ;AACH;;AAEDG,EAAAA,WAAW,CAACE,MAAD,EAAwB;AAC/B,SAAKN,SAAL,GAAiBM,MAAjB;AACH;;AAEDD,EAAAA,OAAO,CAACF,IAAD,EAAoB;AACvB,SAAKF,KAAL,GAAaE,IAAb;AACH;;AAEW,QAANI,MAAM,CAACC,IAAD,EAAoB;AAC5B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMZ,iBAAiB,CAACU,MAAlB,CAAyBC,IAAzB,CAAvB;AACAE,MAAAA,KAAK,CAACD,QAAQ,CAACD,IAAT,CAAcG,OAAf,CAAL;AACH,KAHD,CAGE,OAAMC,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AACH;AACJ;;AAxCiC;;AA2CtC,MAAMG,SAAS,GAAG,IAAIjB,SAAJ,EAAlB;AACA,eAAeiB,SAAf","sourcesContent":["import { action, computed, makeObservable, observable } from \"mobx\";\nimport serendyRepository from \"../repository/serendyRepository\";\nimport { ISignUpData } from '../components/SignUp/SignUpBox';\nimport { SubmitHandler } from 'react-hook-form';\n\ninterface IUser {\n    nickName: string;\n}\n\ninterface IAuthStore {\n    isLogged: boolean;\n    user: IUser | null;\n}\n\nclass AuthStore implements IAuthStore {\n\n    private _isLogged: boolean = false;\n    private _user: IUser | null = null;\n\n    constructor() {\n        makeObservable<AuthStore, '_isLogged' | '_user'>(this, {\n            _isLogged: observable,\n            _user: observable,\n            isLogged: computed,\n            user: computed,\n            setIsLogged: action,\n            setUser: action,\n        })\n    }\n\n    get isLogged(): boolean {\n        return this._isLogged;\n    }\n\n    get user(): IUser | null {\n        return this._user;\n    }\n\n    setIsLogged(status: boolean): void {\n        this._isLogged = status;\n    }\n\n    setUser(user: IUser): void {\n        this._user = user;\n    }\n\n    async signUp(data: ISignUpData) {\n        try {\n            const response = await serendyRepository.signUp(data);\n            alert(response.data.message);\n        } catch(error) {\n            console.log(error);\n            return;\n        }\n    }\n}\n\nconst authStore = new AuthStore();\nexport default authStore;"]},"metadata":{},"sourceType":"module"}