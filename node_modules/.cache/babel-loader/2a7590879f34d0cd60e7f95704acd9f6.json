{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonghan/VSCode/React/Serendy/src/components/SignUp/SignUpBox.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faLock, faUserAlt, faUserSecret } from '@fortawesome/free-solid-svg-icons';\nimport { useForm } from 'react-hook-form';\nimport { theme } from '../../style/theme';\nimport serendyRepository from '../../repository/serendyRepository';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUpBox = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [isAlready, setIsAlready] = useState(false); // is account checked duplicated ?\n\n  const signUp = async data => {\n    try {\n      const response = await serendyRepository.signUp(data);\n\n      if (response.data.message = 'SignUp Success') {\n        alert('회원가입이 완료되었습니다');\n      }\n\n      ;\n    } catch (err) {\n      console.log(err);\n      alert('현재 서버가 점검중입니다');\n    }\n\n    ;\n  };\n\n  const onSubmit = data => {\n    if (!isAlready) {\n      alert('중복확인을 해주세요');\n      return;\n    }\n\n    signUp(data);\n  };\n\n  useEffect(() => {\n    setIsAlready(false);\n  }, [watch('account')]); // eslint-disable-line\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '24px',\n        marginBottom: '35px',\n        marginTop: '5px'\n      },\n      children: \" \\uC0AC\\uC6A9\\uD558\\uACE0 \\uC2F6\\uC740 \\uC544\\uC774\\uB514\\uC640 \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      children: [/*#__PURE__*/_jsxDEV(AccountRow, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          icon: faUserAlt,\n          color: errors.account ? theme.colors.red : theme.colors.black\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, { ...register('account', {\n            required: '아이디를 입력해주세요',\n            pattern: {\n              value: /^[a-zA-Z0-9]+$/,\n              message: '영문과 숫자만을 조합하여 입력해주세요'\n            },\n            minLength: {\n              value: 5,\n              message: '아이디는 최소 5자 이상입니다'\n            },\n            maxLength: {\n              value: 17,\n              message: '아이디는 최대 17자 입니다'\n            }\n          }),\n          placeholder: \"\\uC544\\uC774\\uB514\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DupliBtn, {\n          onClick: () => setIsAlready(true),\n          children: \" \\uC911\\uBCF5\\uD655\\uC778 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), errors.account ? /*#__PURE__*/_jsxDEV(ErrorMsg, {\n        children: [\" \", errors.account.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 35\n      }, this) : 'ㅤ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          icon: faLock,\n          color: errors.password ? theme.colors.red : theme.colors.black\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, { ...register('password', {\n            required: '비밀번호를 입력해주세요',\n            minLength: {\n              value: 8,\n              message: '비밀번호는 최소 8자 입니다'\n            }\n          }),\n          type: \"password\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), errors.password ? /*#__PURE__*/_jsxDEV(ErrorMsg, {\n        children: [\" \", errors.password.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 36\n      }, this) : 'ㅤ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          icon: faCheck,\n          color: errors.check ? theme.colors.red : theme.colors.black\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, { ...register('check', {\n            required: true,\n            validate: check => check === watch('password')\n          }),\n          type: \"password\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), !errors.password && errors.check ? /*#__PURE__*/_jsxDEV(ErrorMsg, {\n        children: \" \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 53\n      }, this) : 'ㅤ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          icon: faUserSecret,\n          color: errors.secretMessage ? theme.colors.red : theme.colors.black\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, { ...register('secretMessage', {\n            required: '암호 메세지를 작성해주세요',\n            minLength: {\n              value: 3,\n              message: '암호 메세지는 최소 3자 입니다'\n            },\n            maxLength: {\n              value: 20,\n              message: '암호 메시지는 최대 20자 입니다'\n            }\n          }),\n          placeholder: \"\\uC554\\uD638 \\uBA54\\uC138\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), errors.secretMessage ? /*#__PURE__*/_jsxDEV(ErrorMsg, {\n        children: [\" \", errors.secretMessage.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" \\uC554\\uD638 \\uBA54\\uC138\\uC9C0\\uB294 \\uB098\\uC911\\uC5D0 \\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\\uC5D0 \\uC0AC\\uC6A9\\uB429\\uB2C8\\uB2E4 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" \\uC790\\uC2E0\\uB9CC\\uC758 \\uAC1C\\uC131 \\uB118\\uCE58\\uB294 \\uB2E8\\uC5B4\\uB85C \\uC124\\uC815\\uD574\\uBCF4\\uC138\\uC694! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit(onSubmit),\n      children: \" \\uD68C\\uC6D0\\uAC00\\uC785 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUpBox, \"hLFP2o2QVjxsnglGLGTI1RR3hXo=\", false, function () {\n  return [useForm];\n});\n\n_c = SignUpBox;\nexport default SignUpBox;\nconst Box = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    width: 600px;\n    height: 640px;\n`;\n_c2 = Box;\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n_c3 = Column;\nconst Row = styled.div`\n    width: 600px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n`;\n_c4 = Row;\nconst AccountRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 460px;\n`;\n_c5 = AccountRow;\nconst Input = styled.input`\n    all: unset;\n    width: 400px;\n    height: 60px;\n    font-size: 23px;\n    color: ${({\n  theme\n}) => theme.colors.black};\n    border-bottom: 1px solid ${({\n  theme\n}) => theme.colors.black};\n    padding-left: 25px;\n    padding-top: 5px;\n    padding-bottom: 5px;\n    margin-bottom: 20px;\n`;\n_c6 = Input;\nconst Button = styled.button`\n    all: unset;\n    width: 200px;\n    height: 75px;\n    border-radius: 40px;\n    background-color: ${({\n  theme\n}) => theme.colors.mainBlue};\n    color: ${({\n  theme\n}) => theme.colors.white};\n    font-size: 20px;\n    text-align: center;\n    margin-top: 20px;\n    margin-bottom: 50px;\n    cursor: pointer;\n    transition: .3s ease;\n    &:hover {\n        background-color: ${({\n  theme\n}) => theme.colors.white};\n        color: ${({\n  theme\n}) => theme.colors.mainBlue};\n    }\n`;\n_c7 = Button;\nconst DupliBtn = styled(Button)`\n    width: 170px;\n    height: 50px;\n    margin-bottom: 10px;\n    margin-top: 0;\n`;\n_c8 = DupliBtn;\nconst Icon = styled(FontAwesomeIcon)`\n    font-size: 35px;\n    height: 52px;\n    padding-bottom: 20px;\n    border-bottom: 1px solid ${({\n  theme\n}) => theme.colors.black};\n    color: ${({\n  color\n}) => color}\n`;\n_c9 = Icon;\nconst ErrorMsg = styled.div`\n    font-size: 16px;\n    text-align: center;\n    color: ${({\n  theme\n}) => theme.colors.red};\n`;\n_c10 = ErrorMsg;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"SignUpBox\");\n$RefreshReg$(_c2, \"Box\");\n$RefreshReg$(_c3, \"Column\");\n$RefreshReg$(_c4, \"Row\");\n$RefreshReg$(_c5, \"AccountRow\");\n$RefreshReg$(_c6, \"Input\");\n$RefreshReg$(_c7, \"Button\");\n$RefreshReg$(_c8, \"DupliBtn\");\n$RefreshReg$(_c9, \"Icon\");\n$RefreshReg$(_c10, \"ErrorMsg\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/src/components/SignUp/SignUpBox.tsx"],"names":["React","useEffect","useState","styled","FontAwesomeIcon","faCheck","faLock","faUserAlt","faUserSecret","useForm","theme","serendyRepository","SignUpBox","register","handleSubmit","watch","formState","errors","isAlready","setIsAlready","signUp","data","response","message","alert","err","console","log","onSubmit","fontSize","marginBottom","marginTop","account","colors","red","black","required","pattern","value","minLength","maxLength","password","check","validate","secretMessage","Box","div","Column","Row","AccountRow","Input","input","Button","button","mainBlue","white","DupliBtn","Icon","color","ErrorMsg"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faLock, faUserAlt, faUserSecret } from '@fortawesome/free-solid-svg-icons';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { theme } from '../../style/theme';\nimport serendyRepository from '../../repository/serendyRepository';\n\nexport interface ISignUpData {\n    account: string;\n    password: string;\n    check: string;\n    secretMessage: string;\n}\nconst SignUpBox: React.FC = () => {\n    const { register, handleSubmit, watch, formState: { errors } } = useForm<ISignUpData>();\n    const [isAlready, setIsAlready] = useState<boolean>(false); // is account checked duplicated ?\n\n    const signUp = async (data: ISignUpData) => {\n        try{\n            const response = await serendyRepository.signUp(data);\n            if (response.data.message = 'SignUp Success') {\n                alert('회원가입이 완료되었습니다');\n            };\n        } catch(err) {\n            console.log(err);\n            alert('현재 서버가 점검중입니다');\n        };\n    }\n\n    const onSubmit: SubmitHandler<ISignUpData> = (data) => {\n        if (!isAlready) {\n            alert('중복확인을 해주세요');\n            return;\n        }\n        signUp(data);\n    };\n\n    useEffect(() => {\n        setIsAlready(false);\n    }, [watch('account')]); // eslint-disable-line\n\n    return (\n        <Box data-aos='zoom-in'>\n            <div style={{ fontSize: '24px', marginBottom: '35px', marginTop: '5px' }} > 사용하고 싶은 아이디와 비밀번호를 입력해주세요 </div>\n            <Column>\n                <AccountRow>\n                    <Icon icon={faUserAlt}\n                          color={errors.account ? (theme.colors.red) : (theme.colors.black)}\n                          />\n                    <Input {...register('account', {\n                        required: '아이디를 입력해주세요',\n                        pattern: { value: /^[a-zA-Z0-9]+$/, message: '영문과 숫자만을 조합하여 입력해주세요'},\n                        minLength: { value: 5, message: '아이디는 최소 5자 이상입니다' },\n                        maxLength: { value: 17, message: '아이디는 최대 17자 입니다' },\n                    })}\n                    placeholder='아이디'\n                    />\n                    <DupliBtn onClick={() => setIsAlready(true)}> 중복확인 </DupliBtn>\n                </AccountRow>\n                {errors.account ? <ErrorMsg> {errors.account.message} </ErrorMsg> : 'ㅤ'}\n            </Column>\n            <Column>\n                <Row>\n                    <Icon icon={faLock}\n                          color={errors.password ? (theme.colors.red) : (theme.colors.black)}\n                          />\n                    <Input {...register('password', {\n                       required: '비밀번호를 입력해주세요',\n                       minLength: { value: 8, message: '비밀번호는 최소 8자 입니다' }\n                    })}\n                       type='password'\n                       placeholder='비밀번호'\n                    />\n                </Row>\n                {errors.password ? <ErrorMsg> {errors.password.message} </ErrorMsg> : 'ㅤ'}\n            </Column>\n            <Column>\n                <Row>\n                    <Icon icon={faCheck}\n                          color={errors.check ? (theme.colors.red) : (theme.colors.black)}\n                          />\n                    <Input {...register('check', {\n                        required: true,\n                        validate: check => check === watch('password'),\n                    })}\n                       type='password'\n                       placeholder='비밀번호 확인'\n                    />\n                </Row>\n                {!errors.password && errors.check ? <ErrorMsg> 비밀번호가 일치하지 않습니다 </ErrorMsg> : 'ㅤ'}\n            </Column>\n            <Column>\n                <Row>\n                    <Icon icon={faUserSecret}\n                          color={errors.secretMessage ? (theme.colors.red) : (theme.colors.black)}\n                          />\n                    <Input {...register('secretMessage', {\n                        required: '암호 메세지를 작성해주세요',\n                        minLength: { value: 3, message: '암호 메세지는 최소 3자 입니다' },\n                        maxLength: { value: 20, message: '암호 메시지는 최대 20자 입니다' }\n                    })}\n                       placeholder='암호 메세지'\n\n                        />\n                </Row>\n                {errors.secretMessage ? <ErrorMsg> {errors.secretMessage.message} </ErrorMsg> :\n                                        <>\n                                            <div> 암호 메세지는 나중에 비밀번호 찾기에 사용됩니다 </div>\n                                            <div> 자신만의 개성 넘치는 단어로 설정해보세요! </div>\n                                        </>\n                }\n            </Column>\n                <Button onClick={handleSubmit(onSubmit)} > 회원가입 </Button>\n        </Box>\n    )\n}\n\nexport default SignUpBox;\n\nconst Box = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    width: 600px;\n    height: 640px;\n`;\n\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Row = styled.div`\n    width: 600px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst AccountRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 460px;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    width: 400px;\n    height: 60px;\n    font-size: 23px;\n    color: ${({ theme }) => theme.colors.black};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.black};\n    padding-left: 25px;\n    padding-top: 5px;\n    padding-bottom: 5px;\n    margin-bottom: 20px;\n`;\n\nconst Button = styled.button`\n    all: unset;\n    width: 200px;\n    height: 75px;\n    border-radius: 40px;\n    background-color: ${({ theme }) => theme.colors.mainBlue};\n    color: ${({ theme }) => theme.colors.white};\n    font-size: 20px;\n    text-align: center;\n    margin-top: 20px;\n    margin-bottom: 50px;\n    cursor: pointer;\n    transition: .3s ease;\n    &:hover {\n        background-color: ${({ theme }) => theme.colors.white};\n        color: ${({ theme }) => theme.colors.mainBlue};\n    }\n`;\n\nconst DupliBtn = styled(Button)`\n    width: 170px;\n    height: 50px;\n    margin-bottom: 10px;\n    margin-top: 0;\n`;\n\nconst Icon = styled(FontAwesomeIcon)<{ color: string }>`\n    font-size: 35px;\n    height: 52px;\n    padding-bottom: 20px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.black};\n    color: ${({ color }) => color}\n`;\n\nconst ErrorMsg = styled.div`\n    font-size: 16px;\n    text-align: center;\n    color: ${({ theme }) => theme.colors.red};\n`;"]},"metadata":{},"sourceType":"module"}