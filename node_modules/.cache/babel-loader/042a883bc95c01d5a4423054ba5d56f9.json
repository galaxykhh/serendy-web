{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonghan/VSCode/React/Serendy/client/src/pages/PostPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport CenterView from '../components/PublicComponents/CenterView';\nimport Container from '../components/PublicComponents/Container';\nimport PostWindow from '../components/PostPage/PostWindow';\nimport PostSent from '../components/PostPage/PostSent';\nimport userStore from '../store/userStore';\nimport postRepository from '../repository/postRepository';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = observer(_c = _s(() => {\n  _s();\n\n  const [isSent, setIsSent] = useState(false);\n  const postArea = useRef(null);\n\n  const toggleIsSent = () => {\n    setIsSent(!isSent);\n    console.log(isSent);\n  };\n\n  const sendPost = async () => {\n    try {\n      var _postArea$current, _userStore$user, _userStore$user2, _postArea$current2;\n\n      if (((_postArea$current = postArea.current) === null || _postArea$current === void 0 ? void 0 : _postArea$current.value) === '') {\n        return;\n      }\n\n      ;\n      const data = {\n        account: (_userStore$user = userStore.user) === null || _userStore$user === void 0 ? void 0 : _userStore$user.account,\n        nickName: (_userStore$user2 = userStore.user) === null || _userStore$user2 === void 0 ? void 0 : _userStore$user2.nickName,\n        content: (_postArea$current2 = postArea.current) === null || _postArea$current2 === void 0 ? void 0 : _postArea$current2.value\n      };\n      const {\n        data: message\n      } = await postRepository.sendPost(data);\n\n      if (message === 'Send Success') {\n        setIsSent(true);\n      }\n\n      ;\n    } catch (err) {\n      console.log(err);\n      alert('서버가 점검중이에요');\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(CenterView, {\n      children: isSent ? /*#__PURE__*/_jsxDEV(PostSent, {\n        reset: toggleIsSent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(PostWindow, {\n        postSend: sendPost,\n        postArea: postArea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}, \"9Tdb50IAqaAPJbJ2enn6uIOthBI=\"));\n_c2 = PostPage;\nexport default PostPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostPage$observer\");\n$RefreshReg$(_c2, \"PostPage\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/pages/PostPage.tsx"],"names":["React","useRef","useState","observer","CenterView","Container","PostWindow","PostSent","userStore","postRepository","PostPage","isSent","setIsSent","postArea","toggleIsSent","console","log","sendPost","current","value","data","account","user","nickName","content","message","err","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AACA,OAAOC,SAAP,MAAsB,0CAAtB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;AAGA,MAAMC,QAAkB,GAAGP,QAAQ,SAAC,MAAM;AAAA;;AACtC,QAAM,CAACQ,MAAD,EAAUC,SAAV,IAAuBV,QAAQ,CAAU,KAAV,CAArC;AACA,QAAMW,QAAQ,GAAGZ,MAAM,CAAsB,IAAtB,CAAvB;;AAEA,QAAMa,YAAY,GAAG,MAAM;AACvBF,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACH,GAHD;;AAKA,QAAMM,QAAQ,GAAG,YAA2B;AACxC,QAAI;AAAA;;AACA,UAAI,sBAAAJ,QAAQ,CAACK,OAAT,wEAAkBC,KAAlB,MAA4B,EAAhC,EAAoC;AAChC;AACH;;AAAA;AACD,YAAMC,IAAI,GAAG;AACTC,QAAAA,OAAO,qBAAEb,SAAS,CAACc,IAAZ,oDAAE,gBAAgBD,OADhB;AAETE,QAAAA,QAAQ,sBAAEf,SAAS,CAACc,IAAZ,qDAAE,iBAAgBC,QAFjB;AAGTC,QAAAA,OAAO,wBAAEX,QAAQ,CAACK,OAAX,uDAAE,mBAAkBC;AAHlB,OAAb;AAKA,YAAM;AAAEC,QAAAA,IAAI,EAAEK;AAAR,UAAoB,MAAMhB,cAAc,CAACQ,QAAf,CAAwBG,IAAxB,CAAhC;;AACI,UAAKK,OAAO,KAAK,cAAjB,EAAkC;AAC9Bb,QAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AAAA;AACR,KAbD,CAaE,OAAMc,GAAN,EAAW;AACTX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACAC,MAAAA,KAAK,CAAC,YAAD,CAAL;AACH;;AAAA;AACJ,GAlBD;;AAoBA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,UAAD;AAAA,gBACKhB,MAAM,gBACH,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEG;AAAjB;AAAA;AAAA;AAAA;AAAA,cADG,gBAEH,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEG,QAAtB;AACI,QAAA,QAAQ,EAAEJ;AADd;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAzCkC,kCAAnC;MAAMH,Q;AA2CN,eAAeA,QAAf","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { observer } from 'mobx-react';\nimport CenterView from '../components/PublicComponents/CenterView'\nimport Container from '../components/PublicComponents/Container'\nimport PostWindow from '../components/PostPage/PostWindow';\nimport PostSent from '../components/PostPage/PostSent';\nimport postStore from '../store/postStore';\nimport userStore from '../store/userStore';\nimport postRepository from '../repository/postRepository';\n\n\nconst PostPage: React.FC = observer(() => {\n    const [isSent , setIsSent] = useState<boolean>(false);\n    const postArea = useRef<HTMLTextAreaElement>(null);\n\n    const toggleIsSent = () => {\n        setIsSent(!isSent);\n        console.log(isSent);\n    };\n\n    const sendPost = async (): Promise<void> => {\n        try {\n            if (postArea.current?.value === '') {\n                return;\n            };\n            const data = {\n                account: userStore.user?.account,\n                nickName: userStore.user?.nickName,\n                content: postArea.current?.value,\n            };\n            const { data: message } = await postRepository.sendPost(data);\n                if ((message === 'Send Success')) {\n                    setIsSent(true);\n                };\n        } catch(err) {\n            console.log(err);\n            alert('서버가 점검중이에요');\n        };\n    };\n\n    return (\n        <Container>\n            <CenterView>\n                {isSent ? \n                    <PostSent reset={toggleIsSent} /> : \n                    <PostWindow postSend={sendPost}\n                        postArea={postArea}\n                    />\n                }\n            </CenterView>\n        </Container>\n    );\n});\n\nexport default PostPage;\n"]},"metadata":{},"sourceType":"module"}