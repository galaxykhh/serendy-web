{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/hyeonghan/VSCode/React/Serendy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _objectSpread from\"/Users/hyeonghan/VSCode/React/Serendy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import React,{useRef}from'react';import styled from'styled-components';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faUserAlt,faUserSecret}from'@fortawesome/free-solid-svg-icons';import{useForm}from'react-hook-form';import{zoomIn}from'../../style/keyframes';import{theme}from'../../style/theme';import userStore from'../../store/userStore';import{useHistorys}from'../../Hooks/useHistorys';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FindPWBox=function FindPWBox(){var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.formState.errors;var history=useHistorys();var findBtn=useRef(null);var entered=function entered(e){if(e.key==='Enter'){var _findBtn$current;(_findBtn$current=findBtn.current)===null||_findBtn$current===void 0?void 0:_findBtn$current.click();};};var onSubmit=function onSubmit(data){userStore.findPW(data,history.pushLogin);};return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Column,{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Icon,{icon:faUserAlt,color:errors.account?theme.colors.red:theme.colors.white}),/*#__PURE__*/_jsx(Input,_objectSpread({placeholder:\"\\uC544\\uC774\\uB514\"},register('account',{required:'아이디를 입력해주세요'})))]}),errors.account?/*#__PURE__*/_jsxs(ErrorMsg,{children:[\" \",errors.account.message,\" \"]}):'ㅤ']}),/*#__PURE__*/_jsxs(Column,{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Icon,{icon:faUserSecret,color:errors.secretMessage?theme.colors.red:theme.colors.white}),/*#__PURE__*/_jsx(Input,_objectSpread({placeholder:\"\\uC554\\uD638 \\uBA54\\uC138\\uC9C0\",onKeyPress:entered},register('secretMessage',{required:'암호 메세지를 작성해주세요'})))]}),errors.secretMessage&&/*#__PURE__*/_jsxs(ErrorMsg,{children:[\" \",errors.secretMessage.message,\" \"]})]}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmit(onSubmit),ref:findBtn,children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"})]});};export default FindPWBox;var Box=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: flex-start;\\n    align-items: center;\\n    width: 600px;\\n    height: 600px;\\n    animation: \",\" .6s ease;\\n\"])),zoomIn);var Column=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    margin-bottom: 10px;\\n\"])));var Row=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    width: 420px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: center;\\n    align-items: center;\\n    margin-bottom: 30px;\\n    padding-bottom: 10px;\\n    border-bottom: 1px solid \",\";\\n    @media only screen and (max-width: 600px) {\\n        width: 320px;\\n        margin-bottom: 20px;\\n    };\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.white;});var Input=styled.input(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    all: unset;\\n    width: 400px;\\n    height: 40px;\\n    font-size: 21px;\\n    padding-left: 20px;\\n    color: \",\";\\n    @media only screen and (max-width: 600px) {\\n        width: 260px;\\n        font-size: 17px;\\n    };\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.colors.white;});var Button=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n    all: unset;\\n    width: 200px;\\n    height: 55px;\\n    border-radius: 40px;\\n    background-color: \",\";\\n    color: \",\";\\n    font-size: 20px;\\n    text-align: center;\\n    margin-top: 20px;\\n    margin-bottom: 50px;\\n    cursor: pointer;\\n    transition: .3s ease;\\n    &:hover {\\n        background-color: \",\";\\n        color: \",\";\\n    };\\n    @media only screen and (max-width: 600px) {\\n        width: 160px;\\n        font-size: 17px;\\n    };\\n\"])),function(_ref3){var theme=_ref3.theme;return theme.colors.mainBlue;},function(_ref4){var theme=_ref4.theme;return theme.colors.white;},function(_ref5){var theme=_ref5.theme;return theme.colors.white;},function(_ref6){var theme=_ref6.theme;return theme.colors.mainBlue;});var Icon=styled(FontAwesomeIcon)(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n    font-size: 35px;\\n    color: \",\";\\n    @media only screen and (max-width: 600px) {\\n        font-size: 25px;\\n    };\\n\"])),function(_ref7){var color=_ref7.color;return color;});var ErrorMsg=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n    font-size: 16px;\\n    transform: translateY(-10px);\\n    color: \",\";\\n\"])),function(_ref8){var theme=_ref8.theme;return theme.colors.red;});","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/components/FindPW/FindPWBox.tsx"],"names":["React","useRef","styled","FontAwesomeIcon","faUserAlt","faUserSecret","useForm","zoomIn","theme","userStore","useHistorys","FindPWBox","register","handleSubmit","errors","formState","history","findBtn","entered","e","key","current","click","onSubmit","data","findPW","pushLogin","account","colors","red","white","required","message","secretMessage","Box","div","Column","Row","Input","input","Button","button","mainBlue","Icon","color","ErrorMsg"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserAlt, faUserSecret } from '@fortawesome/free-solid-svg-icons';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { zoomIn } from '../../style/keyframes';\nimport { theme } from '../../style/theme';\nimport userStore from '../../store/userStore';\nimport { useHistorys } from '../../Hooks/useHistorys';\nimport { IFindPW } from '../../interfaces/index';\n\nconst FindPWBox: React.FC = () => {\n    const { register, handleSubmit, formState: { errors } } = useForm<IFindPW>();\n    const history = useHistorys();\n    const findBtn = useRef<HTMLButtonElement>(null);\n\n    const entered = (e: React.KeyboardEvent): void => {\n        if (e.key === 'Enter') {\n            findBtn.current?.click();\n        };\n    };\n\n    const onSubmit: SubmitHandler<IFindPW> = (data) => {\n        userStore.findPW(data, history.pushLogin);\n    };\n\n    return (\n        <Box>\n            <Column>\n                <Row>\n                    <Icon icon={faUserAlt}\n                          color={errors.account ? (theme.colors.red) : (theme.colors.white)}\n                    />\n                    <Input placeholder='아이디'\n                           {...register('account', {\n                               required: '아이디를 입력해주세요',\n                            })}\n                            />\n                </Row>\n                {errors.account ? <ErrorMsg> {errors.account.message} </ErrorMsg> : 'ㅤ'}\n            </Column>\n\n            <Column>\n                <Row>\n                    <Icon icon={faUserSecret}\n                          color={errors.secretMessage ? (theme.colors.red) : (theme.colors.white)}\n                          />\n                    <Input placeholder='암호 메세지'\n                           onKeyPress={entered}\n                           {...register('secretMessage', {\n                               required: '암호 메세지를 작성해주세요',\n                           })}\n                           />\n                </Row>\n                {errors.secretMessage && <ErrorMsg> {errors.secretMessage.message} </ErrorMsg>}\n            </Column>\n            <Button onClick={handleSubmit(onSubmit)}\n                    ref={findBtn}\n                    >\n                비밀번호 찾기\n                </Button>\n        </Box>\n    );\n};\nexport default FindPWBox;\n\nconst Box = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    width: 600px;\n    height: 600px;\n    animation: ${zoomIn} .6s ease;\n`;\n\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 10px;\n`;\n\nconst Row = styled.div`\n    width: 420px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 30px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.white};\n    @media only screen and (max-width: 600px) {\n        width: 320px;\n        margin-bottom: 20px;\n    };\n`;\n\nconst Input = styled.input`\n    all: unset;\n    width: 400px;\n    height: 40px;\n    font-size: 21px;\n    padding-left: 20px;\n    color: ${({ theme }) => theme.colors.white};\n    @media only screen and (max-width: 600px) {\n        width: 260px;\n        font-size: 17px;\n    };\n`;\n\nconst Button = styled.button`\n    all: unset;\n    width: 200px;\n    height: 55px;\n    border-radius: 40px;\n    background-color: ${({ theme }) => theme.colors.mainBlue};\n    color: ${({ theme }) => theme.colors.white};\n    font-size: 20px;\n    text-align: center;\n    margin-top: 20px;\n    margin-bottom: 50px;\n    cursor: pointer;\n    transition: .3s ease;\n    &:hover {\n        background-color: ${({ theme }) => theme.colors.white};\n        color: ${({ theme }) => theme.colors.mainBlue};\n    };\n    @media only screen and (max-width: 600px) {\n        width: 160px;\n        font-size: 17px;\n    };\n`;\n\nconst Icon = styled(FontAwesomeIcon) <{\n    color: string\n}>`\n    font-size: 35px;\n    color: ${({ color }) => color};\n    @media only screen and (max-width: 600px) {\n        font-size: 25px;\n    };\n`;\n\nconst ErrorMsg = styled.div`\n    font-size: 16px;\n    transform: translateY(-10px);\n    color: ${({ theme }) => theme.colors.red};\n`;"]},"metadata":{},"sourceType":"module"}