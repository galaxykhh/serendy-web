{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/hyeonghan/VSCode/React/Serendy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React from'react';import styled from'styled-components';import{observer}from'mobx-react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faClipboard,faDoorOpen,faUserAlt}from'@fortawesome/free-solid-svg-icons';import{usePush}from'../../../hook/usePush';import userStore from'../../../store/userStore';import Menu from'./Menu';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UserInfo=observer(function(){var _userStore$user;var start=usePush();var mypage=usePush('mypage');var signOut=function signOut(){var isSuccess=userStore.signOut();if(isSuccess)start.push();};var menus=[{id:1,onClick:mypage.push,icon:faClipboard,text:'정보변경'},{id:2,onClick:signOut,icon:faDoorOpen,text:'로그아웃'}];return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Row,{style:{marginTop:'10px'},children:[/*#__PURE__*/_jsx(UserIcon,{icon:faUserAlt,iconsize:\"24px\"}),/*#__PURE__*/_jsx(Text,{ml:\"7px\",size:\"16px\",children:(_userStore$user=userStore.user)===null||_userStore$user===void 0?void 0:_userStore$user.nickName})]}),/*#__PURE__*/_jsx(Row,{children:menus.map(function(item){return/*#__PURE__*/_jsx(Menu,{item:item},item.id);})})]});});export default UserInfo;var Row=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    align-items: center;\\n    @media only screen and (max-width: 1450px) {\\n        display: grid;\\n        grid-template-areas:\\n        'a'\\n        'b';\\n    };\\n    @media only screen and (max-width: 600px) {\\n        margin-top: 8px;\\n    };\\n\"])));var Container=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-evenly;\\n    align-items: center;\\n    width: 100%;\\n    height: 15%;\\n    min-width: 40px;\\n    min-height: 120px;\\n    @media only screen and (max-width: 600px) {\\n        font-size: 15px;\\n        margin-top: 50px;\\n    };\\n\"])));export var Icon=styled(FontAwesomeIcon)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    font-size: \",\";\\n    color: \",\";\\n    display: \",\";\\n\"])),function(_ref){var iconsize=_ref.iconsize;return iconsize;},function(_ref2){var theme=_ref2.theme;return theme.colors.white;},function(_ref3){var visible=_ref3.visible;return visible;});var UserIcon=styled(Icon)(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n\"])));;export var Text=styled.span(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n    font-size: \",\";\\n    color: \",\";\\n    margin-left: \",\";\\n    margin-top: \",\";\\n    white-space: nowrap;\\n    @media only screen and (max-width: 1450px) {\\n        display: none;\\n    };\\n\"])),function(_ref4){var size=_ref4.size;return size;},function(_ref5){var theme=_ref5.theme;return theme.colors.white;},function(_ref6){var ml=_ref6.ml;return ml;},function(_ref7){var mt=_ref7.mt;return mt;});","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/components/SideBar/UserInfo/UserInfo.tsx"],"names":["React","styled","observer","FontAwesomeIcon","faClipboard","faDoorOpen","faUserAlt","usePush","userStore","Menu","UserInfo","start","mypage","signOut","isSuccess","push","menus","id","onClick","icon","text","marginTop","user","nickName","map","item","Row","div","Container","Icon","iconsize","theme","colors","white","visible","UserIcon","Text","span","size","ml","mt"],"mappings":"2QAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,WAAT,CAAsBC,UAAtB,CAAkCC,SAAlC,KAAmD,mCAAnD,CAEA,OAASC,OAAT,KAAwB,uBAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,wFAEA,GAAMC,CAAAA,QAAkB,CAAGR,QAAQ,CAAC,UAAM,qBACtC,GAAMS,CAAAA,KAAK,CAAGJ,OAAO,EAArB,CACA,GAAMK,CAAAA,MAAM,CAAGL,OAAO,CAAC,QAAD,CAAtB,CAEA,GAAMM,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClB,GAAMC,CAAAA,SAAS,CAAGN,SAAS,CAACK,OAAV,EAAlB,CACA,GAAIC,SAAJ,CAAeH,KAAK,CAACI,IAAN,GAClB,CAHD,CAKA,GAAMC,CAAAA,KAAK,CAAG,CACV,CACIC,EAAE,CAAE,CADR,CAEIC,OAAO,CAAEN,MAAM,CAACG,IAFpB,CAGII,IAAI,CAAEf,WAHV,CAIIgB,IAAI,CAAE,MAJV,CADU,CAOV,CACIH,EAAE,CAAE,CADR,CAEIC,OAAO,CAAEL,OAFb,CAGIM,IAAI,CAAEd,UAHV,CAIIe,IAAI,CAAE,MAJV,CAPU,CAAd,CAeA,mBACI,MAAC,SAAD,yBACI,MAAC,GAAD,EAAK,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAb,CAAZ,wBACI,KAAC,QAAD,EACI,IAAI,CAAEf,SADV,CAEI,QAAQ,CAAC,MAFb,EADJ,cAKI,KAAC,IAAD,EACI,EAAE,CAAC,KADP,CAEI,IAAI,CAAC,MAFT,2BAIKE,SAAS,CAACc,IAJf,0CAIK,gBAAgBC,QAJrB,EALJ,GADJ,cAaI,KAAC,GAAD,WACKP,KAAK,CAACQ,GAAN,CAAU,SAAAC,IAAI,qBACX,KAAC,IAAD,EACI,IAAI,CAAEA,IADV,EAESA,IAAI,CAACR,EAFd,CADW,EAAd,CADL,EAbJ,GADJ,CAwBH,CAhDkC,CAAnC,CAkDA,cAAeP,CAAAA,QAAf,CAEA,GAAMgB,CAAAA,GAAG,CAAGzB,MAAM,CAAC0B,GAAV,8YAAT,CAgBA,GAAMC,CAAAA,SAAS,CAAG3B,MAAM,CAAC0B,GAAV,oXAAf,CAeA,MAAO,IAAME,CAAAA,IAAI,CAAG5B,MAAM,CAACE,eAAD,CAAT,8HACA,kBAAG2B,CAAAA,QAAH,MAAGA,QAAH,OAAkBA,CAAAA,QAAlB,EADA,CAEJ,mBAAGC,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAAN,CAAaC,KAA5B,EAFI,CAGF,mBAAGC,CAAAA,OAAH,OAAGA,OAAH,OAAiBA,CAAAA,OAAjB,EAHE,CAAV,CAMP,GAAMC,CAAAA,QAAQ,CAAGlC,MAAM,CAAC4B,IAAD,CAAT,qEAAd,CAQC,CAED,MAAO,IAAMO,CAAAA,IAAI,CAAGnC,MAAM,CAACoC,IAAV,oQACA,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EADA,CAEJ,mBAAGP,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAAN,CAAaC,KAA5B,EAFI,CAGE,mBAAGM,CAAAA,EAAH,OAAGA,EAAH,OAAYA,CAAAA,EAAZ,EAHF,CAIC,mBAAGC,CAAAA,EAAH,OAAGA,EAAH,OAAYA,CAAAA,EAAZ,EAJD,CAAV","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboard, faDoorOpen, faUserAlt } from '@fortawesome/free-solid-svg-icons';\nimport { DisplayType } from '../../../interfaces/index';\nimport { usePush } from '../../../hook/usePush';\nimport userStore from '../../../store/userStore';\nimport Menu from './Menu';\n\nconst UserInfo: React.FC = observer(() => {\n    const start = usePush();\n    const mypage = usePush('mypage');\n\n    const signOut = () => {\n        const isSuccess = userStore.signOut();\n        if (isSuccess) start.push();\n    };\n    \n    const menus = [\n        {\n            id: 1,\n            onClick: mypage.push,\n            icon: faClipboard,\n            text: '정보변경',    \n        },\n        {\n            id: 2,\n            onClick: signOut,\n            icon: faDoorOpen,\n            text: '로그아웃',\n        },\n    ];\n\n    return (\n        <Container>\n            <Row style={{ marginTop: '10px' }} >\n                <UserIcon \n                    icon={faUserAlt}\n                    iconsize='24px'\n                />\n                <Text\n                    ml='7px'\n                    size='16px'\n                >\n                    {userStore.user?.nickName}\n                </Text>\n            </Row>\n            <Row>\n                {menus.map(item => (\n                    <Menu\n                        item={item}\n                        key={item.id}\n                    />\n                ))}\n            </Row>\n        </Container>\n    );\n});\n\nexport default UserInfo;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    @media only screen and (max-width: 1450px) {\n        display: grid;\n        grid-template-areas:\n        'a'\n        'b';\n    };\n    @media only screen and (max-width: 600px) {\n        margin-top: 8px;\n    };\n`;\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n    width: 100%;\n    height: 15%;\n    min-width: 40px;\n    min-height: 120px;\n    @media only screen and (max-width: 600px) {\n        font-size: 15px;\n        margin-top: 50px;\n    };\n`;\n\nexport const Icon = styled(FontAwesomeIcon)<{ iconsize: string, visible?: DisplayType }>`\n    font-size: ${({ iconsize }) => iconsize};\n    color: ${({ theme }) => theme.colors.white};\n    display: ${({ visible }) => visible};\n`;\n\nconst UserIcon = styled(Icon)`\n`;\n\ninterface IText {\n    size?: string;\n    color?: string;\n    ml?: string;\n    mt?: string;\n};\n\nexport const Text = styled.span<IText>`\n    font-size: ${({ size }) => size};\n    color: ${({ theme }) => theme.colors.white};\n    margin-left: ${({ ml }) => ml};\n    margin-top: ${({ mt }) => mt};\n    white-space: nowrap;\n    @media only screen and (max-width: 1450px) {\n        display: none;\n    };\n`;"]},"metadata":{},"sourceType":"module"}