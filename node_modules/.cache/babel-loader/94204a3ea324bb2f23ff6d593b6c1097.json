{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/hyeonghan/VSCode/React/Serendy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useEffect,useRef}from'react';import styled from'styled-components';import PostBox from'../components/RecipientsPage/PostBox';import CenterView from'../components/PublicComponents/CenterView';import Container from'../components/PublicComponents/Container';import View from'../components/RecipientsPage/View';import postStore from'../store/postStore';import{observer}from'mobx-react';import CircleLoader from'../components/PublicComponents/CircleLoader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RecipientsPage=observer(function(){var commentInput=useRef(null);useEffect(function(){postStore.getReceivedPosts();},[]);//eslint-disable-line\nuseEffect(function(){return function(){postStore.resetReceivedPosts();};},[]);//eslint-disable-line\nreturn/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(CenterView,{children:postStore.isLoading?/*#__PURE__*/_jsx(CircleLoader,{}):/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(PostBox,{receivedPosts:postStore.receivedPosts,showPost:postStore.handleReceivedOne}),/*#__PURE__*/_jsx(View,{currentReceivedPost:postStore.currentReceivedPost,commentInput:commentInput,sendComment:function sendComment(){var _commentInput$current;return postStore.sendComment((_commentInput$current=commentInput.current)===null||_commentInput$current===void 0?void 0:_commentInput$current.value);}})]})})});});export default RecipientsPage;var Row=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    min-width: 100%;\\n    max-width: 100%;\\n    height: 100%;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    align-items: center;\\n\"])));","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/pages/RecipientsPage.tsx"],"names":["React","useEffect","useRef","styled","PostBox","CenterView","Container","View","postStore","observer","CircleLoader","RecipientsPage","commentInput","getReceivedPosts","resetReceivedPosts","isLoading","receivedPosts","handleReceivedOne","currentReceivedPost","sendComment","current","value","Row","div"],"mappings":"uMAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sCAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2CAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0CAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mCAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,6CAAzB,C,wFAEA,GAAMC,CAAAA,cAAwB,CAAGF,QAAQ,CAAC,UAAM,CAC5C,GAAMG,CAAAA,YAAY,CAAGV,MAAM,CAAsB,IAAtB,CAA3B,CAEAD,SAAS,CAAC,UAAM,CACZO,SAAS,CAACK,gBAAV,GACH,CAFQ,CAEN,EAFM,CAAT,CAEQ;AAERZ,SAAS,CAAC,UAAM,CACZ,MAAO,WAAM,CACTO,SAAS,CAACM,kBAAV,GACH,CAFD,CAGH,CAJQ,CAIN,EAJM,CAAT,CAIQ;AAER,mBACI,KAAC,SAAD,wBACI,KAAC,UAAD,WACKN,SAAS,CAACO,SAAV,cACG,KAAC,YAAD,IADH,cAEG,MAAC,GAAD,yBACI,KAAC,OAAD,EAAS,aAAa,CAAEP,SAAS,CAACQ,aAAlC,CACI,QAAQ,CAAER,SAAS,CAACS,iBADxB,EADJ,cAII,KAAC,IAAD,EAAM,mBAAmB,CAAET,SAAS,CAACU,mBAArC,CACI,YAAY,CAAEN,YADlB,CAEI,WAAW,CAAE,uDAAMJ,CAAAA,SAAS,CAACW,WAAV,wBAAsBP,YAAY,CAACQ,OAAnC,gDAAsB,sBAAsBC,KAA5C,CAAN,EAFjB,EAJJ,GAHR,EADJ,EADJ,CAkBH,CA/BwC,CAAzC,CAiCA,cAAeV,CAAAA,cAAf,CAEA,GAAMW,CAAAA,GAAG,CAAGnB,MAAM,CAACoB,GAAV,+OAAT","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport PostBox from '../components/RecipientsPage/PostBox';\nimport CenterView from '../components/PublicComponents/CenterView';\nimport Container from '../components/PublicComponents/Container';\nimport View from '../components/RecipientsPage/View';\nimport postStore from '../store/postStore';\nimport { observer } from 'mobx-react';\nimport CircleLoader from '../components/PublicComponents/CircleLoader';\n\nconst RecipientsPage: React.FC = observer(() => {\n    const commentInput = useRef<HTMLTextAreaElement>(null);\n\n    useEffect(() => {\n        postStore.getReceivedPosts(); \n    }, []); //eslint-disable-line\n\n    useEffect(() => {\n        return () => {\n            postStore.resetReceivedPosts();\n        }\n    }, []); //eslint-disable-line\n\n    return (\n        <Container>\n            <CenterView>\n                {postStore.isLoading ?\n                    <CircleLoader /> :\n                    <Row>\n                        <PostBox receivedPosts={postStore.receivedPosts}\n                            showPost={postStore.handleReceivedOne}\n                        />                        \n                        <View currentReceivedPost={postStore.currentReceivedPost}\n                            commentInput={commentInput}\n                            sendComment={() => postStore.sendComment(commentInput.current?.value)}\n                        />\n                    </Row>   \n                }\n            </CenterView>\n        </Container>\n    );\n});\n\nexport default RecipientsPage;\n\nconst Row = styled.div`\n    min-width: 100%;\n    max-width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n`;"]},"metadata":{},"sourceType":"module"}