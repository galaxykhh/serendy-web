{"ast":null,"code":"import { action, computed, makeObservable, observable } from \"mobx\";\n\nclass AuthStore {\n  constructor() {\n    this._isSignIn = false;\n    this._user = null;\n    makeObservable(this, {\n      _isSignIn: observable,\n      _user: observable,\n      isSignIn: computed,\n      user: computed,\n      setIsSignIn: action.bound,\n      setUser: action,\n      signOut: action.bound\n    });\n  }\n\n  get isSignIn() {\n    return this._isSignIn;\n  }\n\n  get user() {\n    return this._user;\n  }\n\n  setIsSignIn() {\n    this._isSignIn = true;\n  }\n\n  setUser(user) {\n    this._user = user;\n  }\n\n  signOut() {\n    this._isSignIn = false;\n  }\n\n}\n\nconst authStore = new AuthStore();\nexport default authStore;","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/store/authStore.ts"],"names":["action","computed","makeObservable","observable","AuthStore","constructor","_isSignIn","_user","isSignIn","user","setIsSignIn","bound","setUser","signOut","authStore"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,cAA3B,EAA2CC,UAA3C,QAA6D,MAA7D;;AAWA,MAAMC,SAAN,CAAsC;AAKlCC,EAAAA,WAAW,GAAG;AAAA,SAHNC,SAGM,GAHe,KAGf;AAAA,SAFNC,KAEM,GAFgB,IAEhB;AACVL,IAAAA,cAAc,CAAmC,IAAnC,EAAyC;AACnDI,MAAAA,SAAS,EAAEH,UADwC;AAEnDI,MAAAA,KAAK,EAAEJ,UAF4C;AAGnDK,MAAAA,QAAQ,EAAEP,QAHyC;AAInDQ,MAAAA,IAAI,EAAER,QAJ6C;AAKnDS,MAAAA,WAAW,EAAEV,MAAM,CAACW,KAL+B;AAMnDC,MAAAA,OAAO,EAAEZ,MAN0C;AAOnDa,MAAAA,OAAO,EAAEb,MAAM,CAACW;AAPmC,KAAzC,CAAd;AASH;;AAEW,MAARH,QAAQ,GAAY;AACpB,WAAO,KAAKF,SAAZ;AACH;;AAEO,MAAJG,IAAI,GAAiB;AACrB,WAAO,KAAKF,KAAZ;AACH;;AAEDG,EAAAA,WAAW,GAAS;AAChB,SAAKJ,SAAL,GAAiB,IAAjB;AACH;;AAEDM,EAAAA,OAAO,CAACH,IAAD,EAAoB;AACvB,SAAKF,KAAL,GAAaE,IAAb;AACH;;AAEDI,EAAAA,OAAO,GAAS;AACZ,SAAKP,SAAL,GAAiB,KAAjB;AACH;;AAnCiC;;AAsCtC,MAAMQ,SAAS,GAAG,IAAIV,SAAJ,EAAlB;AACA,eAAeU,SAAf","sourcesContent":["import { action, computed, makeObservable, observable } from \"mobx\";\n\ninterface IUser {\n    nickName: string;\n}\n\ninterface IAuthStore {\n    isSignIn: boolean;\n    user: IUser | null;\n}\n\nclass AuthStore implements IAuthStore {\n\n    private _isSignIn: boolean = false;\n    private _user: IUser | null = null;\n\n    constructor() {\n        makeObservable<AuthStore, '_isSignIn' | '_user'>(this, {\n            _isSignIn: observable,\n            _user: observable,\n            isSignIn: computed,\n            user: computed,\n            setIsSignIn: action.bound,\n            setUser: action,\n            signOut: action.bound,\n        })\n    }\n\n    get isSignIn(): boolean {\n        return this._isSignIn;\n    }\n\n    get user(): IUser | null {\n        return this._user;\n    }\n\n    setIsSignIn(): void {\n        this._isSignIn = true;\n    }\n\n    setUser(user: IUser): void {\n        this._user = user;\n    }\n\n    signOut(): void {\n        this._isSignIn = false;\n    }\n}\n\nconst authStore = new AuthStore();\nexport default authStore;"]},"metadata":{},"sourceType":"module"}