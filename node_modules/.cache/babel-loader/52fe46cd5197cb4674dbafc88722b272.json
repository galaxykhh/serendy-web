{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonghan/VSCode/React/Serendy/client/src/pages/PostPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport CenterView from '../components/publicComponents/CenterView';\nimport Container from '../components/publicComponents/Container';\nimport PostWindow from '../components/PostPage/PostWindow';\nimport PostSent from '../components/PostPage/PostSent';\nimport postStore from '../store/postStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = observer(_c = _s(() => {\n  _s();\n\n  const [isSent, setIsSent] = useState(false);\n  const postArea = useRef(null);\n\n  const toggleIsSent = () => {\n    setIsSent(!isSent);\n    console.log(isSent);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(CenterView, {\n      children: isSent ? /*#__PURE__*/_jsxDEV(PostSent, {\n        reset: toggleIsSent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(PostWindow, {\n        postSend: () => {\n          var _postArea$current;\n\n          return postStore.handlePost((_postArea$current = postArea.current) === null || _postArea$current === void 0 ? void 0 : _postArea$current.value, () => toggleIsSent);\n        },\n        postArea: postArea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}, \"9Tdb50IAqaAPJbJ2enn6uIOthBI=\"));\n_c2 = PostPage;\nexport default PostPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostPage$observer\");\n$RefreshReg$(_c2, \"PostPage\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/pages/PostPage.tsx"],"names":["React","useRef","useState","observer","CenterView","Container","PostWindow","PostSent","postStore","PostPage","isSent","setIsSent","postArea","toggleIsSent","console","log","handlePost","current","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AACA,OAAOC,SAAP,MAAsB,0CAAtB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,MAAMC,QAAkB,GAAGN,QAAQ,SAAC,MAAM;AAAA;;AACtC,QAAM,CAACO,MAAD,EAAUC,SAAV,IAAuBT,QAAQ,CAAU,KAAV,CAArC;AACA,QAAMU,QAAQ,GAAGX,MAAM,CAAsB,IAAtB,CAAvB;;AAEA,QAAMY,YAAY,GAAG,MAAM;AACvBF,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACH,GAHD;;AAKA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,UAAD;AAAA,gBACKA,MAAM,gBACH,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEG;AAAjB;AAAA;AAAA;AAAA;AAAA,cADG,gBAEH,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAE;AAAA;;AAAA,iBAAML,SAAS,CAACQ,UAAV,sBAAqBJ,QAAQ,CAACK,OAA9B,sDAAqB,kBAAkBC,KAAvC,EAA8C,MAAML,YAApD,CAAN;AAAA,SAAtB;AACI,QAAA,QAAQ,EAAED;AADd;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CArBkC,kCAAnC;MAAMH,Q;AAuBN,eAAeA,QAAf","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { observer } from 'mobx-react';\nimport CenterView from '../components/publicComponents/CenterView'\nimport Container from '../components/publicComponents/Container'\nimport PostWindow from '../components/PostPage/PostWindow';\nimport PostSent from '../components/PostPage/PostSent';\nimport postStore from '../store/postStore';\n\nconst PostPage: React.FC = observer(() => {\n    const [isSent , setIsSent] = useState<boolean>(false);\n    const postArea = useRef<HTMLTextAreaElement>(null);\n\n    const toggleIsSent = () => {\n        setIsSent(!isSent);\n        console.log(isSent);\n    };\n\n    return (\n        <Container>\n            <CenterView>\n                {isSent ? \n                    <PostSent reset={toggleIsSent} /> : \n                    <PostWindow postSend={() => postStore.handlePost(postArea.current?.value, () => toggleIsSent)}\n                        postArea={postArea}\n                    />\n                }\n            </CenterView>\n        </Container>\n    );\n});\n\nexport default PostPage;\n"]},"metadata":{},"sourceType":"module"}