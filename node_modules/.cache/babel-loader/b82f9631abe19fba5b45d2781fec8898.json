{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonghan/VSCode/React/Serendy/client/src/pages/RecipientsPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport PostBox from '../components/RecipientsPage/PostBox';\nimport CenterView from '../components/publicComponents/CenterView';\nimport Container from '../components/publicComponents/Container';\nimport { theme } from '../style/theme';\nimport Loader from 'react-loader-spinner';\nimport View from '../components/RecipientsPage/View';\nimport postStore from '../store/postStore';\nimport { usePost } from '../hook/usePost';\nimport { observer } from 'mobx-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecipientsPage = observer(_c = _s(() => {\n  _s();\n\n  const post = usePost();\n  useEffect(() => {\n    postStore.getReceivedPosts();\n  }, []); //eslint-disable-line\n\n  useEffect(() => {\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(CenterView, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: !post.isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(PostBox, {\n            receivedPosts: postStore.receivedPosts,\n            showPost: postStore.handleReceivedOne\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(View, {\n            currentReceivedPost: postStore.currentReceivedPost,\n            commentInput: post.commentInput,\n            sendComment: () => {\n              var _post$commentInput$cu;\n\n              return postStore.sendComment((_post$commentInput$cu = post.commentInput.current) === null || _post$commentInput$cu === void 0 ? void 0 : _post$commentInput$cu.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(LoaderBox, {\n          children: /*#__PURE__*/_jsxDEV(Loader, {\n            type: \"Circles\",\n            color: theme.colors.plum,\n            height: 60,\n            width: 60\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}, \"FADeLzhMIJ7aaPdmxjGhOZV6ILo=\", false, function () {\n  return [usePost];\n}));\n_c2 = RecipientsPage;\nexport default RecipientsPage;\nconst Row = styled.div`\n    min-width: 100%;\n    max-width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n`;\n_c3 = Row;\nconst LoaderBox = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n_c4 = LoaderBox;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"RecipientsPage$observer\");\n$RefreshReg$(_c2, \"RecipientsPage\");\n$RefreshReg$(_c3, \"Row\");\n$RefreshReg$(_c4, \"LoaderBox\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/pages/RecipientsPage.tsx"],"names":["React","useEffect","styled","PostBox","CenterView","Container","theme","Loader","View","postStore","usePost","observer","RecipientsPage","post","getReceivedPosts","isLoading","receivedPosts","handleReceivedOne","currentReceivedPost","commentInput","sendComment","current","value","colors","plum","Row","div","LoaderBox"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AACA,OAAOC,SAAP,MAAsB,0CAAtB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,mCAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;;;AAEA,MAAMC,cAAwB,GAAGD,QAAQ,SAAC,MAAM;AAAA;;AAC5C,QAAME,IAAI,GAAGH,OAAO,EAApB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,SAAS,CAACK,gBAAV;AACH,GAFQ,EAEN,EAFM,CAAT,CAH4C,CAKpC;;AAERb,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAM,CAEZ,CAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,UAAD;AAAA,6BACQ,QAAC,GAAD;AAAA,kBACK,CAACY,IAAI,CAACE,SAAN,gBACG;AAAA,kCACI,QAAC,OAAD;AAAS,YAAA,aAAa,EAAEN,SAAS,CAACO,aAAlC;AACQ,YAAA,QAAQ,EAAEP,SAAS,CAACQ;AAD5B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,IAAD;AAAM,YAAA,mBAAmB,EAAER,SAAS,CAACS,mBAArC;AACI,YAAA,YAAY,EAAEL,IAAI,CAACM,YADvB;AAEI,YAAA,WAAW,EAAE;AAAA;;AAAA,qBAAMV,SAAS,CAACW,WAAV,0BAAsBP,IAAI,CAACM,YAAL,CAAkBE,OAAxC,0DAAsB,sBAA2BC,KAAjD,CAAN;AAAA;AAFjB;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA,wBADH,gBAUG,QAAC,SAAD;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,SAAb;AACQ,YAAA,KAAK,EAAEhB,KAAK,CAACiB,MAAN,CAAaC,IAD5B;AAEQ,YAAA,MAAM,EAAE,EAFhB;AAGQ,YAAA,KAAK,EAAE;AAHf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAXR;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAvCwC;AAAA,UACxBd,OADwB;AAAA,GAAzC;MAAME,c;AAyCN,eAAeA,cAAf;AAEA,MAAMa,GAAG,GAAGvB,MAAM,CAACwB,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,G;AAUN,MAAME,SAAS,GAAGzB,MAAM,CAACwB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMC,S","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport PostBox from '../components/RecipientsPage/PostBox';\nimport CenterView from '../components/publicComponents/CenterView';\nimport Container from '../components/publicComponents/Container';\nimport { theme } from '../style/theme';\nimport Loader from 'react-loader-spinner';\nimport View from '../components/RecipientsPage/View';\nimport postStore from '../store/postStore';\nimport { usePost } from '../hook/usePost';\nimport { observer } from 'mobx-react';\n\nconst RecipientsPage: React.FC = observer(() => {\n    const post = usePost();\n\n    useEffect(() => {\n        postStore.getReceivedPosts(); \n    }, []); //eslint-disable-line\n\n    useEffect(() => {\n        return () => {\n\n        }\n    }, []);\n\n    return (\n        <Container>\n            <CenterView>\n                    <Row>\n                        {!post.isLoading ?\n                            <>\n                                <PostBox receivedPosts={postStore.receivedPosts}\n                                        showPost={postStore.handleReceivedOne}\n                                        />                        \n                                <View currentReceivedPost={postStore.currentReceivedPost}\n                                    commentInput={post.commentInput}\n                                    sendComment={() => postStore.sendComment(post.commentInput.current?.value)}\n                                    />\n                            </> :\n                            <LoaderBox>\n                                <Loader type=\"Circles\"\n                                        color={theme.colors.plum}\n                                        height={60}\n                                        width={60}\n                                        />\n                            </LoaderBox>\n                        }\n                    </Row>\n            </CenterView>\n        </Container>\n    );\n});\n\nexport default RecipientsPage;\n\nconst Row = styled.div`\n    min-width: 100%;\n    max-width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nconst LoaderBox = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;"]},"metadata":{},"sourceType":"module"}