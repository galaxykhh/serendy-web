{"ast":null,"code":"import { action, computed, makeObservable, observable } from \"mobx\";\n\nclass AuthStore {\n  constructor() {\n    this._account = '';\n    this._password = '';\n    this._userData = {\n      account: '',\n      password: ''\n    };\n    this._isLogged = false;\n    this.nickName = 'nickname';\n    makeObservable(this, {\n      _account: observable,\n      _password: observable,\n      _userData: observable,\n      _isLogged: observable,\n      account: computed,\n      password: computed,\n      userData: computed,\n      isLogged: computed,\n      setAccount: action,\n      setPassword: action\n    });\n  }\n\n  get account() {\n    return this._account;\n  }\n\n  get password() {\n    return this._password;\n  }\n\n  get userData() {\n    return this._userData;\n  }\n\n  get isLogged() {\n    return this._isLogged;\n  }\n\n  setAccount(account) {\n    this._account = account;\n  }\n\n  setPassword(password) {\n    this._password = password;\n  }\n\n}\n\nconst authStore = new AuthStore();\nexport default authStore;","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/src/store/authStore.ts"],"names":["action","computed","makeObservable","observable","AuthStore","constructor","_account","_password","_userData","account","password","_isLogged","nickName","userData","isLogged","setAccount","setPassword","authStore"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,cAA3B,EAA2CC,UAA3C,QAA6D,MAA7D;;AAQA,MAAMC,SAAN,CAAoC;AAShCC,EAAAA,WAAW,GAAG;AAAA,SAPNC,QAOM,GAPa,EAOb;AAAA,SANNC,SAMM,GANc,EAMd;AAAA,SALNC,SAKM,GALgB;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,QAAQ,EAAE;AAAzB,KAKhB;AAAA,SAJNC,SAIM,GAJe,KAIf;AAAA,SAFdC,QAEc,GAFK,UAEL;AACVV,IAAAA,cAAc,CAAkE,IAAlE,EAAwE;AAClFI,MAAAA,QAAQ,EAAEH,UADwE;AAElFI,MAAAA,SAAS,EAAEJ,UAFuE;AAGlFK,MAAAA,SAAS,EAAEL,UAHuE;AAIlFQ,MAAAA,SAAS,EAAER,UAJuE;AAKlFM,MAAAA,OAAO,EAAER,QALyE;AAMlFS,MAAAA,QAAQ,EAAET,QANwE;AAOlFY,MAAAA,QAAQ,EAAEZ,QAPwE;AAQlFa,MAAAA,QAAQ,EAAEb,QARwE;AASlFc,MAAAA,UAAU,EAAEf,MATsE;AAUlFgB,MAAAA,WAAW,EAAEhB;AAVqE,KAAxE,CAAd;AAYH;;AACU,MAAPS,OAAO,GAAW;AAClB,WAAO,KAAKH,QAAZ;AACH;;AAEW,MAARI,QAAQ,GAAW;AACnB,WAAO,KAAKH,SAAZ;AACH;;AAEW,MAARM,QAAQ,GAAa;AACrB,WAAO,KAAKL,SAAZ;AACH;;AAEW,MAARM,QAAQ,GAAY;AACpB,WAAO,KAAKH,SAAZ;AACH;;AAEDI,EAAAA,UAAU,CAACN,OAAD,EAAwB;AAC9B,SAAKH,QAAL,GAAgBG,OAAhB;AACH;;AAEDO,EAAAA,WAAW,CAACN,QAAD,EAAyB;AAChC,SAAKH,SAAL,GAAiBG,QAAjB;AACH;;AA7C+B;;AAgDpC,MAAMO,SAAS,GAAG,IAAIb,SAAJ,EAAlB;AACA,eAAea,SAAf","sourcesContent":["import { action, computed, makeObservable, observable } from \"mobx\";\nimport serendyRepository from \"../repository/serendyRepository\";\n\ninterface IAccount {\n    account: string;\n    password: string;\n}\n\nclass AuthStore implements IAccount {\n\n    private _account: string = '';\n    private _password: string = '';\n    private _userData: IAccount = { account: '', password: '' };\n    private _isLogged: boolean = false;\n    \n    nickName: string = 'nickname';\n\n    constructor() {\n        makeObservable<AuthStore, '_account' | '_password' | '_userData' | '_isLogged'>(this, {\n            _account: observable,\n            _password: observable,\n            _userData: observable,\n            _isLogged: observable,\n            account: computed,\n            password: computed,\n            userData: computed,\n            isLogged: computed,\n            setAccount: action,\n            setPassword: action,\n        })\n    }\n    get account(): string {\n        return this._account;\n    };\n\n    get password(): string {\n        return this._password;\n    };\n\n    get userData(): IAccount {\n        return this._userData;\n    }\n\n    get isLogged(): boolean {\n        return this._isLogged;\n    }\n\n    setAccount(account: string): void {\n        this._account = account;\n    };\n\n    setPassword(password: string): void {\n        this._password = password;\n    };\n}\n\nconst authStore = new AuthStore();\nexport default authStore;"]},"metadata":{},"sourceType":"module"}