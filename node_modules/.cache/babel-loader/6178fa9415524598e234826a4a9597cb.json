{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonghan/VSCode/React/Serendy/client/src/components/SignUp/SignUpBox.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faLock, faUserAlt, faUserSecret } from '@fortawesome/free-solid-svg-icons';\nimport { useForm } from 'react-hook-form';\nimport { theme } from '../../style/theme';\nimport authRepository from '../../repository/authRepository';\nimport { zoomIn } from '../../style/keyframes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUpBox = ({\n  submit\n}) => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setError,\n    trigger,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [isAlready, setIsAlready] = useState(false); // 계정 중복체크\n  // 회원가입\n\n  const signUp = async data => {\n    try {\n      const {\n        data: {\n          message\n        }\n      } = await authRepository.signUp(data);\n\n      if (message === 'SignUp Success') {\n        submit();\n      }\n    } catch (err) {\n      alert('현재 서버가 점검중입니다');\n    }\n\n    ;\n  }; // 중복체크\n\n\n  const accountCheck = async () => {\n    await trigger('account'); // 트리거 호출해서 에러 확인\n\n    if (errors.account) {\n      // 아이디 형식에 문제가 있으면 리턴\n      return;\n    } else {\n      const account = watch('account');\n      const {\n        data: {\n          message\n        }\n      } = await authRepository.accountCheck(account);\n\n      if (message === 'available') {\n        return setIsAlready(true);\n      } else if (message === 'already exist') {\n        setError('account', {\n          message: '이미 사용중인 아이디입니다'\n        });\n        setIsAlready(false);\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  const onSubmit = data => {\n    if (!isAlready) {\n      alert('중복확인을 해주세요');\n      return;\n    }\n\n    ;\n    signUp(data);\n  }; // account 인풋창 변경시 중복확인 해제\n\n\n  useEffect(() => {\n    setIsAlready(false);\n  }, [watch('account')]); // eslint-disable-line\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: faUserAlt,\n            color: errors.account ? theme.colors.red : theme.colors.white\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\uC544\\uC774\\uB514\",\n            ...register('account', {\n              required: '아이디를 입력해주세요',\n              pattern: {\n                value: /^[a-zA-Z0-9]+$/,\n                message: '영문과 숫자만을 조합하여 입력해주세요'\n              },\n              minLength: {\n                value: 6,\n                message: '아이디는 최소 6자리입니다'\n              },\n              maxLength: {\n                value: 15,\n                message: '아이디는 최대 15자리입니다'\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(DupliBtn, {\n            onClick: accountCheck,\n            children: \" \\uC911\\uBCF5\\uD655\\uC778 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), !isAlready ? !errors.account ? /*#__PURE__*/_jsxDEV(Msg, {\n          children: \"\\u3164\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 50\n        }, this) : /*#__PURE__*/_jsxDEV(ErrorMsg, {\n          children: [\" \", errors.account.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 65\n        }, this) : /*#__PURE__*/_jsxDEV(Msg, {\n          style: {\n            color: theme.colors.green\n          },\n          children: \" \\uC0AC\\uC6A9\\uAC00\\uB2A5\\uD55C \\uC544\\uC774\\uB514\\uC785\\uB2C8\\uB2E4 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 116\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: faLock,\n            color: errors.password ? theme.colors.red : theme.colors.white\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            autoComplete: \"off\",\n            type: \"password\",\n            ...register('password', {\n              required: '비밀번호를 입력해주세요',\n              minLength: {\n                value: 8,\n                message: '비밀번호는 최소 8자리입니다'\n              },\n              maxLength: {\n                value: 20,\n                message: '비밀번호는 최대 20자리입니다'\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), errors.password ? /*#__PURE__*/_jsxDEV(ErrorMsg, {\n          children: [\" \", errors.password.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 36\n        }, this) : /*#__PURE__*/_jsxDEV(Msg, {\n          children: \"\\u3164\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 87\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: faCheck,\n            color: errors.check ? theme.colors.red : theme.colors.white\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n            autoComplete: \"off\",\n            type: \"password\",\n            ...register('check', {\n              required: true,\n              validate: check => check === watch('password')\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), !errors.password && errors.check ? /*#__PURE__*/_jsxDEV(ErrorMsg, {\n          children: \" \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 53\n        }, this) : /*#__PURE__*/_jsxDEV(Msg, {\n          children: \"\\u3164\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 94\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            icon: faUserSecret,\n            color: errors.secretMessage ? theme.colors.red : theme.colors.white\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\uC554\\uD638 \\uBA54\\uC138\\uC9C0\",\n            ...register('secretMessage', {\n              required: '암호 메세지를 작성해주세요',\n              minLength: {\n                value: 3,\n                message: '암호 메세지는 최소 3자 입니다'\n              },\n              maxLength: {\n                value: 20,\n                message: '암호 메시지는 최대 20자 입니다'\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), errors.secretMessage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ErrorMsg, {\n            children: [\" \", errors.secretMessage.message, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Msg, {\n            children: \"\\u3164\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Msg, {\n            children: \" \\uC554\\uD638 \\uBA54\\uC138\\uC9C0\\uB294 \\uB098\\uC911\\uC5D0 \\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\\uC5D0 \\uC0AC\\uC6A9\\uB429\\uB2C8\\uB2E4 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Msg, {\n            children: \" \\uC790\\uC2E0\\uB9CC\\uC758 \\uAC1C\\uC131 \\uB118\\uCE58\\uB294 \\uB2E8\\uC5B4\\uB85C \\uC124\\uC815\\uD574\\uBCF4\\uC138\\uC694! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUpBox, \"hKViMUsb3ur3SfDU8vBmZz43h9s=\", false, function () {\n  return [useForm];\n});\n\n_c = SignUpBox;\nexport default SignUpBox;\nconst Box = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    width: 600px;\n    height: 640px;\n    animation: ${zoomIn} .6s ease;\n`;\n_c2 = Box;\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 10px;\n`;\n_c3 = Column;\nconst Row = styled.div`\n    position: relative;\n    width: 420px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 30px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid ${({\n  theme\n}) => theme.colors.white};\n    @media only screen and (max-width: 600px) {\n        width: 320px;\n        margin-bottom: 20px;\n    };\n`;\n_c4 = Row;\nconst Input = styled.input`\n    all: unset;\n    width: 350px;\n    height: 40px;\n    font-size: 21px;\n    padding-left: 20px;\n    color: ${({\n  theme\n}) => theme.colors.white};\n    @media only screen and (max-width: 600px) {\n        width: 260px;\n        font-size: 17px;\n    };\n`;\n_c5 = Input;\nconst Button = styled.button`\n    all: unset;\n    width: 200px;\n    height: 55px;\n    border-radius: 40px;\n    background-color: ${({\n  theme\n}) => theme.colors.mainBlue};\n    color: ${({\n  theme\n}) => theme.colors.white};\n    font-size: 20px;\n    text-align: center;\n    margin-top: 20px;\n    margin-bottom: 50px;\n    cursor: pointer;\n    transition: .3s ease;\n    &:hover {\n        background-color: ${({\n  theme\n}) => theme.colors.white};\n        color: ${({\n  theme\n}) => theme.colors.mainBlue};\n    };\n    @media only screen and (max-width: 600px) {\n        width: 170px;\n        height: 45px;\n        font-size: 17px;\n    };\n`;\n_c6 = Button;\nconst DupliBtn = styled(Button)`\n    position: absolute;\n    right: 0px;\n    top: 0px;\n    width: 90px;\n    height: 40px;\n    font-size: 19px;\n    margin-bottom: 10px;\n    margin-top: 0;\n    @media only screen and (max-width: 600px) {\n        width: 90px;\n        height: 30px;\n        font-size: 15px;\n    };\n`;\n_c7 = DupliBtn;\nconst Icon = styled(FontAwesomeIcon)`\n    font-size: 35px;\n    color: ${({\n  color\n}) => color};\n    @media only screen and (max-width: 600px) {\n        font-size: 25px;\n    };\n`;\n_c8 = Icon;\nconst ErrorMsg = styled.div`\n    font-size: 16px;\n    transform: translateY(-10px);\n    color: ${({\n  theme\n}) => theme.colors.red};\n`;\n_c9 = ErrorMsg;\nconst Msg = styled(ErrorMsg)`\n    color: ${({\n  theme\n}) => theme.colors.white};\n`;\n_c10 = Msg;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"SignUpBox\");\n$RefreshReg$(_c2, \"Box\");\n$RefreshReg$(_c3, \"Column\");\n$RefreshReg$(_c4, \"Row\");\n$RefreshReg$(_c5, \"Input\");\n$RefreshReg$(_c6, \"Button\");\n$RefreshReg$(_c7, \"DupliBtn\");\n$RefreshReg$(_c8, \"Icon\");\n$RefreshReg$(_c9, \"ErrorMsg\");\n$RefreshReg$(_c10, \"Msg\");","map":{"version":3,"sources":["/Users/hyeonghan/VSCode/React/Serendy/client/src/components/SignUp/SignUpBox.tsx"],"names":["React","useEffect","useState","styled","FontAwesomeIcon","faCheck","faLock","faUserAlt","faUserSecret","useForm","theme","authRepository","zoomIn","SignUpBox","submit","register","handleSubmit","watch","setError","trigger","formState","errors","isAlready","setIsAlready","signUp","data","message","err","alert","accountCheck","account","onSubmit","colors","red","white","required","pattern","value","minLength","maxLength","color","green","password","check","validate","secretMessage","Box","div","Column","Row","Input","input","Button","button","mainBlue","DupliBtn","Icon","ErrorMsg","Msg"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faLock, faUserAlt, faUserSecret } from '@fortawesome/free-solid-svg-icons';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { theme } from '../../style/theme';\nimport authRepository from '../../repository/authRepository';\nimport { zoomIn } from '../../style/keyframes';\nimport { ISignUpData } from '../../interfaces';\n\nconst SignUpBox: React.FC<{ submit: () => void }>= ({ submit }) => {\n    const { register, handleSubmit, watch, setError, trigger, formState: { errors } } = useForm<ISignUpData>();\n    const [ isAlready, setIsAlready ] = useState<boolean>(false); // 계정 중복체크\n\n    // 회원가입\n    const signUp = async (data: ISignUpData): Promise<void> => {\n        try{\n            const { data: { message }} = await authRepository.signUp(data);\n            if ((message === 'SignUp Success')) {\n                submit();\n            }\n        } catch(err) {\n            alert('현재 서버가 점검중입니다');\n        };\n    };\n\n    // 중복체크\n    const accountCheck = async () => {\n        await trigger('account'); // 트리거 호출해서 에러 확인\n        if (errors.account) { // 아이디 형식에 문제가 있으면 리턴\n            return\n        } else {\n            const account = watch('account');\n            const { data: { message }} = await authRepository.accountCheck(account);\n            if ((message === 'available' )) {\n                return setIsAlready(true);\n            } else if ((message === 'already exist')){\n                setError('account', {\n                    message: '이미 사용중인 아이디입니다'\n                });\n                setIsAlready(false);\n            };\n        };\n    };\n\n    const onSubmit: SubmitHandler<ISignUpData> = (data) => {\n        if (!isAlready) {\n            alert('중복확인을 해주세요');\n            return;\n        };\n        signUp(data);\n    };\n\n    // account 인풋창 변경시 중복확인 해제\n    useEffect(() => {\n        setIsAlready(false);\n    }, [watch('account')]); // eslint-disable-line\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} >\n        <Box>\n            <Column>\n                <Row>\n                    <Icon icon={faUserAlt}\n                        color={errors.account ? (theme.colors.red) : (theme.colors.white)}\n                    />\n                    <Input placeholder='아이디'\n                        {...register('account', {\n                            required: '아이디를 입력해주세요',\n                            pattern: { value: /^[a-zA-Z0-9]+$/, message: '영문과 숫자만을 조합하여 입력해주세요'},\n                            minLength: { value: 6, message: '아이디는 최소 6자리입니다' },\n                            maxLength: { value: 15, message: '아이디는 최대 15자리입니다' },\n                        })}\n                    />\n                    <DupliBtn onClick={accountCheck}> 중복확인 </DupliBtn>\n                </Row>\n                {!isAlready ? (!errors.account ? <Msg>ㅤ</Msg> : <ErrorMsg> {errors.account.message} </ErrorMsg>) : <Msg style={{ color: theme.colors.green }}> 사용가능한 아이디입니다 </Msg> }\n            </Column>\n            <Column>\n                <Row>\n                    <Icon icon={faLock}\n                        color={errors.password ? (theme.colors.red) : (theme.colors.white)}\n                    />\n                    \n                    <Input placeholder='비밀번호'\n                        autoComplete='off'\n                        type='password'\n                        {...register('password', {\n                            required: '비밀번호를 입력해주세요',\n                            minLength: { value: 8, message: '비밀번호는 최소 8자리입니다' },\n                            maxLength: { value: 20, message: '비밀번호는 최대 20자리입니다' }\n                        })}\n                    />\n                </Row>\n                {errors.password ? <ErrorMsg> {errors.password.message} </ErrorMsg> : <Msg>ㅤ</Msg>}\n            </Column>\n            <Column>\n                <Row>\n                    <Icon icon={faCheck}\n                        color={errors.check ? (theme.colors.red) : (theme.colors.white)}\n                    />\n                    <Input placeholder='비밀번호 확인'\n                        autoComplete='off'\n                        type='password'\n                        {...register('check', {\n                            required: true,\n                            validate: check => check === watch('password'),\n                        })}\n                    />\n                </Row>\n                {!errors.password && errors.check ? <ErrorMsg> 비밀번호가 일치하지 않습니다 </ErrorMsg> : <Msg>ㅤ</Msg>}\n            </Column>\n            <Column>\n                <Row>\n                    <Icon icon={faUserSecret}\n                        color={errors.secretMessage ? (theme.colors.red) : (theme.colors.white)}\n                    />\n                    <Input placeholder='암호 메세지'\n                        {...register('secretMessage', {\n                            required: '암호 메세지를 작성해주세요',\n                            minLength: { value: 3, message: '암호 메세지는 최소 3자 입니다' },\n                            maxLength: { value: 20, message: '암호 메시지는 최대 20자 입니다' }\n                        })}\n                    />\n                </Row>\n                {errors.secretMessage ? \n                    <>\n                        <ErrorMsg> {errors.secretMessage.message} </ErrorMsg>\n                        <Msg>ㅤ</Msg>\n                    </> :\n                    <>\n                        <Msg> 암호 메세지는 나중에 비밀번호 찾기에 사용됩니다 </Msg>\n                        <Msg> 자신만의 개성 넘치는 단어로 설정해보세요! </Msg>\n                    </>\n                }\n            </Column>\n                <Button type='submit'>\n                    확인\n                </Button>\n        </Box>\n        </form>\n    );\n};\n\nexport default SignUpBox;\n\nconst Box = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    width: 600px;\n    height: 640px;\n    animation: ${zoomIn} .6s ease;\n`;\n\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 10px;\n`;\n\nconst Row = styled.div`\n    position: relative;\n    width: 420px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 30px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.white};\n    @media only screen and (max-width: 600px) {\n        width: 320px;\n        margin-bottom: 20px;\n    };\n`;\n\nconst Input = styled.input`\n    all: unset;\n    width: 350px;\n    height: 40px;\n    font-size: 21px;\n    padding-left: 20px;\n    color: ${({ theme }) => theme.colors.white};\n    @media only screen and (max-width: 600px) {\n        width: 260px;\n        font-size: 17px;\n    };\n`;\n\nconst Button = styled.button`\n    all: unset;\n    width: 200px;\n    height: 55px;\n    border-radius: 40px;\n    background-color: ${({ theme }) => theme.colors.mainBlue};\n    color: ${({ theme }) => theme.colors.white};\n    font-size: 20px;\n    text-align: center;\n    margin-top: 20px;\n    margin-bottom: 50px;\n    cursor: pointer;\n    transition: .3s ease;\n    &:hover {\n        background-color: ${({ theme }) => theme.colors.white};\n        color: ${({ theme }) => theme.colors.mainBlue};\n    };\n    @media only screen and (max-width: 600px) {\n        width: 170px;\n        height: 45px;\n        font-size: 17px;\n    };\n`;\n\nconst DupliBtn = styled(Button)`\n    position: absolute;\n    right: 0px;\n    top: 0px;\n    width: 90px;\n    height: 40px;\n    font-size: 19px;\n    margin-bottom: 10px;\n    margin-top: 0;\n    @media only screen and (max-width: 600px) {\n        width: 90px;\n        height: 30px;\n        font-size: 15px;\n    };\n`;\n\nconst Icon = styled(FontAwesomeIcon)<{ color: string }>`\n    font-size: 35px;\n    color: ${({ color }) => color};\n    @media only screen and (max-width: 600px) {\n        font-size: 25px;\n    };\n`;\n\nconst ErrorMsg = styled.div`\n    font-size: 16px;\n    transform: translateY(-10px);\n    color: ${({ theme }) => theme.colors.red};\n`;\n\nconst Msg = styled(ErrorMsg)`\n    color: ${({ theme }) => theme.colors.white};\n`;"]},"metadata":{},"sourceType":"module"}